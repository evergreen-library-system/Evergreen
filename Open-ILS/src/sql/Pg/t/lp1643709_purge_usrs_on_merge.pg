BEGIN;

INSERT INTO action.hold_request(usr, requestor, pickup_lib, request_lib, selection_ou, hold_type, target)
    VALUES (11, 11, 1, 1, 1, 'T', 22);
INSERT INTO action.hold_request_reset_reason_entry(reset_reason, hold, requestor)
    VALUES (2, CURRVAL('action.hold_request_id_seq'::regclass), 58);
 
SELECT * FROM actor.usr_merge(58,4,TRUE,TRUE,TRUE);
 
SELECT plan(4);
 
SELECT is(
    (SELECT id FROM actor.usr WHERE family_name ~* 'PURGED' AND id = 58)::INTEGER,
    58::INTEGER,
    'actor.usr values updated by usr delete/obliterate'
);
 
SELECT is_empty(
    'SELECT id FROM actor.usr_address WHERE usr = 58',
    'actor.usr_address entry is correctly deleted'
);
 
SELECT is_empty(
    'SELECT id FROM actor.card WHERE usr = 58',
    'actor.card entry is correctly deleted'
);

SELECT is(
    (SELECT requestor FROM action.hold_request_reset_reason_entry WHERE id = CURRVAL('action.hold_request_reset_reason_entry_id_seq'::regclass)::INTEGER),
    4::INTEGER,
    'Requestor of hold reset entry is now dest_usr'
);
 
-- Finish the tests and clean up.
SELECT * FROM finish();
ROLLBACK;
