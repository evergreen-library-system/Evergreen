--Upgrade Script for 3.12.3 to 3.13.0
\set eg_version '''3.13.0'''
BEGIN;
INSERT INTO config.upgrade_log (version, applied_to) VALUES ('3.13.0', :eg_version);

SELECT evergreen.upgrade_deps_block_check('1405', :eg_version);

ALTER TABLE action.hold_request 
ADD COLUMN canceled_by INT REFERENCES actor.usr (id) DEFERRABLE INITIALLY DEFERRED,
ADD COLUMN canceling_ws INT REFERENCES actor.workstation (id) DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX hold_request_canceled_by_idx ON action.hold_request (canceled_by);
CREATE INDEX hold_request_canceling_ws_idx ON action.hold_request (canceling_ws);

CREATE OR REPLACE FUNCTION actor.usr_merge( src_usr INT, dest_usr INT, del_addrs BOOLEAN, del_cards BOOLEAN, deactivate_cards BOOLEAN ) RETURNS VOID AS $$
DECLARE
	suffix TEXT;
	bucket_row RECORD;
	picklist_row RECORD;
	queue_row RECORD;
	folder_row RECORD;
BEGIN

    -- Bail if src_usr equals dest_usr because the result of merging a
    -- user with itself is not what you want.
    IF src_usr = dest_usr THEN
        RETURN;
    END IF;

    -- do some initial cleanup 
    UPDATE actor.usr SET card = NULL WHERE id = src_usr;
    UPDATE actor.usr SET mailing_address = NULL WHERE id = src_usr;
    UPDATE actor.usr SET billing_address = NULL WHERE id = src_usr;

    -- actor.*
    IF del_cards THEN
        DELETE FROM actor.card where usr = src_usr;
    ELSE
        IF deactivate_cards THEN
            UPDATE actor.card SET active = 'f' WHERE usr = src_usr;
        END IF;
        UPDATE actor.card SET usr = dest_usr WHERE usr = src_usr;
    END IF;


    IF del_addrs THEN
        DELETE FROM actor.usr_address WHERE usr = src_usr;
    ELSE
        UPDATE actor.usr_address SET usr = dest_usr WHERE usr = src_usr;
    END IF;

    UPDATE actor.usr_message SET usr = dest_usr WHERE usr = src_usr;
    -- dupes are technically OK in actor.usr_standing_penalty, should manually delete them...
    UPDATE actor.usr_standing_penalty SET usr = dest_usr WHERE usr = src_usr;
    PERFORM actor.usr_merge_rows('actor.usr_org_unit_opt_in', 'usr', src_usr, dest_usr);
    PERFORM actor.usr_merge_rows('actor.usr_setting', 'usr', src_usr, dest_usr);

    -- permission.*
    PERFORM actor.usr_merge_rows('permission.usr_perm_map', 'usr', src_usr, dest_usr);
    PERFORM actor.usr_merge_rows('permission.usr_object_perm_map', 'usr', src_usr, dest_usr);
    PERFORM actor.usr_merge_rows('permission.usr_grp_map', 'usr', src_usr, dest_usr);
    PERFORM actor.usr_merge_rows('permission.usr_work_ou_map', 'usr', src_usr, dest_usr);


    -- container.*
	
	-- For each *_bucket table: transfer every bucket belonging to src_usr
	-- into the custody of dest_usr.
	--
	-- In order to avoid colliding with an existing bucket owned by
	-- the destination user, append the source user's id (in parenthesese)
	-- to the name.  If you still get a collision, add successive
	-- spaces to the name and keep trying until you succeed.
	--
	FOR bucket_row in
		SELECT id, name
		FROM   container.biblio_record_entry_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.biblio_record_entry_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = bucket_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	FOR bucket_row in
		SELECT id, name
		FROM   container.call_number_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.call_number_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = bucket_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	FOR bucket_row in
		SELECT id, name
		FROM   container.copy_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.copy_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = bucket_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	FOR bucket_row in
		SELECT id, name
		FROM   container.user_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.user_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = bucket_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	UPDATE container.user_bucket_item SET target_user = dest_usr WHERE target_user = src_usr;

    -- vandelay.*
	-- transfer queues the same way we transfer buckets (see above)
	FOR queue_row in
		SELECT id, name
		FROM   vandelay.queue
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  vandelay.queue
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = queue_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

    UPDATE vandelay.session_tracker SET usr = dest_usr WHERE usr = src_usr;

    -- money.*
    PERFORM actor.usr_merge_rows('money.collections_tracker', 'usr', src_usr, dest_usr);
    PERFORM actor.usr_merge_rows('money.collections_tracker', 'collector', src_usr, dest_usr);
    UPDATE money.billable_xact SET usr = dest_usr WHERE usr = src_usr;
    UPDATE money.billing SET voider = dest_usr WHERE voider = src_usr;
    UPDATE money.bnm_payment SET accepting_usr = dest_usr WHERE accepting_usr = src_usr;

    -- action.*
    UPDATE action.circulation SET usr = dest_usr WHERE usr = src_usr;
    UPDATE action.circulation SET circ_staff = dest_usr WHERE circ_staff = src_usr;
    UPDATE action.circulation SET checkin_staff = dest_usr WHERE checkin_staff = src_usr;
    UPDATE action.usr_circ_history SET usr = dest_usr WHERE usr = src_usr;

    UPDATE action.hold_request SET usr = dest_usr WHERE usr = src_usr;
    UPDATE action.hold_request SET fulfillment_staff = dest_usr WHERE fulfillment_staff = src_usr;
    UPDATE action.hold_request SET requestor = dest_usr WHERE requestor = src_usr;
    UPDATE action.hold_request SET canceled_by = dest_usr WHERE canceled_by = src_usr;
    UPDATE action.hold_notification SET notify_staff = dest_usr WHERE notify_staff = src_usr;

    UPDATE action.in_house_use SET staff = dest_usr WHERE staff = src_usr;
    UPDATE action.non_cataloged_circulation SET staff = dest_usr WHERE staff = src_usr;
    UPDATE action.non_cataloged_circulation SET patron = dest_usr WHERE patron = src_usr;
    UPDATE action.non_cat_in_house_use SET staff = dest_usr WHERE staff = src_usr;
    UPDATE action.survey_response SET usr = dest_usr WHERE usr = src_usr;

    -- acq.*
    UPDATE acq.fund_allocation SET allocator = dest_usr WHERE allocator = src_usr;
	UPDATE acq.fund_transfer SET transfer_user = dest_usr WHERE transfer_user = src_usr;
    UPDATE acq.invoice SET closed_by = dest_usr WHERE closed_by = src_usr;

	-- transfer picklists the same way we transfer buckets (see above)
	FOR picklist_row in
		SELECT id, name
		FROM   acq.picklist
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  acq.picklist
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = picklist_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

    UPDATE acq.purchase_order SET owner = dest_usr WHERE owner = src_usr;
    UPDATE acq.po_note SET creator = dest_usr WHERE creator = src_usr;
    UPDATE acq.po_note SET editor = dest_usr WHERE editor = src_usr;
    UPDATE acq.provider_note SET creator = dest_usr WHERE creator = src_usr;
    UPDATE acq.provider_note SET editor = dest_usr WHERE editor = src_usr;
    UPDATE acq.lineitem_note SET creator = dest_usr WHERE creator = src_usr;
    UPDATE acq.lineitem_note SET editor = dest_usr WHERE editor = src_usr;
    UPDATE acq.lineitem_usr_attr_definition SET usr = dest_usr WHERE usr = src_usr;

    -- asset.*
    UPDATE asset.copy SET creator = dest_usr WHERE creator = src_usr;
    UPDATE asset.copy SET editor = dest_usr WHERE editor = src_usr;
    UPDATE asset.copy_note SET creator = dest_usr WHERE creator = src_usr;
    UPDATE asset.call_number SET creator = dest_usr WHERE creator = src_usr;
    UPDATE asset.call_number SET editor = dest_usr WHERE editor = src_usr;
    UPDATE asset.call_number_note SET creator = dest_usr WHERE creator = src_usr;

    -- serial.*
    UPDATE serial.record_entry SET creator = dest_usr WHERE creator = src_usr;
    UPDATE serial.record_entry SET editor = dest_usr WHERE editor = src_usr;

    -- reporter.*
    -- It's not uncommon to define the reporter schema in a replica 
    -- DB only, so don't assume these tables exist in the write DB.
    BEGIN
    	UPDATE reporter.template SET owner = dest_usr WHERE owner = src_usr;
    EXCEPTION WHEN undefined_table THEN
        -- do nothing
    END;
    BEGIN
    	UPDATE reporter.report SET owner = dest_usr WHERE owner = src_usr;
    EXCEPTION WHEN undefined_table THEN
        -- do nothing
    END;
    BEGIN
    	UPDATE reporter.schedule SET runner = dest_usr WHERE runner = src_usr;
    EXCEPTION WHEN undefined_table THEN
        -- do nothing
    END;
    BEGIN
		-- transfer folders the same way we transfer buckets (see above)
		FOR folder_row in
			SELECT id, name
			FROM   reporter.template_folder
			WHERE  owner = src_usr
		LOOP
			suffix := ' (' || src_usr || ')';
			LOOP
				BEGIN
					UPDATE  reporter.template_folder
					SET     owner = dest_usr, name = name || suffix
					WHERE   id = folder_row.id;
				EXCEPTION WHEN unique_violation THEN
					suffix := suffix || ' ';
					CONTINUE;
				END;
				EXIT;
			END LOOP;
		END LOOP;
    EXCEPTION WHEN undefined_table THEN
        -- do nothing
    END;
    BEGIN
		-- transfer folders the same way we transfer buckets (see above)
		FOR folder_row in
			SELECT id, name
			FROM   reporter.report_folder
			WHERE  owner = src_usr
		LOOP
			suffix := ' (' || src_usr || ')';
			LOOP
				BEGIN
					UPDATE  reporter.report_folder
					SET     owner = dest_usr, name = name || suffix
					WHERE   id = folder_row.id;
				EXCEPTION WHEN unique_violation THEN
					suffix := suffix || ' ';
					CONTINUE;
				END;
				EXIT;
			END LOOP;
		END LOOP;
    EXCEPTION WHEN undefined_table THEN
        -- do nothing
    END;
    BEGIN
		-- transfer folders the same way we transfer buckets (see above)
		FOR folder_row in
			SELECT id, name
			FROM   reporter.output_folder
			WHERE  owner = src_usr
		LOOP
			suffix := ' (' || src_usr || ')';
			LOOP
				BEGIN
					UPDATE  reporter.output_folder
					SET     owner = dest_usr, name = name || suffix
					WHERE   id = folder_row.id;
				EXCEPTION WHEN unique_violation THEN
					suffix := suffix || ' ';
					CONTINUE;
				END;
				EXIT;
			END LOOP;
		END LOOP;
    EXCEPTION WHEN undefined_table THEN
        -- do nothing
    END;

    -- propagate preferred name values from the source user to the
    -- destination user, but only when values are not being replaced.
    WITH susr AS (SELECT * FROM actor.usr WHERE id = src_usr)
    UPDATE actor.usr SET 
        pref_prefix = 
            COALESCE(pref_prefix, (SELECT pref_prefix FROM susr)),
        pref_first_given_name = 
            COALESCE(pref_first_given_name, (SELECT pref_first_given_name FROM susr)),
        pref_second_given_name = 
            COALESCE(pref_second_given_name, (SELECT pref_second_given_name FROM susr)),
        pref_family_name = 
            COALESCE(pref_family_name, (SELECT pref_family_name FROM susr)),
        pref_suffix = 
            COALESCE(pref_suffix, (SELECT pref_suffix FROM susr))
    WHERE id = dest_usr;

    -- Copy and deduplicate name keywords
    -- String -> array -> rows -> DISTINCT -> array -> string
    WITH susr AS (SELECT * FROM actor.usr WHERE id = src_usr),
         dusr AS (SELECT * FROM actor.usr WHERE id = dest_usr)
    UPDATE actor.usr SET name_keywords = (
        WITH keywords AS (
            SELECT DISTINCT UNNEST(
                REGEXP_SPLIT_TO_ARRAY(
                    COALESCE((SELECT name_keywords FROM susr), '') || ' ' ||
                    COALESCE((SELECT name_keywords FROM dusr), ''),  E'\\s+'
                )
            ) AS parts
        ) SELECT STRING_AGG(kw.parts, ' ') FROM keywords kw
    ) WHERE id = dest_usr;

    -- Finally, delete the source user
    PERFORM actor.usr_delete(src_usr,dest_usr);

END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION actor.usr_purge_data(
	src_usr  IN INTEGER,
	specified_dest_usr IN INTEGER
) RETURNS VOID AS $$
DECLARE
	suffix TEXT;
	renamable_row RECORD;
	dest_usr INTEGER;
BEGIN

	IF specified_dest_usr IS NULL THEN
		dest_usr := 1; -- Admin user on stock installs
	ELSE
		dest_usr := specified_dest_usr;
	END IF;

    -- action_trigger.event (even doing this, event_output may--and probably does--contain PII and should have a retention/removal policy)
    UPDATE action_trigger.event SET context_user = dest_usr WHERE context_user = src_usr;

	-- acq.*
	UPDATE acq.fund_allocation SET allocator = dest_usr WHERE allocator = src_usr;
	UPDATE acq.lineitem SET creator = dest_usr WHERE creator = src_usr;
	UPDATE acq.lineitem SET editor = dest_usr WHERE editor = src_usr;
	UPDATE acq.lineitem SET selector = dest_usr WHERE selector = src_usr;
	UPDATE acq.lineitem_note SET creator = dest_usr WHERE creator = src_usr;
	UPDATE acq.lineitem_note SET editor = dest_usr WHERE editor = src_usr;
	UPDATE acq.invoice SET closed_by = dest_usr WHERE closed_by = src_usr;
	DELETE FROM acq.lineitem_usr_attr_definition WHERE usr = src_usr;

	-- Update with a rename to avoid collisions
	FOR renamable_row in
		SELECT id, name
		FROM   acq.picklist
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  acq.picklist
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = renamable_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	UPDATE acq.picklist SET creator = dest_usr WHERE creator = src_usr;
	UPDATE acq.picklist SET editor = dest_usr WHERE editor = src_usr;
	UPDATE acq.po_note SET creator = dest_usr WHERE creator = src_usr;
	UPDATE acq.po_note SET editor = dest_usr WHERE editor = src_usr;
	UPDATE acq.purchase_order SET owner = dest_usr WHERE owner = src_usr;
	UPDATE acq.purchase_order SET creator = dest_usr WHERE creator = src_usr;
	UPDATE acq.purchase_order SET editor = dest_usr WHERE editor = src_usr;
	UPDATE acq.claim_event SET creator = dest_usr WHERE creator = src_usr;

	-- action.*
	DELETE FROM action.circulation WHERE usr = src_usr;
	UPDATE action.circulation SET circ_staff = dest_usr WHERE circ_staff = src_usr;
	UPDATE action.circulation SET checkin_staff = dest_usr WHERE checkin_staff = src_usr;
	UPDATE action.hold_notification SET notify_staff = dest_usr WHERE notify_staff = src_usr;
	UPDATE action.hold_request SET fulfillment_staff = dest_usr WHERE fulfillment_staff = src_usr;
	UPDATE action.hold_request SET requestor = dest_usr WHERE requestor = src_usr;
	UPDATE action.hold_request SET canceled_by = dest_usr WHERE canceled_by = src_usr;
	DELETE FROM action.hold_request WHERE usr = src_usr;
	UPDATE action.in_house_use SET staff = dest_usr WHERE staff = src_usr;
	UPDATE action.non_cat_in_house_use SET staff = dest_usr WHERE staff = src_usr;
	DELETE FROM action.non_cataloged_circulation WHERE patron = src_usr;
	UPDATE action.non_cataloged_circulation SET staff = dest_usr WHERE staff = src_usr;
	DELETE FROM action.survey_response WHERE usr = src_usr;
	UPDATE action.fieldset SET owner = dest_usr WHERE owner = src_usr;
	DELETE FROM action.usr_circ_history WHERE usr = src_usr;
	UPDATE action.curbside SET notes = NULL WHERE patron = src_usr;

	-- actor.*
	DELETE FROM actor.card WHERE usr = src_usr;
	DELETE FROM actor.stat_cat_entry_usr_map WHERE target_usr = src_usr;
	DELETE FROM actor.usr_privacy_waiver WHERE usr = src_usr;
	DELETE FROM actor.usr_message WHERE usr = src_usr;

	-- The following update is intended to avoid transient violations of a foreign
	-- key constraint, whereby actor.usr_address references itself.  It may not be
	-- necessary, but it does no harm.
	UPDATE actor.usr_address SET replaces = NULL
		WHERE usr = src_usr AND replaces IS NOT NULL;
	DELETE FROM actor.usr_address WHERE usr = src_usr;
	DELETE FROM actor.usr_org_unit_opt_in WHERE usr = src_usr;
	UPDATE actor.usr_org_unit_opt_in SET staff = dest_usr WHERE staff = src_usr;
	DELETE FROM actor.usr_setting WHERE usr = src_usr;
	DELETE FROM actor.usr_standing_penalty WHERE usr = src_usr;
	UPDATE actor.usr_message SET title = 'purged', message = 'purged', read_date = NOW() WHERE usr = src_usr;
	DELETE FROM actor.usr_message WHERE usr = src_usr;
	UPDATE actor.usr_standing_penalty SET staff = dest_usr WHERE staff = src_usr;
	UPDATE actor.usr_message SET editor = dest_usr WHERE editor = src_usr;

	-- asset.*
	UPDATE asset.call_number SET creator = dest_usr WHERE creator = src_usr;
	UPDATE asset.call_number SET editor = dest_usr WHERE editor = src_usr;
	UPDATE asset.call_number_note SET creator = dest_usr WHERE creator = src_usr;
	UPDATE asset.copy SET creator = dest_usr WHERE creator = src_usr;
	UPDATE asset.copy SET editor = dest_usr WHERE editor = src_usr;
	UPDATE asset.copy_note SET creator = dest_usr WHERE creator = src_usr;

	-- auditor.*
	DELETE FROM auditor.actor_usr_address_history WHERE id = src_usr;
	DELETE FROM auditor.actor_usr_history WHERE id = src_usr;
	UPDATE auditor.asset_call_number_history SET creator = dest_usr WHERE creator = src_usr;
	UPDATE auditor.asset_call_number_history SET editor  = dest_usr WHERE editor  = src_usr;
	UPDATE auditor.asset_copy_history SET creator = dest_usr WHERE creator = src_usr;
	UPDATE auditor.asset_copy_history SET editor  = dest_usr WHERE editor  = src_usr;
	UPDATE auditor.biblio_record_entry_history SET creator = dest_usr WHERE creator = src_usr;
	UPDATE auditor.biblio_record_entry_history SET editor  = dest_usr WHERE editor  = src_usr;

	-- biblio.*
	UPDATE biblio.record_entry SET creator = dest_usr WHERE creator = src_usr;
	UPDATE biblio.record_entry SET editor = dest_usr WHERE editor = src_usr;
	UPDATE biblio.record_note SET creator = dest_usr WHERE creator = src_usr;
	UPDATE biblio.record_note SET editor = dest_usr WHERE editor = src_usr;

	-- container.*
	-- Update buckets with a rename to avoid collisions
	FOR renamable_row in
		SELECT id, name
		FROM   container.biblio_record_entry_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.biblio_record_entry_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = renamable_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	FOR renamable_row in
		SELECT id, name
		FROM   container.call_number_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.call_number_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = renamable_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	FOR renamable_row in
		SELECT id, name
		FROM   container.copy_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.copy_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = renamable_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	FOR renamable_row in
		SELECT id, name
		FROM   container.user_bucket
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  container.user_bucket
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = renamable_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

	DELETE FROM container.user_bucket_item WHERE target_user = src_usr;

	-- money.*
	DELETE FROM money.billable_xact WHERE usr = src_usr;
	DELETE FROM money.collections_tracker WHERE usr = src_usr;
	UPDATE money.collections_tracker SET collector = dest_usr WHERE collector = src_usr;

	-- permission.*
	DELETE FROM permission.usr_grp_map WHERE usr = src_usr;
	DELETE FROM permission.usr_object_perm_map WHERE usr = src_usr;
	DELETE FROM permission.usr_perm_map WHERE usr = src_usr;
	DELETE FROM permission.usr_work_ou_map WHERE usr = src_usr;

	-- reporter.*
	-- Update with a rename to avoid collisions
	BEGIN
		FOR renamable_row in
			SELECT id, name
			FROM   reporter.output_folder
			WHERE  owner = src_usr
		LOOP
			suffix := ' (' || src_usr || ')';
			LOOP
				BEGIN
					UPDATE  reporter.output_folder
					SET     owner = dest_usr, name = name || suffix
					WHERE   id = renamable_row.id;
				EXCEPTION WHEN unique_violation THEN
					suffix := suffix || ' ';
					CONTINUE;
				END;
				EXIT;
			END LOOP;
		END LOOP;
	EXCEPTION WHEN undefined_table THEN
		-- do nothing
	END;

	BEGIN
		UPDATE reporter.report SET owner = dest_usr WHERE owner = src_usr;
	EXCEPTION WHEN undefined_table THEN
		-- do nothing
	END;

	-- Update with a rename to avoid collisions
	BEGIN
		FOR renamable_row in
			SELECT id, name
			FROM   reporter.report_folder
			WHERE  owner = src_usr
		LOOP
			suffix := ' (' || src_usr || ')';
			LOOP
				BEGIN
					UPDATE  reporter.report_folder
					SET     owner = dest_usr, name = name || suffix
					WHERE   id = renamable_row.id;
				EXCEPTION WHEN unique_violation THEN
					suffix := suffix || ' ';
					CONTINUE;
				END;
				EXIT;
			END LOOP;
		END LOOP;
	EXCEPTION WHEN undefined_table THEN
		-- do nothing
	END;

	BEGIN
		UPDATE reporter.schedule SET runner = dest_usr WHERE runner = src_usr;
	EXCEPTION WHEN undefined_table THEN
		-- do nothing
	END;

	BEGIN
		UPDATE reporter.template SET owner = dest_usr WHERE owner = src_usr;
	EXCEPTION WHEN undefined_table THEN
		-- do nothing
	END;

	-- Update with a rename to avoid collisions
	BEGIN
		FOR renamable_row in
			SELECT id, name
			FROM   reporter.template_folder
			WHERE  owner = src_usr
		LOOP
			suffix := ' (' || src_usr || ')';
			LOOP
				BEGIN
					UPDATE  reporter.template_folder
					SET     owner = dest_usr, name = name || suffix
					WHERE   id = renamable_row.id;
				EXCEPTION WHEN unique_violation THEN
					suffix := suffix || ' ';
					CONTINUE;
				END;
				EXIT;
			END LOOP;
		END LOOP;
	EXCEPTION WHEN undefined_table THEN
	-- do nothing
	END;

	-- vandelay.*
	-- Update with a rename to avoid collisions
	FOR renamable_row in
		SELECT id, name
		FROM   vandelay.queue
		WHERE  owner = src_usr
	LOOP
		suffix := ' (' || src_usr || ')';
		LOOP
			BEGIN
				UPDATE  vandelay.queue
				SET     owner = dest_usr, name = name || suffix
				WHERE   id = renamable_row.id;
			EXCEPTION WHEN unique_violation THEN
				suffix := suffix || ' ';
				CONTINUE;
			END;
			EXIT;
		END LOOP;
	END LOOP;

    UPDATE vandelay.session_tracker SET usr = dest_usr WHERE usr = src_usr;

    -- NULL-ify addresses last so other cleanup (e.g. circ anonymization)
    -- can access the information before deletion.
	UPDATE actor.usr SET
		active = FALSE,
		card = NULL,
		mailing_address = NULL,
		billing_address = NULL
	WHERE id = src_usr;

END;
$$ LANGUAGE plpgsql;



SELECT evergreen.upgrade_deps_block_check('1406', :eg_version);

INSERT INTO config.workstation_setting_type (name, grp, datatype, label) 
VALUES (
    'eg.grid.admin.config.circ_matrix_matchpoint', 'gui', 'object',
    oils_i18n_gettext(
        'eg.grid.admin.config.circ_matrix_matchpoint',
        'Grid Config: admin.config.circ_matrix_matchpoint',
        'cwst', 'label'
    )
);


SELECT evergreen.upgrade_deps_block_check('1407', :eg_version);

INSERT INTO config.workstation_setting_type (name, grp, datatype, label)
VALUES 
(
    'acq.lineitem.sort_order.claims', 'gui', 'integer',
    oils_i18n_gettext(
        'acq.lineitem.sort_order.claims',
        'ACQ Claim-Ready Lineitem List Sort Order',
        'cwst', 'label')
),
(
    'acq.lineitem.page_size.claims', 'gui', 'integer',
    oils_i18n_gettext(
        'acq.lineitem.page_size.claims',
        'ACQ Claim-Ready Lineitem List Page Size',
        'cwst', 'label')
),
(
    'eg.acq.search.lineitems.filter_to_invoiceable', 'gui', 'bool',
    oils_i18n_gettext(
        'eg.acq.search.lineitems.filter_to_invoiceable',
        'ACQ Lineitem Search Filter to Invoiceable',
        'cwst', 'label')
),
(
    'eg.acq.search.lineitems.keep_results', 'gui', 'bool',
    oils_i18n_gettext(
        'eg.acq.search.lineitems.keep_results',
        'ACQ Lineitem Search Keep Results Between Searches',
        'cwst', 'label')
),
(
    'eg.acq.search.lineitems.trim_list', 'gui', 'bool',
    oils_i18n_gettext(
        'eg.acq.search.lineitems.trim_list',
        'ACQ Lineitem Search Trim List When Keeping Results',
        'cwst', 'label')
);

INSERT INTO permission.perm_list ( id, code, description ) VALUES
 ( 650, 'ACQ_ALLOW_OVERSPEND', oils_i18n_gettext(650,
    'Allow a user to ignore a fund''s stop percentage.', 'ppl', 'description'))
;




SELECT evergreen.upgrade_deps_block_check('1408', :eg_version);

INSERT INTO config.usr_setting_type (name, grp, datatype, label)
VALUES
(
    'eg.cat.z3950.default_field', 'gui', 'string',
    oils_i18n_gettext(
        'eg.cat.z3950.default_field',
        'Z39.50 Search default field',
        'cust', 'label')
),(
    'eg.cat.z3950.default_targets', 'gui', 'object',
    oils_i18n_gettext(
        'eg.cat.z3950.default_targets',
        'Z39.50 Search default targets',
        'cust', 'label')
);

INSERT INTO config.workstation_setting_type (name, grp, datatype, label)
VALUES
(
    'eg.grid.global_z3950.search_results', 'gui', 'object',
    oils_i18n_gettext(
        'eg.grid.global_z3950.search_results',
        'Grid Config: Z39.50 Search Results',
        'cwst', 'label')
),(
    'acq.default_bib_marc_template', 'gui', 'integer',
    oils_i18n_gettext(
        'acq.default_bib_marc_template',
        'Default ACQ Brief Record Bibliographic Template',
        'cwst', 'label')
),(
    'eg.grid.cat.vandelay.queue.list.acq', 'gui', 'object',
    oils_i18n_gettext(
        'eg.grid.cat.vandelay.queue.list.acq',
        'Grid Config: Vandelay ACQ Queue List',
        'cwst', 'label'
    )
),(
    'eg.grid.cat.vandelay.background-import.list', 'gui', 'object',
    oils_i18n_gettext(
        'eg.grid.cat.vandelay.background-import.list',
        'Grid Config: Vandelay Background Import List',
        'cwst', 'label'
    )
);

INSERT into config.org_unit_setting_type
    (name, datatype, grp, label, description)
VALUES (
    'acq.import_tab_display', 'string', 'gui',
    oils_i18n_gettext(
        'acq.import_tab_display',
        'ACQ: Which import tab(s) display in general Import/Export?',
        'coust', 'label'
    ),
    oils_i18n_gettext(
        'acq.import_tab_display',
        'Valid values are: "cat" for Import for Cataloging, '
        || '"acq" for Import for Acquisitions, "both" or unset to display both.',
        'coust', 'description'
    )
);

INSERT INTO permission.perm_list ( id, code, description ) VALUES
 ( 651, 'VIEW_BACKGROUND_IMPORT', oils_i18n_gettext(651,
                    'View background record import jobs', 'ppl', 'description')),
 ( 652, 'CREATE_BACKGROUND_IMPORT', oils_i18n_gettext(652,
                    'Create background record import jobs', 'ppl', 'description')),
 ( 653, 'UPDATE_BACKGROUND_IMPORT', oils_i18n_gettext(653,
                    'Update background record import jobs', 'ppl', 'description'))
;

CREATE TABLE vandelay.background_import (
    id              SERIAL      PRIMARY KEY,
    owner           INT         NOT NULL REFERENCES actor.usr (id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
    workstation     INT         REFERENCES actor.workstation (id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED,
    import_type     TEXT        NOT NULL DEFAULT 'bib' CHECK (import_type IN ('bib','acq','authority')),
    params          TEXT,
    email           TEXT,
    state           TEXT        NOT NULL DEFAULT 'new' CHECK (state IN ('new','running','complete')),
    request_time    TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    complete_time   TIMESTAMPTZ,
    queue           BIGINT      -- no fkey, could be either bib_queue or authority_queue, based on import_type
);

INSERT INTO action_trigger.hook (key, core_type, passive, description) VALUES
(  'vandelay.background_import.requested', 'vbi', TRUE,
   oils_i18n_gettext('vandelay.background_import.requested','A Import/Overlay background job was requested','ath', 'description')
),('vandelay.background_import.completed', 'vbi', TRUE,
   oils_i18n_gettext('vandelay.background_import.completed','A Import/Overlay background job was completed','ath', 'description')
);

INSERT INTO action_trigger.event_definition (active, owner, name, hook, validator, reactor, group_field, usr_field, template)
    VALUES ('f', 1, 'Vandelay Background Import Requested', 'vandelay.background_import.requested', 'NOOP_True', 'SendEmail', 'email', 'owner',
$$
[%- USE date -%]
[%- hostname = '' # set this in order to generate a link -%]
To: [%- target.0.email || params.recipient_email %]
From: [%- params.sender_email || default_sender %]
Date: [%- date.format(date.now, '%a, %d %b %Y %T -0000', gmt => 1) %]
Subject: Background Import Requested
Auto-Submitted: auto-generated

[% target.size %] new background import requests were added:

[% FOR bi IN target %]
    [%- IF bi.queue; summary = helpers.fetch_vbi_queue_summary(bi)%]
  * Queue: [% summary.queue.name %] ([% bi.import_type %])
    Records in queue: [% summary.total %]
    Items in queue: [% summary.total_items %]
     [% IF bi.state != 'new' %]
     - Records imported: [% summary.imported %]
     - Items imported: [% summary.total_items_imported %]
     - Records import errors: [% summary.rec_import_errors %]
     - Items import errors: [% summary.item_import_errors %]
     [% END %]
    [% END %]
  [% IF hostname %]View queue at: https://[% hostname %]/eg2/staff/cat/vandelay/queue/[% bi.import_type %]/[% bi.queue %][% END %]

[% END %]

[% IF hostname %]Manage background imports at: https://[% hostname %]/eg2/staff/cat/vandelay/background-import[% END %]

$$);

INSERT INTO action_trigger.event_definition (active, owner, name, hook, validator, reactor, group_field, usr_field, template)
    VALUES ('f', 1, 'Vandelay Background Import Completed', 'vandelay.background_import.completed', 'NOOP_True', 'SendEmail', 'email', 'owner',
$$
[%- USE date -%]
[%- hostname = '' # set this in order to generate a link -%]
To: [%- target.0.email || params.recipient_email %]
From: [%- params.sender_email || default_sender %]
Date: [%- date.format(date.now, '%a, %d %b %Y %T -0000', gmt => 1) %]
Subject: Background Import Completed
Auto-Submitted: auto-generated

[% target.size %] new background import requests were completed:

[% FOR bi IN target %]
    [%- summary = helpers.fetch_vbi_queue_summary(bi) -%]
  * Queue: [% summary.queue.name %] ([% bi.import_type %])
    Records in queue: [% summary.total %]
    Items in queue: [% summary.total_items %]
     - Records imported: [% summary.imported %]
     - Items imported: [% summary.total_items_imported %]
     - Records import errors: [% summary.rec_import_errors %]
     - Items import errors: [% summary.item_import_errors %]
  [% IF hostname %]View queue at: https://[% hostname %]/eg2/staff/cat/vandelay/queue/[% bi.import_type %]/[% bi.queue %][% END %]

[% END %]

[% IF hostname %]Manage background imports at: https://[% hostname %]/eg2/staff/cat/vandelay/background-import[% END %]

$$);


-- Evergreen DB patch XXXX.shelving-location-with-lassos.sql
--
-- Global flag to display shelving locations with lassos in the staff client
--


-- check whether patch can be applied
SELECT evergreen.upgrade_deps_block_check('1409', :eg_version);

INSERT INTO config.global_flag (name, enabled, label)
    VALUES (
        'staff.search.shelving_location_groups_with_lassos', TRUE,
        oils_i18n_gettext(
            'staff.search.shelving_location_groups_with_lassos',
            'Staff Catalog Search: Display shelving location groups with library groups',
            'cgf',
            'label'
        )
);


SELECT evergreen.upgrade_deps_block_check('1410', :eg_version);

INSERT INTO config.org_unit_setting_type (
  name, grp, label, description, datatype
) VALUES (
  'ui.patron.edit.aus.default_phone.regex',
  'gui',
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_phone.regex',
    'Regex for default_phone field on patron registration',
    'coust',
    'label'
  ),
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_phone.regex',
    'The Regular Expression for validation on the default_phone field in patron registration.',
    'coust',
    'description'
  ),
  'string'
), (
  'ui.patron.edit.aus.default_phone.example',
  'gui',
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_phone.example',
    'Example for default_phone field on patron registration',
    'coust',
    'label'
  ),
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_phone.example',
    'The Example for validation on the default_phone field in patron registration.',
    'coust',
    'description'
  ),
  'string'
), (
  'ui.patron.edit.aus.default_sms_notify.regex',
  'gui',
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_sms_notify.regex',
    'Regex for default_sms_notify field on patron registration',
    'coust',
    'label'
  ),
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_sms_notify.regex',
    'The Regular Expression for validation on the default_sms_notify field in patron registration.',
    'coust',
    'description'
  ),
  'string'
), (
  'ui.patron.edit.aus.default_sms_notify.example',
  'gui',
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_sms_notify.example',
    'Example for default_sms_notify field on patron registration',
    'coust',
    'label'
  ),
  oils_i18n_gettext(
    'ui.patron.edit.aus.default_sms_notify.example',
    'The Example for validation on the default_sms_notify field in patron registration.',
    'coust',
    'description'
  ),
  'string'
);


SELECT evergreen.upgrade_deps_block_check('1411', :eg_version);

INSERT INTO config.workstation_setting_type (name, grp, datatype, label)
VALUES (
    'eg.grid.reporter.full.outputs.pending', 'gui', 'object', 
    oils_i18n_gettext( 'eg.grid.reporter.full.outputs.pending', 'Pending report output grid settings', 'cwst', 'label')
), (
    'eg.grid.reporter.full.outputs.complete', 'gui', 'object', 
    oils_i18n_gettext( 'eg.grid.reporter.full.outputs.complete', 'Completed report output grid settings', 'cwst', 'label')
), (
    'eg.grid.reporter.full.templates', 'gui', 'object', 
    oils_i18n_gettext( 'eg.grid.reporter.full.templates', 'Report template grid settings', 'cwst', 'label')
), (
    'eg.grid.reporter.full.reports', 'gui', 'object', 
    oils_i18n_gettext( 'eg.grid.reporter.full.reports', 'Report definition grid settings', 'cwst', 'label')
);

UPDATE  config.ui_staff_portal_page_entry
  SET   target_url = '/eg2/staff/reporter/full'
  WHERE id = 12
        AND entry_type = 'menuitem'
        AND target_url = '/eg/staff/reporter/legacy/main'
;



SELECT evergreen.upgrade_deps_block_check('1412', :eg_version);

DROP SCHEMA IF EXISTS sip CASCADE;

CREATE SCHEMA sip;

-- Collections of settings that can be linked to one or more SIP accounts.
CREATE TABLE sip.setting_group (
    id          SERIAL PRIMARY KEY,
    label       TEXT UNIQUE NOT NULL,
    institution TEXT NOT NULL -- Duplicates OK
);

-- Key/value setting pairs
CREATE TABLE sip.setting (
    id SERIAL       PRIMARY KEY,
    setting_group   INTEGER NOT NULL REFERENCES sip.setting_group (id)
                    ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
    name            TEXT NOT NULL,
    description     TEXT NOT NULL,
    value           JSON NOT NULL,
    CONSTRAINT      name_once_per_inst UNIQUE (setting_group, name)
);

CREATE TABLE sip.account (
    id              SERIAL PRIMARY KEY,
    enabled         BOOLEAN NOT NULL DEFAULT TRUE,
    setting_group   INTEGER NOT NULL REFERENCES sip.setting_group (id)
                    DEFERRABLE INITIALLY DEFERRED,
    sip_username    TEXT UNIQUE NOT NULL,
    usr             BIGINT NOT NULL REFERENCES actor.usr(id)
                    DEFERRABLE INITIALLY DEFERRED,
    workstation     INTEGER REFERENCES actor.workstation(id),
    -- sessions for transient accounts are not tracked in sip.session
    transient       BOOLEAN NOT NULL DEFAULT FALSE,
    activity_who    TEXT -- config.usr_activity_type.ewho
);

CREATE TABLE sip.session (
    key         TEXT PRIMARY KEY,
    ils_token   TEXT NOT NULL UNIQUE,
    account     INTEGER NOT NULL REFERENCES sip.account(id)
                ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
    create_time TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE sip.screen_message (
    key     TEXT PRIMARY KEY,
    message TEXT NOT NULL
);

-- SEED DATA

INSERT INTO actor.passwd_type (code, name, login, crypt_algo, iter_count)
    VALUES ('sip2', 'SIP2 Client Password', FALSE, 'bf', 5);

-- ID 1 is magic.
INSERT INTO sip.setting_group (id, label, institution) 
    VALUES (1, 'Default Settings', 'example');

-- carve space for other canned setting groups
SELECT SETVAL('sip.setting_group_id_seq'::TEXT, 1000);

-- has to be global since settings are linked to accounts and if
-- status-before-login is used, no account information will be available.
INSERT INTO config.global_flag (name, value, enabled, label) VALUES
(   'sip.sc_status_before_login_institution', NULL, FALSE, 
    oils_i18n_gettext(
        'sip.sc_status_before_login_institution',
        'Activate status-before-login-support and define the institution ' ||
        'value which should be used in the response',
        'cgf', 'label')
);

INSERT INTO sip.setting (setting_group, name, value, description)
VALUES (
    1, 'currency', '"USD"',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'currency'),
        'Monetary amounts are reported in this currency',
        'sipset', 'description')
), (
    1, 'av_format', '"eg_legacy"',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'av_format'),
        'AV Format. Options: eg_legacy, 3m, swyer_a, swyer_b',
        'sipset', 'description')
), (
    1, 'due_date_use_sip_date_format', 'false',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'due_date_use_sip_date_format'),
        'Due date uses 18-char date format (YYYYMMDDZZZZHHMMSS).  Otherwise "YYYY-MM-DD HH:MM:SS',
        'sipset', 'description')
), (
    1, 'patron_status_permit_loans', 'false',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'patron_status_permit_loans'),
        'Checkout and renewal are allowed even when penalties blocking these actions exist',
        'sipset', 'description')
), (
    1, 'patron_status_permit_all', 'false',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'patron_status_permit_all'),
        'Holds, checkouts, and renewals allowed regardless of blocking penalties',
        'sipset', 'description')
), (
    1, 'default_activity_who', 'null',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'default_activity_who'),
        'Patron holds data may be returned as either "title" or "barcode"',
        'sipset', 'description')
), (
    1, 'msg64_summary_datatype', '"title"',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'msg64_summary_datatype'),
        'Patron circulation data may be returned as either "title" or "barcode"',
        'sipset', 'description')
), (
    1, 'msg64_hold_datatype', '"title"',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'msg64_hold_datatype'),
        'Patron holds data may be returned as either "title" or "barcode"',
        'sipset', 'description')
), (
    1, 'msg64_hold_items_available', 'false',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'msg64_hold_items_available'),
        'Only return information on available holds',
        'sipset', 'description')
), (
    1, 'checkout.override.COPY_ALERT_MESSAGE', 'true',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'checkout.override.COPY_ALERT_MESSAGE'),
        'Checkout override copy alert message',
        'sipset', 'description')
), (
    1, 'checkout.override.COPY_NOT_AVAILABLE', 'true',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'checkout.override.COPY_NOT_AVAILABLE'),
        'Checkout override copy not available message',
        'sipset', 'description')
), (
    1, 'checkin.override.COPY_ALERT_MESSAGE', 'true',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'checkin.override.COPY_ALERT_MESSAGE'),
        'Checkin override copy alert message',
        'sipset', 'description')
), (
    1, 'checkin.override.COPY_BAD_STATUS', 'true',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'checkin.override.COPY_BAD_STATUS'),
        'Checkin override bad copy status',
        'sipset', 'description')
), (
    1, 'checkin.override.COPY_STATUS_MISSING', 'true',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'checkin.override.COPY_STATUS_MISSING'),
        'Checkin override copy status missing',
        'sipset', 'description')
), (
    1, 'checkin_hold_as_transit', 'false',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'checkin_hold_as_transit'),
        'Checkin local holds as transits',
        'sipset', 'description')
), (
    1, 'support_acs_resend_messages', 'false',
    oils_i18n_gettext(
        (SELECT id FROM sip.setting WHERE name = 'support_acs_resend_messages'),
        'Support ACS Resend Messages (code 97)',
        'sipset', 'description')
);

INSERT INTO sip.screen_message (key, message) VALUES (
    'checkout.open_circ_exists', 
    oils_i18n_gettext(
        'checkout.open_circ_exists',
        'This item is already checked out',
        'sipsm', 'message')
), (
    'checkout.patron_not_allowed', 
    oils_i18n_gettext(
        'checkout.patron_not_allowed',
        'Patron is not allowed to checkout the selected item',
        'sipsm', 'message')
), (
    'payment.overpayment_not_allowed',
    oils_i18n_gettext(
        'payment.overpayment_not_allowed',
        'Overpayment not allowed',
        'sipsm', 'message')
), (
    'payment.transaction_not_found',
    oils_i18n_gettext(
        'payment.transaction_not_found',
        'Bill not found',
        'sipsm', 'message')
);


/* EXAMPLE SETTINGS

-- Example linking a SIP password to the 'admin' account.
SELECT actor.set_passwd(1, 'sip2', 'sip_password');

INSERT INTO actor.workstation (name, owning_lib) VALUES ('BR1-SIP2-Gateway', 4);

INSERT INTO sip.account(
    setting_group, sip_username, sip_password, usr, workstation
) VALUES (
    1, 'admin', 
    (SELECT id FROM actor.passwd WHERE usr = 1 AND passwd_type = 'sip2'),
    1, 
    (SELECT id FROM actor.workstation WHERE name = 'BR1-SIP2-Gateway')
);

*/





SELECT evergreen.upgrade_deps_block_check('1413', :eg_version);

CREATE TABLE sip.filter (
    id              SERIAL PRIMARY KEY,
    enabled         BOOLEAN NOT NULL DEFAULT FALSE,
    setting_group   INTEGER NOT NULL REFERENCES sip.setting_group (id)
                    ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
    identifier      TEXT NOT NULL,
    strip           BOOLEAN NOT NULL DEFAULT FALSE,
    replace_with    TEXT
);




SELECT evergreen.upgrade_deps_block_check('1414', :eg_version);

INSERT INTO permission.perm_list ( id, code, description ) SELECT DISTINCT
  654,
  'VIEW_SHIPMENT_NOTIFICATION',
  oils_i18n_gettext(654,
    'View shipment notifications', 'ppl', 'description'
  )
  FROM permission.perm_list
  WHERE NOT EXISTS (SELECT 1 FROM permission.perm_list WHERE code = 'VIEW_SHIPMENT_NOTIFICATION');
 
INSERT INTO permission.perm_list ( id, code, description )  SELECT DISTINCT
  655,
  'MANAGE_SHIPMENT_NOTIFICATION',
  oils_i18n_gettext(655,
    'Manage shipment notifications', 'ppl', 'description'
  )
  FROM permission.perm_list
  WHERE NOT EXISTS (SELECT 1 FROM permission.perm_list WHERE code = 'MANAGE_SHIPMENT_NOTIFICATION');


SELECT evergreen.upgrade_deps_block_check('1415', :eg_version);
INSERT INTO permission.perm_list ( id, code, description ) SELECT DISTINCT
   656,
   'PATRON_BARRED.override',
   oils_i18n_gettext(656,
     'Override the PATRON_BARRED event', 'ppl', 'description'
   )
   FROM permission.perm_list
   WHERE NOT EXISTS (SELECT 1 FROM permission.perm_list WHERE code = 'PATRON_BARRED.override');



SELECT evergreen.upgrade_deps_block_check('1416', :eg_version);

\set ON_ERROR_STOP on

DO $$
BEGIN
    -- Check if the constraint already exists
    IF NOT EXISTS (
        SELECT 1
        FROM pg_constraint
        WHERE conname = 'ctype_code_unique'
        AND conrelid = 'config.coded_value_map'::regclass
    )
    THEN
        -- Add the constraint if it doesn't exist
        ALTER TABLE config.coded_value_map
        ADD CONSTRAINT ctype_code_unique UNIQUE (ctype, code);
    END IF;
END
$$;

INSERT INTO config.record_attr_definition (name, label, multi, filter, sorter, composite, fixed_field)
    SELECT 'FMat', 'Form of Material', 't', 't', 'f', 'f', 'FMat'
    WHERE NOT EXISTS (SELECT 1 FROM config.record_attr_definition WHERE name = 'FMat');

INSERT INTO config.marc21_ff_pos_map (fixed_field, tag, rec_type, start_pos, length)
SELECT v.fixed_field, v.tag, v.rec_type, v.start_pos, v.length
FROM (VALUES 
    ('FMat', '006', 'BKS', 0, 1),
    ('FMat', '006', 'COM', 0, 1),
    ('FMat', '006', 'MAP', 0, 1),
    ('FMat', '006', 'MIX', 0, 1),
    ('FMat', '006', 'REC', 0, 1),
    ('FMat', '006', 'SCO', 0, 1),
    ('FMat', '006', 'SER', 0, 1),
    ('FMat', '006', 'VIS', 0, 1)
) AS v(fixed_field, tag, rec_type, start_pos, length)
WHERE
FALSE AND -- skipping the 006 for now
NOT EXISTS (
    SELECT 1 FROM config.marc21_ff_pos_map
    WHERE 
        fixed_field = v.fixed_field AND 
        tag = v.tag AND 
        rec_type = v.rec_type AND 
        start_pos = v.start_pos
);

CREATE OR REPLACE FUNCTION evergreen.insert_update_coded_value_map(_tag TEXT, _start_pos INT, _code TEXT, _value TEXT, _description TEXT, _rec_type TEXT)
RETURNS VOID AS $$
DECLARE
    _ctype TEXT;
    _processed_value TEXT;
    _grouped_rec_type TEXT[];
BEGIN
    -- Mapping _rec_type to groups
    CASE _rec_type
        WHEN 'biblio' THEN
            _grouped_rec_type := ARRAY['COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER'];
        WHEN 'authority' THEN
            _grouped_rec_type := ARRAY['AUT'];
        ELSE
            _grouped_rec_type := ARRAY[_rec_type]; -- Default to itself if not mapped
    END CASE;

    SELECT name INTO _ctype
    FROM config.record_attr_definition
    WHERE fixed_field = (
        SELECT fixed_field
        FROM config.marc21_ff_pos_map
        WHERE tag = _tag AND start_pos = _start_pos
        AND rec_type = ANY(_grouped_rec_type)
        LIMIT 1
    );

    IF _ctype IS NULL THEN
        RAISE INFO 'Subquery returned NULL for tag %, start_pos %', _tag, _start_pos;
    ELSE
        _processed_value := _value;
        IF _value IN ('#', '|') THEN
            _processed_value := ' ';
            RAISE INFO 'Replacing value "%" with a space for tag %, start_pos %, code %', _value, _tag, _start_pos, _code;
        END IF;

        INSERT INTO config.coded_value_map (ctype, code, value, description)
        VALUES (_ctype, _code, _processed_value, _description)
        ON CONFLICT (ctype, code)
        DO UPDATE SET
            value = EXCLUDED.value,
            description = EXCLUDED.description;
    END IF;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION evergreen.simple_insert_update_coded_value_map(_ctype TEXT, _code TEXT, _value TEXT, _description TEXT)
RETURNS VOID AS $$
BEGIN
    INSERT INTO config.coded_value_map (ctype, code, value, description)
    VALUES (_ctype, _code, _value, _description)
    ON CONFLICT (ctype, code)
    DO UPDATE SET
        value = EXCLUDED.value,
        description = EXCLUDED.description;
END;
$$ LANGUAGE plpgsql;
-- category: authority tag: 001 file: www.loc.gov/marc/authority/concise/ad001.html
-- category: authority tag: 003 file: www.loc.gov/marc/authority/concise/ad003.html
-- category: authority tag: 005 file: www.loc.gov/marc/authority/concise/ad005.html
-- category: authority tag: 008 file: www.loc.gov/marc/authority/concise/ad008.html

        UPDATE config.record_attr_definition
        SET description = 'Date entered on file'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 0 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Direct or indirect geographic subdivision'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 6 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Romanization scheme'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 7 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Language of catalog'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 8 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Kind of record'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 9 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Descriptive cataloging rules'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 10 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Subject heading system/thesaurus'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 11 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of series'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 12 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Numbered or unnumbered series'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 13 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Heading use-main or added entry'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 14 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Heading use-subject added entry'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 15 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Heading use-series added entry'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 16 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of subject subdivision'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 17 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined character positions'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of government agency'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 28 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Reference evaluation'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 29 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined character position'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 30 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Record update in process'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 31 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undifferentiated personal name'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 32 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Level of establishment'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 33 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined character positions'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 34 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Modified record'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 38 AND rec_type = 'AUT' LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Cataloging source'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 39 AND rec_type = 'AUT' LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 6, '#', 'Not subdivided geographically', '1XX heading is not to be subdivided geographically when used in a subject
                                    access entry in a bibliographic record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'd', 'Subdivided geographically-direct', 'Heading is followed immediately by the name of the specific place to which the
                                    heading is limited without the interposition of a subdivision for the name of
                                    the larger geographic entity.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'i', 'Subdivided geographically-indirect', 'Name of the larger geographic entity is interposed between the heading and the
                                    subdivision for the specific place to which the heading is limited.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'n', 'Not applicable', 'Heading is unestablished or is an established heading that is not appropriate
                                    for use as a subject added entry in bibliographic records (008/15, code b).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 6, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'a', 'a - International standard', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'b', 'b - National standard', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'c', 'c - National library association standard', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'd', 'd - National library or bibliographic agency standard', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'e', 'e - Local standard', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'f', 'f - Standard of unknown origin', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'g', 'g - Conventional romanization or conventional form of name in language of', 'cataloging agency', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'n', 'Not applicable', '1XX heading is not romanized.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 7, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 8, '#', '# - No information provided', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 8, 'b', 'b - English and French', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 8, 'e', 'e - English only', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 8, 'f', 'f - French only', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 8, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'a', 'Established heading', '100-15X field contains an established name, name/title,
                                    uniform title, topical term, or one of these used in an extended subject
                                    heading.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'b', 'Untraced reference', '100-15X field contains an unestablished heading that is not
                                    authorized for use as the element in an access point in a bibliographic record.
                                    The heading is not traced as a 4XX See From Tracing field in any other
                                    authority record. The reference record contains a Complex See Reference (260)
                                    or a General Explanatory Reference (666) field to guide the user to established
                                    heading(s).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'c', 'Traced reference', '100-15X field contains an unestablished heading that is traced
                                    as a 4XX field in the record for each established heading referred to in fields
                                    260 or 664.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'd', 'Subdivision', '18X field contains an unestablished heading that may be used
                                    as a subject subdivision with an established heading.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'e', 'Node label', '15X field contains an unestablished term that is the
                                    authorized form that is used in the systematic section of a thesaurus to
                                    indicate the logical basis on which a category has been divided. 
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'f', 'Established heading and subdivision', '15X field contains an established heading that may be used as
                                    a main term and as a subject subdivision.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, 'g', 'Reference and subdivision', '15X field contains an unestablished heading that may be used
                                    as a reference term and as a subject subdivision.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 9, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, 'a', 'Earlier rules', 'Formulation of the 1XX heading conforms to descriptive cataloging rules used
                                    prior to the 1967 publication of Anglo-American Cataloging Rules (AACR
                                    1).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, 'b', 'AACR 1', 'Formulation of the 1XX heading conforms to the 1967 Anglo-American
                                          Cataloging Rules (AACR 1).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, 'c', 'AACR 2', 'Formulation of the 1XX heading conforms to the second edition (1978) or later
                                    editions of Anglo-American Cataloguing Rules (AACR 2) or published
                                    cataloging manuals based on the AACR 2.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, 'd', 'AACR 2 compatible heading', 'Formulation of the 1XX heading does not follow but is considered compatible
                                    with AACR 2.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, 'z', 'Other', 'Formulation of the 1XX heading conforms to a set of descriptive cataloging
                                    conventions other than what is specified by one of the other defined codes.
                                 
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, 'n', 'Not applicable', '1XX heading is not a name, name/title, or uniform title formulated according to
                                    descriptive cataloging rules and is not appropriate for use as a main or added
                                    entry in bibliographic records.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 10, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'a', 'Library of Congress Subject Headings', '1XX heading conforms to Library of Congress Subject Headings
                                 (LCSH).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'b', 'b - Library of Congress Children''s and Young Adults'' Subject Headings', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'c', 'Medical Subject Headings', '1XX heading conforms to Medical Subject Headings (MeSH).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'd', 'National Agricultural Library subject authority file', '1XX heading conforms to the NAL subject authority file.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'k', 'Canadian Subject Headings', '1XX heading conforms to Canadian Subject Headings.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'n', 'Not applicable', '1XX heading does not conform to subject heading system/thesaurus conventions
                                    and is not appropriate for use as a subject added entry in bibliographic
                                    records.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'r', 'Art and Architecture Thesaurus', '1XX heading conforms to Art and Architecture Thesaurus.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 's', 'Sears List of Subject Heading', '1XX heading conforms to Sears List of Subject Headings.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'v', 'Répertoire de vedettes-matière', '1XX heading conforms to Répertoire de vedettes-matière.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'z', 'Other', '1XX heading conforms to subject heading system/thesaurus conventions other than
                                    that specified by one of the other defined codes. A MARC code for the
                                    conventions used to formulate the heading may be contained in subfield
                                    $f (Subject heading/thesaurus conventions) in field 040 (Cataloging
                                    Source).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 11, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 12, 'a', 'Monographic series', '1XX field contains an established heading for a collective title that applies
                                    to a group of separate publications and/or subseries, each of which also has
                                    its own title.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 12, 'b', 'Multipart item', '1XX field contains an established heading for a collective title that applies
                                    to a multipart monographic publication.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 12, 'c', 'Series-like phrase', '1XX field contains a phrase that is not being used as a series in a
                                    bibliographic record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 12, 'n', 'Not applicable', '1XX field does not represent a series or a series-like phrase and is not
                                    appropriate for use as a series added entry in bibliographic records.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 12, 'z', 'Other', '1XX field contains a heading for a publication that does not fit any of the
                                    other defined codes but for which series-type treatment is required.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 12, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 13, 'a', 'a - Numbered', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 13, 'b', 'b - Unnumbered', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 13, 'c', 'c - Numbering varies', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 13, 'n', 'Not applicable', '1XX heading is not a series heading (008/12, code n).', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 13, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 14, 'a', 'Appropriate', '1XX field contains an established name, name/title, or uniform title that
                                    conforms to descriptive cataloging rules.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 14, 'b', 'Not appropriate', '1XX heading in an established heading record does not conform to descriptive
                                    cataloging conventions or the 1XX field contains an unestablished heading in a
                                    reference, subdivision, or node label record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 14, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 15, 'a', 'Appropriate', '1XX field contains an established heading name, name/title, uniform title,
                                    topical term, or extended subject heading that conforms to subject heading
                                    system/thesaurus conventions.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 15, 'b', 'Not appropriate', '1XX heading in an established heading record does not conform to subject
                                    heading system/thesaurus conventions or the 1XX field contains an unestablished
                                    heading in a reference, subdivision, or node label record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 15, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 16, 'a', 'Appropriate', '1XX heading in an established heading record represents one of the types of
                                    series coded in 008/12 (code a, b, c, or z).
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 16, 'b', 'Not appropriate', '1XX heading in an established heading record does not represent one of the
                                    types of series coded in 008/12 (code n) or the 1XX field contains an
                                    unestablished heading in a reference, subdivision, or node label record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 16, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, 'a', 'a - Topical', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, 'b', 'b - Form', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, 'c', 'c - Chronological', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, 'd', 'd - Geographic', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, 'e', 'e - Language', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, 'n', 'Not applicable', '1XX heading is not an authorized subject subdivision.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 17, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, '#', '# - Not a government agency', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'a', 'a - Autonomous or semi-autonomous component', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'c', 'c - Multilocal', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'f', 'f - Federal/national', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'i', 'i - International intergovernmental', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'l', 'l - Local', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'm', 'm - Multistate', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'o', 'o - Government agency-type undetermined', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 's', 's - State, provincial, territorial, dependent, etc.', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'u', 'u - Unknown if heading is government agency', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'z', 'z - Other', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 28, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'a', 'a - Tracings are consistent with the heading', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'b', 'b - Tracings are not necessarily consistent with the heading', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'n', 'Not applicable', 'Record contains no 4XX/5XX tracing fields.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 29, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 31, 'a', 'a - Record can be used', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 31, 'b', 'Record is being updated', 'Change in the record is being considered and it may not be advisable to use the
                                    1XX heading in bibliographic records.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 31, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 32, 'a', 'Differentiated personal name', 'Personal name in field 100 is a unique name.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 32, 'b', 'Undifferentiated personal name', 'Personal name in field 100 is used by two or more persons.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 32, 'n', 'Not applicable', '1XX heading is not a personal name or the personal name is a family name.', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 32, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'a', 'a - Fully established', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'b', 'Memorandum', '100-151 heading is fully established but it has not been used in a
                                    bibliographic record. The authority work was done before the decision was made
                                    to not use the heading in a bibliographic record; however, the information is
                                    retained for probable future use. When the heading is used in a bibliographic
                                    record, code b may be changed to code a or c.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'c', 'Provisional', '100-151 heading cannot be formulated satisfactorily because of inadequate
                                    information. Further investigation should be made when the heading is next used
                                    in a bibliographic record. When the needed information is available, code c may
                                    be changed to code a.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'd', 'Preliminary', '100-151 heading is taken from a bibliographic record because the bibliographic
                                    item is not available at the time the heading is established. When the heading
                                    is used in a bibliographic record created from cataloging with an item in hand,
                                    code d may be changed to code a.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'n', 'Not applicable', '1XX field contains an unestablished heading in a reference, subdivision,
                                    reference and subdivision, or node label record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 33, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 38, '#', '# - Not modified', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 38, 's', 'Shortened', 'Some of the data has been omitted because the record would have exceeded the
                                    maximum length allowed by a particular system.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 38, 'x', 'Missing characters', 'Characters that could not be converted into machine-readable form due to
                                    character set limitations are missing from the record.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 38, '|', '| - No attempt to code', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 39, '#', '# - National bibliographic agency', '', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 39, 'c', 'Cooperative cataloging program', 'Creator of the authority data is a participant (other than a national
                                    bibliographic agency) in a cooperative cataloging program.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 39, 'd', 'Other', 'Organization that is other than a national bibliographic agency or a
                                    participant in a cooperative cataloging program.
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 39, 'u', 'Unknown', 'Creator of the authority data is unknown. This code is used when an
                                    organization transcribes manual authority data from an unknown source. 
            ', 'authority');
SELECT evergreen.insert_update_coded_value_map('008', 39, '|', '| - No attempt to code', '', 'authority');
-- category: authority tag: 010 file: www.loc.gov/marc/authority/concise/ad010.html
-- category: authority tag: 014 file: www.loc.gov/marc/authority/concise/ad014.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_014_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_014_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_014_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_014_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '014', 'a', 'Control number of related bibliographic record (NR) MARC code (enclosed in parentheses) of the organization that created the related bibliographic record, followed immediately by the bibliographic record control number. See Appendix G: Organization Code Sources for a listing of sources used in MARC 21 records.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '014', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '014', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 014 file: www.loc.gov/marc/authority/concise/ad014.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_014_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_014_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_014_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_014_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '014', 'a', 'Control number of related bibliographic record (NR) MARC code (enclosed in parentheses) of the organization that created the related bibliographic record, followed immediately by the bibliographic record control number. See Appendix G: Organization Code Sources for a listing of sources used in MARC 21 records.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '014', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '014', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 016 file: www.loc.gov/marc/authority/concise/ad016.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_016_ind_1$ident$,
            BTRIM($label$First - National bibliographic agency

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_016_ind_1', '#', 'Library and Archives Canada', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_016_ind_1', '7', 'Source specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_016_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_016_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', 'a', 'Record control number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', 'z', 'Canceled or invalid record control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', '2', 'Source (NR) MARC code or the name of the organization that identifies the national bibliographic agency that was the source of the record control number. Code from: MARC Code List for Organizations.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 016 file: www.loc.gov/marc/authority/concise/ad016.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_016_ind_1$ident$,
            BTRIM($label$First - National bibliographic agency

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_016_ind_1', '#', 'Library and Archives Canada', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_016_ind_1', '7', 'Source specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_016_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_016_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', 'a', 'Record control number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', 'z', 'Canceled or invalid record control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', '2', 'Source (NR) MARC code or the name of the organization that identifies the national bibliographic agency that was the source of the record control number. Code from: MARC Code List for Organizations.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '016', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 031 file: www.loc.gov/marc/authority/concise/ad031.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_031_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_031_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_031_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_031_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'b', 'Number of movement (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'c', 'Number of excerpt (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'd', 'Caption or heading (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'e', 'Role (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'g', 'Clef (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'm', 'Voice/instrument (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'n', 'Key signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'o', 'Time signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'p', 'Musical notation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'q', 'General note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'r', 'Key or mode (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 's', 'Coded validity note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 't', 'Text incipit (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'y', 'Link text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', '2', 'System code (NR) MARC code that identifies the encoding system used to transcribe the musical notation in subfield $p (Musical notation). Use of subfield $2 is mandatory if subfield $p is present. Code from: Musical Incipit Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 031 file: www.loc.gov/marc/authority/concise/ad031.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_031_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_031_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_031_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_031_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'b', 'Number of movement (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'c', 'Number of excerpt (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'd', 'Caption or heading (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'e', 'Role (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'g', 'Clef (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'm', 'Voice/instrument (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'n', 'Key signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'o', 'Time signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'p', 'Musical notation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'q', 'General note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'r', 'Key or mode (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 's', 'Coded validity note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 't', 'Text incipit (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'y', 'Link text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', '2', 'System code (NR) MARC code that identifies the encoding system used to transcribe the musical notation in subfield $p (Musical notation). Use of subfield $2 is mandatory if subfield $p is present. Code from: Musical Incipit Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '031', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 035 file: www.loc.gov/marc/authority/concise/ad035.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_035_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_035_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_035_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_035_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', 'a', 'System control number (NR) MARC code (enclosed in parentheses) of the organization originating the system control number, followed immediately by the number. See Appendix G: Organization Code Sources.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', 'z', 'Canceled/invalid system control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 035 file: www.loc.gov/marc/authority/concise/ad035.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_035_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_035_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_035_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_035_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', 'a', 'System control number (NR) MARC code (enclosed in parentheses) of the organization originating the system control number, followed immediately by the number. See Appendix G: Organization Code Sources.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', 'z', 'Canceled/invalid system control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '035', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 042 file: www.loc.gov/marc/authority/concise/ad042.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_042_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_042_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_042_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_042_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '042', 'a', 'Authentication code (R) If more than one code is applicable, the subfield is repeated. Code from: MARC Authentication Action Code List.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 042 file: www.loc.gov/marc/authority/concise/ad042.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_042_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_042_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_042_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_042_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '042', 'a', 'Authentication code (R) If more than one code is applicable, the subfield is repeated. Code from: MARC Authentication Action Code List.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 045 file: www.loc.gov/marc/authority/concise/ad045.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_045_ind_1$ident$,
            BTRIM($label$First - Type of time period in subfield $b or $c

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '#', 'Subfield $b or $c not present', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '0', 'Single date/time', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '1', 'Multiple single dates/times', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '2', 'Range of dates/times', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_045_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', 'a', 'Time period code (R) Four-character alphanumeric code derived from the "Time Period Code Table" for B.C. and C.E. time periods. Table is found in the MARC 21 Format for Authority Data under the description of field 045, subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', 'b', 'Formatted 9999 B.C. through C.E. time period (R) Specific time period formatted as yyyymmddhh, preceded by a code for the era (c for B.C.; d for C.E.).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', 'c', 'Formatted pre-9999 B.C. time period (R) Formatted time period that consists of as many numeric characters as are needed to represent the number of pre-9999 years B.C.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 045 file: www.loc.gov/marc/authority/concise/ad045.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_045_ind_1$ident$,
            BTRIM($label$First - Type of time period in subfield $b or $c

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '#', 'Subfield $b or $c not present', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '0', 'Single date/time', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '1', 'Multiple single dates/times', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_1', '2', 'Range of dates/times', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_045_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_045_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', 'a', 'Time period code (R) Four-character alphanumeric code derived from the "Time Period Code Table" for B.C. and C.E. time periods. Table is found in the MARC 21 Format for Authority Data under the description of field 045, subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', 'b', 'Formatted 9999 B.C. through C.E. time period (R) Specific time period formatted as yyyymmddhh, preceded by a code for the era (c for B.C.; d for C.E.).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', 'c', 'Formatted pre-9999 B.C. time period (R) Formatted time period that consists of as many numeric characters as are needed to represent the number of pre-9999 years B.C.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '045', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 066 file: www.loc.gov/marc/authority/concise/ad066.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_066_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_066_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_066_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_066_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '066', 'a', 'Primary G0 character set (NR) Code is composed of the Intermediate and Final characters of the escape sequence that designates and invokes the default G0 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '066', 'b', 'Primary G1 character set (NR) Code is composed of the Intermediate and Final characters of the escape sequence that designates and invokes the default G1 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '066', 'c', 'Alternate G0 or G1 character set (R) Code is composed of the Intermediate and Final characters of each escape sequence that will be used to designate an alternate graphic character set used in the record.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 066 file: www.loc.gov/marc/authority/concise/ad066.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_066_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_066_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_066_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_066_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '066', 'a', 'Primary G0 character set (NR) Code is composed of the Intermediate and Final characters of the escape sequence that designates and invokes the default G0 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '066', 'b', 'Primary G1 character set (NR) Code is composed of the Intermediate and Final characters of the escape sequence that designates and invokes the default G1 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '066', 'c', 'Alternate G0 or G1 character set (R) Code is composed of the Intermediate and Final characters of each escape sequence that will be used to designate an alternate graphic character set used in the record.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 072 file: www.loc.gov/marc/authority/concise/ad072.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_072_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_072_ind_2$ident$,
            BTRIM($label$Second - Code source

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_2', '0', 'NAL subject category code list', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', 'a', 'Subject category code (NR) Code for the broad subject category to which the heading belongs in a hierarchically-arranged thesaurus.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', 'x', 'Subject category code subdivision (R) Level of specificity within the broader category coded in subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', '2', 'Code source (NR) MARC code that identifies the thesaurus used to assign the subject category code when the second indicator position of this field contains value 7. Code from: Subject Category Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 072 file: www.loc.gov/marc/authority/concise/ad072.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_072_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_072_ind_2$ident$,
            BTRIM($label$Second - Code source

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_2', '0', 'NAL subject category code list', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_072_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', 'a', 'Subject category code (NR) Code for the broad subject category to which the heading belongs in a hierarchically-arranged thesaurus.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', 'x', 'Subject category code subdivision (R) Level of specificity within the broader category coded in subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', '2', 'Code source (NR) MARC code that identifies the thesaurus used to assign the subject category code when the second indicator position of this field contains value 7. Code from: Subject Category Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '072', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 073 file: www.loc.gov/marc/authority/concise/ad073.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_073_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_073_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_073_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_073_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', 'a', 'Subdivision usage (R) Category designator code that specifies the category of terms with which the subdivision may be used.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', 'z', 'Code source (NR) MARC code that identifies the thesaurus used to assign the category designator code. Code from: Subject Category Code Source Codes .','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 073 file: www.loc.gov/marc/authority/concise/ad073.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_073_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_073_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_073_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_073_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', 'a', 'Subdivision usage (R) Category designator code that specifies the category of terms with which the subdivision may be used.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', 'z', 'Code source (NR) MARC code that identifies the thesaurus used to assign the category designator code. Code from: Subject Category Code Source Codes .','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '073', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 086 file: www.loc.gov/marc/authority/concise/ad086.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_086_ind_1$ident$,
            BTRIM($label$First - Number source

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_1', '#', 'Source specified in subfield $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_1', '0', 'Superintendent of Documents Classification System', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_1', '1', 'Government of Canada Publications: Outline of Classification', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_086_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', 'a', 'Call number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', 'd', 'Volumes/dates to which call number applies (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', 'z', 'Canceled/invalid call number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '2', 'Number source (NR) MARC code that identifies the government document classification system or scheme when the first indicator position contains value blank (#). Code from: Classification Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 086 file: www.loc.gov/marc/authority/concise/ad086.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_086_ind_1$ident$,
            BTRIM($label$First - Number source

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_1', '#', 'Source specified in subfield $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_1', '0', 'Superintendent of Documents Classification System', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_1', '1', 'Government of Canada Publications: Outline of Classification', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_086_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_086_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', 'a', 'Call number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', 'd', 'Volumes/dates to which call number applies (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', 'z', 'Canceled/invalid call number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '2', 'Number source (NR) MARC code that identifies the government document classification system or scheme when the first indicator position contains value blank (#). Code from: Classification Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '086', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 09x file: www.loc.gov/marc/authority/concise/ad09x.html
-- category: authority tag: 640 file: www.loc.gov/marc/authority/concise/ad640.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_640_ind_1$ident$,
            BTRIM($label$First - Note format style

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_640_ind_1', '0', 'Formatted style', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_640_ind_1', '1', 'Unformatted style', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_640_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_640_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', 'a', 'Dates of publication and/or sequential designation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', 'z', 'Source of information (NR) Citation for the source of the information contained in subfield $a. Instruction term: Cf. may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 640 file: www.loc.gov/marc/authority/concise/ad640.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_640_ind_1$ident$,
            BTRIM($label$First - Note format style

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_640_ind_1', '0', 'Formatted style', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_640_ind_1', '1', 'Unformatted style', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_640_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_640_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', 'a', 'Dates of publication and/or sequential designation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', 'z', 'Source of information (NR) Citation for the source of the information contained in subfield $a. Instruction term: Cf. may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '640', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 641 file: www.loc.gov/marc/authority/concise/ad641.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_641_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_641_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_641_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_641_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', 'a', 'Numbering peculiarities note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', 'z', 'Source of information (NR) Citation for the source of the information contained in subfield $a. Instruction term: Cf. may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 641 file: www.loc.gov/marc/authority/concise/ad641.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_641_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_641_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_641_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_641_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', 'a', 'Numbering peculiarities note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', 'z', 'Source of information (NR) Citation for the source of the information contained in subfield $a. Instruction term: Cf. may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '641', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 642 file: www.loc.gov/marc/authority/concise/ad642.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_642_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_642_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_642_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_642_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', 'a', 'Series numbering example (NR) Form of number in series a.e.: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', 'd', 'Volumes/dates to which series numbering example applies (NR) Statement used only when the series numbering example contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', '5', 'Institution/copy to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 642 file: www.loc.gov/marc/authority/concise/ad642.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_642_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_642_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_642_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_642_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', 'a', 'Series numbering example (NR) Form of number in series a.e.: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', 'd', 'Volumes/dates to which series numbering example applies (NR) Statement used only when the series numbering example contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', '5', 'Institution/copy to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '642', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 643 file: www.loc.gov/marc/authority/concise/ad643.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_643_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_643_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_643_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_643_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', 'a', 'Place (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', 'b', 'Publisher/issuing body (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', 'd', 'Volumes/dates to which place and publisher/issuing body apply (NR) Used only when the data contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 643 file: www.loc.gov/marc/authority/concise/ad643.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_643_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_643_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_643_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_643_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', 'a', 'Place (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', 'b', 'Publisher/issuing body (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', 'd', 'Volumes/dates to which place and publisher/issuing body apply (NR) Used only when the data contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '643', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 644 file: www.loc.gov/marc/authority/concise/ad644.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_644_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_644_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_644_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_644_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', 'a', 'Series analysis practice (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', 'b', 'Exceptions to analysis practice (NR) Statement identifying those items in the series to which the analysis practice code contained in subfield $a does not apply.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', 'd', 'Volumes/dates to which analysis practice applies (NR) Statement that is used only when the data contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', '5', 'Institution/copy to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 644 file: www.loc.gov/marc/authority/concise/ad644.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_644_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_644_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_644_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_644_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', 'a', 'Series analysis practice (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', 'b', 'Exceptions to analysis practice (NR) Statement identifying those items in the series to which the analysis practice code contained in subfield $a does not apply.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', 'd', 'Volumes/dates to which analysis practice applies (NR) Statement that is used only when the data contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', '5', 'Institution/copy to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '644', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 645 file: www.loc.gov/marc/authority/concise/ad645.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_645_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_645_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_645_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_645_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', 'a', 'Series tracing practice (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', 'd', 'Volumes/dates to which tracing practice applies (NR) Statement used only when the tracing practice contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', '5', 'Institution/copy to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 645 file: www.loc.gov/marc/authority/concise/ad645.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_645_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_645_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_645_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_645_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', 'a', 'Series tracing practice (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', 'd', 'Volumes/dates to which tracing practice applies (NR) Statement used only when the tracing practice contained in subfield $a does not apply to all items in the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', '5', 'Institution/copy to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '645', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 646 file: www.loc.gov/marc/authority/concise/ad646.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_646_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_646_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_646_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_646_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', 'a', 'Series classification practice (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', 'd', 'Volumes/dates to which classification practice applies (NR) Statement used only when the classification practice contained in subfield $a does not apply to all items of the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 646 file: www.loc.gov/marc/authority/concise/ad646.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_646_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_646_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_646_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_646_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', 'a', 'Series classification practice (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', 'd', 'Volumes/dates to which classification practice applies (NR) Statement used only when the classification practice contained in subfield $a does not apply to all items of the series. Applies to: may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '646', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 663 file: www.loc.gov/marc/authority/concise/ad663.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_663_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_663_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_663_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_663_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', 'a', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', 'b', 'Heading referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', 't', 'Title referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 663 file: www.loc.gov/marc/authority/concise/ad663.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_663_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_663_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_663_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_663_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', 'a', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', 'b', 'Heading referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', 't', 'Title referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '663', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 664 file: www.loc.gov/marc/authority/concise/ad664.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_664_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_664_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_664_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_664_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', 'a', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', 'b', 'Heading referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', 't', 'Title referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 664 file: www.loc.gov/marc/authority/concise/ad664.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_664_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_664_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_664_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_664_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', 'a', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', 'b', 'Heading referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', 't', 'Title referred to (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '664', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 665 file: www.loc.gov/marc/authority/concise/ad665.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_665_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_665_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_665_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_665_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '665', 'a', 'History reference (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '665', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '665', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 665 file: www.loc.gov/marc/authority/concise/ad665.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_665_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_665_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_665_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_665_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '665', 'a', 'History reference (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '665', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '665', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 666 file: www.loc.gov/marc/authority/concise/ad666.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_666_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_666_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_666_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_666_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '666', 'a', 'General explanatory reference (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '666', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '666', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 666 file: www.loc.gov/marc/authority/concise/ad666.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_666_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_666_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_666_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_666_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '666', 'a', 'General explanatory reference (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '666', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '666', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 667 file: www.loc.gov/marc/authority/concise/ad667.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_667_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_667_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_667_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_667_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', 'a', 'Nonpublic general note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 667 file: www.loc.gov/marc/authority/concise/ad667.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_667_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_667_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_667_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_667_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', 'a', 'Nonpublic general note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '667', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 681 file: www.loc.gov/marc/authority/concise/ad681.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_681_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_681_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_681_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_681_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', 'a', 'Subject heading or subdivision term (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', 'i', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 681 file: www.loc.gov/marc/authority/concise/ad681.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_681_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_681_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_681_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_681_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', 'a', 'Subject heading or subdivision term (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', 'i', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '681', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 682 file: www.loc.gov/marc/authority/concise/ad682.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_682_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_682_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_682_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_682_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', 'a', 'Replacement heading (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', 'i', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', '0', 'Replacement authority record control number (R) System control number of the replacement authority record preceded by the MARC code, enclosed in parentheses, for the agency to which the control number applies. See Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 682 file: www.loc.gov/marc/authority/concise/ad682.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_682_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_682_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_682_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_682_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', 'a', 'Replacement heading (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', 'i', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', '0', 'Replacement authority record control number (R) System control number of the replacement authority record preceded by the MARC code, enclosed in parentheses, for the agency to which the control number applies. See Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '682', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 688 file: www.loc.gov/marc/authority/concise/ad688.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_688_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_688_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_688_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_688_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', 'a', 'Application history note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 688 file: www.loc.gov/marc/authority/concise/ad688.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_688_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_688_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_688_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_688_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', 'a', 'Application history note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '688', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 880 file: www.loc.gov/marc/authority/concise/ad880.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_880_ind_1$ident$,
            BTRIM($label$First - Same as associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_880_ind_2$ident$,
            BTRIM($label$Second - Same as associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'a', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'b', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'c', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'd', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'e', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'f', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'g', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'h', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'i', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'j', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'k', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'l', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'm', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'n', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'o', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'p', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'q', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'r', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 's', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 't', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'u', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'v', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'w', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'x', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'y', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'z', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '0', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '1', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '2', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '3', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '4', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '5', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '7', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '8', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '9', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 880 file: www.loc.gov/marc/authority/concise/ad880.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_880_ind_1$ident$,
            BTRIM($label$First - Same as associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_880_ind_2$ident$,
            BTRIM($label$Second - Same as associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'a', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'b', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'c', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'd', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'e', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'f', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'g', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'h', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'i', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'j', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'k', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'l', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'm', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'n', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'o', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'p', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'q', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'r', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 's', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 't', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'u', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'v', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'w', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'x', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'y', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', 'z', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '0', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '1', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '2', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '3', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '4', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '5', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '7', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '8', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '9', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '880', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 001 file: www.loc.gov/marc/bibliographic/concise/bd001.html
-- category: biblio tag: 003 file: www.loc.gov/marc/bibliographic/concise/bd003.html
-- category: biblio tag: 005 file: www.loc.gov/marc/bibliographic/concise/bd005.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007f.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007o.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007q.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007r.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007t.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007z.html
-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008.html
-- category: biblio tag: 010 file: www.loc.gov/marc/bibliographic/concise/bd010.html
-- category: biblio tag: 013 file: www.loc.gov/marc/bibliographic/concise/bd013.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_013_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_013_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_013_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_013_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'a', 'Number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'b', 'Country (NR) Code representing the country or jurisdiction associated with the patent document. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'c', 'Type of number (NR) Type of patent document identifier','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'd', 'Date (R) Date a patent or certificate was granted, or the date of acceptance of an application. The date requires 8 numeric characters in the pattern yyyymmdd (4 for the year, 2 for the month, and 2 for the day).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'e', 'Status (R) Text that explains or clarifies the status of the patent document identified by the number in the field.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'f', 'Party to document (R) Information that identifies the country or agency that is party to the document, usually an application for patent or related document. Codes from: MARC Code List for Countries and MARC Code List for Organizations.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 013 file: www.loc.gov/marc/bibliographic/concise/bd013.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_013_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_013_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_013_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_013_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'a', 'Number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'b', 'Country (NR) Code representing the country or jurisdiction associated with the patent document. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'c', 'Type of number (NR) Type of patent document identifier','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'd', 'Date (R) Date a patent or certificate was granted, or the date of acceptance of an application. The date requires 8 numeric characters in the pattern yyyymmdd (4 for the year, 2 for the month, and 2 for the day).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'e', 'Status (R) Text that explains or clarifies the status of the patent document identified by the number in the field.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', 'f', 'Party to document (R) Information that identifies the country or agency that is party to the document, usually an application for patent or related document. Codes from: MARC Code List for Countries and MARC Code List for Organizations.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '013', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 016 file: www.loc.gov/marc/bibliographic/concise/bd016.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_016_ind_1$ident$,
            BTRIM($label$First - National bibliographic agency

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_016_ind_1', '#', 'Library and Archives Canada', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_016_ind_1', '7', 'Source specified in subfield $2
            Used when the source of the control number is indicated by a code in subfield
                                    $2.   Codes from:   MARC Code List for Organizations.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_016_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_016_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', 'a', 'Record control number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', 'z', 'Canceled/invalid control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', '2', 'Source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 016 file: www.loc.gov/marc/bibliographic/concise/bd016.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_016_ind_1$ident$,
            BTRIM($label$First - National bibliographic agency

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_016_ind_1', '#', 'Library and Archives Canada', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_016_ind_1', '7', 'Source specified in subfield $2
            Used when the source of the control number is indicated by a code in subfield
                                    $2.   Codes from:   MARC Code List for Organizations.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_016_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_016_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', 'a', 'Record control number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', 'z', 'Canceled/invalid control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', '2', 'Source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '016', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 018 file: www.loc.gov/marc/bibliographic/concise/bd018.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_018_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_018_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_018_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_018_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '018', 'a', 'Copyright article-fee code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '018', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '018', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 018 file: www.loc.gov/marc/bibliographic/concise/bd018.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_018_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_018_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_018_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_018_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '018', 'a', 'Copyright article-fee code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '018', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '018', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 025 file: www.loc.gov/marc/bibliographic/concise/bd025.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_025_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_025_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_025_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_025_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '025', 'a', 'Overseas acquisition number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '025', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 025 file: www.loc.gov/marc/bibliographic/concise/bd025.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_025_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_025_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_025_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_025_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '025', 'a', 'Overseas acquisition number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '025', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 026 file: www.loc.gov/marc/bibliographic/concise/bd026.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_026_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_026_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_026_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_026_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'a', 'First and second groups of characters (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'b', 'Third and fourth groups of characters (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'c', 'Date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'd', 'Number of volume or part (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'e', 'Unparsed fingerprint (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '2', 'Source (NR) MARC code that identifies the guidelines followed to establish the fingerprint. Code from: Fingerprint Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 026 file: www.loc.gov/marc/bibliographic/concise/bd026.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_026_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_026_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_026_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_026_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'a', 'First and second groups of characters (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'b', 'Third and fourth groups of characters (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'c', 'Date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'd', 'Number of volume or part (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', 'e', 'Unparsed fingerprint (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '2', 'Source (NR) MARC code that identifies the guidelines followed to establish the fingerprint. Code from: Fingerprint Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '026', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 030 file: www.loc.gov/marc/bibliographic/concise/bd030.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_030_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_030_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_030_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_030_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', 'a', 'CODEN (NR) Valid CODEN for the title.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', 'z', 'Canceled/invalid CODEN (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 030 file: www.loc.gov/marc/bibliographic/concise/bd030.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_030_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_030_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_030_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_030_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', 'a', 'CODEN (NR) Valid CODEN for the title.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', 'z', 'Canceled/invalid CODEN (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '030', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 031 file: www.loc.gov/marc/bibliographic/concise/bd031.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_031_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_031_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_031_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_031_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'a', 'Number of work (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'b', 'Number of movement (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'c', 'Number of excerpt (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'd', 'Caption or heading (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'e', 'Role (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'g', 'Clef (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'm', 'Voice/instrument (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'n', 'Key signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'o', 'Time signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'p', 'Musical notation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'q', 'General note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'r', 'Key or mode (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 's', 'Coded validity note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 't', 'Text incipit (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'y', 'Link text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', '2', 'System code (NR) MARC code that identifies the encoding system used to transcribe the musical notation in subfield $p (Musical notation). Use of subfield $2 is mandatory if subfield $p is present. Code from: Musical Incipit Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 031 file: www.loc.gov/marc/bibliographic/concise/bd031.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_031_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_031_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_031_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_031_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'a', 'Number of work (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'b', 'Number of movement (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'c', 'Number of excerpt (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'd', 'Caption or heading (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'e', 'Role (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'g', 'Clef (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'm', 'Voice/instrument (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'n', 'Key signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'o', 'Time signature (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'p', 'Musical notation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'q', 'General note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'r', 'Key or mode (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 's', 'Coded validity note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 't', 'Text incipit (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'y', 'Link text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', '2', 'System code (NR) MARC code that identifies the encoding system used to transcribe the musical notation in subfield $p (Musical notation). Use of subfield $2 is mandatory if subfield $p is present. Code from: Musical Incipit Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '031', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 032 file: www.loc.gov/marc/bibliographic/concise/bd032.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_032_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_032_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_032_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_032_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', 'a', 'Postal registration number (NR) Numbers are right justified and each unused position contains a zero. The hyphen that may appear between the third and fourth digits on printed sources is not carried in the MARC record; it may be generated.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', 'b', 'Source agency assigning number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 032 file: www.loc.gov/marc/bibliographic/concise/bd032.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_032_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_032_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_032_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_032_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', 'a', 'Postal registration number (NR) Numbers are right justified and each unused position contains a zero. The hyphen that may appear between the third and fourth digits on printed sources is not carried in the MARC record; it may be generated.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', 'b', 'Source agency assigning number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '032', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 035 file: www.loc.gov/marc/bibliographic/concise/bd035.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_035_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_035_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_035_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_035_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', 'a', 'System control number (NR) MARC code (enclosed in parentheses) of the organization originating the system control number, followed immediately by the number. See Appendix I: Organization Code Sources for a listing of sources used in MARC 21 records.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', 'z', 'Canceled/invalid control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 035 file: www.loc.gov/marc/bibliographic/concise/bd035.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_035_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_035_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_035_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_035_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', 'a', 'System control number (NR) MARC code (enclosed in parentheses) of the organization originating the system control number, followed immediately by the number. See Appendix I: Organization Code Sources for a listing of sources used in MARC 21 records.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', 'z', 'Canceled/invalid control number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '035', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 036 file: www.loc.gov/marc/bibliographic/concise/bd036.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_036_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_036_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_036_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_036_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', 'a', 'Original study number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', 'b', 'Source agency assigning number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 036 file: www.loc.gov/marc/bibliographic/concise/bd036.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_036_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_036_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_036_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_036_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', 'a', 'Original study number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', 'b', 'Source agency assigning number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '036', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 038 file: www.loc.gov/marc/bibliographic/concise/bd038.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_038_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_038_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_038_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_038_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '038', 'a', 'Record content licensor (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '038', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '038', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 038 file: www.loc.gov/marc/bibliographic/concise/bd038.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_038_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_038_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_038_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_038_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '038', 'a', 'Record content licensor (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '038', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '038', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 042 file: www.loc.gov/marc/bibliographic/concise/bd042.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_042_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_042_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_042_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_042_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '042', 'a', 'Authentication code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 042 file: www.loc.gov/marc/bibliographic/concise/bd042.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_042_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_042_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_042_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_042_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '042', 'a', 'Authentication code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 044 file: www.loc.gov/marc/bibliographic/concise/bd044.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_044_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_044_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_044_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_044_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', 'a', 'MARC country code (R) Code appearing in 008/15-17 is given as the first subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', 'b', 'Local subentity code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', 'c', 'ISO country code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', '2', 'Source of local subentity code (R) Source from which the local code was assigned. Code from: Country Code and Term Source Codes.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 044 file: www.loc.gov/marc/bibliographic/concise/bd044.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_044_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_044_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_044_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_044_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', 'a', 'MARC country code (R) Code appearing in 008/15-17 is given as the first subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', 'b', 'Local subentity code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', 'c', 'ISO country code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', '2', 'Source of local subentity code (R) Source from which the local code was assigned. Code from: Country Code and Term Source Codes.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '044', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 045 file: www.loc.gov/marc/bibliographic/concise/bd045.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_045_ind_1$ident$,
            BTRIM($label$First - Type of time period in subfield $b or $c

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '#', 'Subfield $b or $c not present', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '0', 'Single date/time', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '1', 'Multiple single dates/times
            Multiple $b and/or $c subfields are present, each
                                    containing a date/time.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '2', 'Range of dates/times
            Two $b and/or $c subfields are present and contain a
                                    range of dates/times.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_045_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', 'a', 'Time period code (R) Four-character alphanumeric code derived from the "Time Period Code Table" for B.C. and A.D. time periods. Table is found in MARC 21 Format for Bibliographic Data under the description of field 045.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', 'b', 'Formatted 9999 B.C. through C.E. time period (R) Specific time period recorded in the pattern yyyymmddhh and preceded by a code for the era (c for B.C.; d for C.E.).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', 'c', 'Formatted pre-9999 B.C. time period (R) Formatted time period that consists of as many numeric characters as are needed to represent the number of pre-9999 years B.C.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 045 file: www.loc.gov/marc/bibliographic/concise/bd045.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_045_ind_1$ident$,
            BTRIM($label$First - Type of time period in subfield $b or $c

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '#', 'Subfield $b or $c not present', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '0', 'Single date/time', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '1', 'Multiple single dates/times
            Multiple $b and/or $c subfields are present, each
                                    containing a date/time.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_1', '2', 'Range of dates/times
            Two $b and/or $c subfields are present and contain a
                                    range of dates/times.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_045_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_045_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', 'a', 'Time period code (R) Four-character alphanumeric code derived from the "Time Period Code Table" for B.C. and A.D. time periods. Table is found in MARC 21 Format for Bibliographic Data under the description of field 045.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', 'b', 'Formatted 9999 B.C. through C.E. time period (R) Specific time period recorded in the pattern yyyymmddhh and preceded by a code for the era (c for B.C.; d for C.E.).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', 'c', 'Formatted pre-9999 B.C. time period (R) Formatted time period that consists of as many numeric characters as are needed to represent the number of pre-9999 years B.C.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '045', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 047 file: www.loc.gov/marc/bibliographic/concise/bd047.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_047_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_047_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_047_ind_2$ident$,
            BTRIM($label$Second - Source of code

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_047_ind_2', '#', 'MARC musical composition code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_047_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '047', 'a', 'Form of musical composition code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '047', '2', 'Source of code (NR) A code that identifies the source from which the musical composition code was assigned. Code from: Musical Composition Form Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '047', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 047 file: www.loc.gov/marc/bibliographic/concise/bd047.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_047_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_047_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_047_ind_2$ident$,
            BTRIM($label$Second - Source of code

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_047_ind_2', '#', 'MARC musical composition code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_047_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '047', 'a', 'Form of musical composition code (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '047', '2', 'Source of code (NR) A code that identifies the source from which the musical composition code was assigned. Code from: Musical Composition Form Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '047', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 048 file: www.loc.gov/marc/bibliographic/concise/bd048.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_048_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_048_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_048_ind_2$ident$,
            BTRIM($label$Second - Source of code

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_048_ind_2', '#', 'MARC code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_048_ind_2', '7', 'Source specified in subfield ‡2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', 'a', 'Performer or ensemble (R) Two-character code for a performer or ensemble (from the list below) and, if applicable, a two-digit number specifying the number of parts.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', 'b', 'Soloist (R) Two-character alphabetic code for a soloist (from the list below) and, if applicable, a two-digit number specifying the number of parts.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', '2', 'Source of code (NR) Code from: Musical Instrumentation and Voice Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields. MARC 21 Instruments or Voices Codes','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 048 file: www.loc.gov/marc/bibliographic/concise/bd048.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_048_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_048_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_048_ind_2$ident$,
            BTRIM($label$Second - Source of code

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_048_ind_2', '#', 'MARC code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_048_ind_2', '7', 'Source specified in subfield ‡2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', 'a', 'Performer or ensemble (R) Two-character code for a performer or ensemble (from the list below) and, if applicable, a two-digit number specifying the number of parts.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', 'b', 'Soloist (R) Two-character alphabetic code for a soloist (from the list below) and, if applicable, a two-digit number specifying the number of parts.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', '2', 'Source of code (NR) Code from: Musical Instrumentation and Voice Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '048', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields. MARC 21 Instruments or Voices Codes','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 051 file: www.loc.gov/marc/bibliographic/concise/bd051.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_051_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_051_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_051_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_051_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', 'a', 'Classification number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', 'b', 'Item number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', 'c', 'Copy information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 051 file: www.loc.gov/marc/bibliographic/concise/bd051.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_051_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_051_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_051_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_051_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', 'a', 'Classification number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', 'b', 'Item number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', 'c', 'Copy information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '051', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 061 file: www.loc.gov/marc/bibliographic/concise/bd061.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_061_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_061_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_061_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_061_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', 'a', 'Classification number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', 'b', 'Item number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', 'c', 'Copy information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 061 file: www.loc.gov/marc/bibliographic/concise/bd061.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_061_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_061_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_061_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_061_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', 'a', 'Classification number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', 'b', 'Item number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', 'c', 'Copy information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '061', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 066 file: www.loc.gov/marc/bibliographic/concise/bd066.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_066_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_066_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_066_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_066_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '066', 'a', 'Primary G0 character set (NR) Code is the Intermediate and Final characters of the escape sequence that designates and invokes the default G0 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '066', 'b', 'Primary G1 character set (NR) Code is composed of the Intermediate and Final characters of the escape sequence that designates and invokes the default G1 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '066', 'c', 'Alternate G0 or G1 character set (R) Code is the Intermediate and Final characters of each escape sequence that will be used to designate an alternate graphic character set used in the record.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 066 file: www.loc.gov/marc/bibliographic/concise/bd066.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_066_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_066_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_066_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_066_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '066', 'a', 'Primary G0 character set (NR) Code is the Intermediate and Final characters of the escape sequence that designates and invokes the default G0 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '066', 'b', 'Primary G1 character set (NR) Code is composed of the Intermediate and Final characters of the escape sequence that designates and invokes the default G1 character set.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '066', 'c', 'Alternate G0 or G1 character set (R) Code is the Intermediate and Final characters of each escape sequence that will be used to designate an alternate graphic character set used in the record.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 071 file: www.loc.gov/marc/bibliographic/concise/bd071.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_071_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_071_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_071_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_071_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', 'a', 'Classification number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', 'b', 'Item number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', 'c', 'Copy information (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 071 file: www.loc.gov/marc/bibliographic/concise/bd071.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_071_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_071_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_071_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_071_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', 'a', 'Classification number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', 'b', 'Item number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', 'c', 'Copy information (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '071', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 072 file: www.loc.gov/marc/bibliographic/concise/bd072.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_072_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_072_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_072_ind_2$ident$,
            BTRIM($label$Second - Code source

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_072_ind_2', '0', 'NAL subject category code list', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_072_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', 'a', 'Subject category code (NR) Code for the broad subject associated with the item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', 'x', 'Subject category code subdivision (R) Level of specificity within the broader category coded in subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', '2', 'Source (NR) MARC code that identifies the thesaurus used to assign the subject category code when the second indicator position contains value 7. Code from: Subject Category Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 072 file: www.loc.gov/marc/bibliographic/concise/bd072.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_072_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_072_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_072_ind_2$ident$,
            BTRIM($label$Second - Code source

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_072_ind_2', '0', 'NAL subject category code list', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_072_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', 'a', 'Subject category code (NR) Code for the broad subject associated with the item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', 'x', 'Subject category code subdivision (R) Level of specificity within the broader category coded in subfield $a.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', '2', 'Source (NR) MARC code that identifies the thesaurus used to assign the subject category code when the second indicator position contains value 7. Code from: Subject Category Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '072', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 074 file: www.loc.gov/marc/bibliographic/concise/bd074.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_074_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_074_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_074_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_074_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '074', 'a', 'GPO item number (NR) GPO Item No. : may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '074', 'z', 'Canceled/invalid GPO item number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '074', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 074 file: www.loc.gov/marc/bibliographic/concise/bd074.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_074_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_074_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_074_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_074_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '074', 'a', 'GPO item number (NR) GPO Item No. : may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '074', 'z', 'Canceled/invalid GPO item number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '074', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 09x file: www.loc.gov/marc/bibliographic/concise/bd09x.html
-- category: biblio tag: 222 file: www.loc.gov/marc/bibliographic/concise/bd222.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_222_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_222_ind_2$ident$,
            BTRIM($label$Second - Nonfiling characters

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', 'a', 'Key title (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', 'b', 'Qualifying information (NR) Parenthetical information that that qualifies the title to make it unique.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 222 file: www.loc.gov/marc/bibliographic/concise/bd222.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_222_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_222_ind_2$ident$,
            BTRIM($label$Second - Nonfiling characters

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_222_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', 'a', 'Key title (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', 'b', 'Qualifying information (NR) Parenthetical information that that qualifies the title to make it unique.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '222', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 242 file: www.loc.gov/marc/bibliographic/concise/bd242.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_242_ind_1$ident$,
            BTRIM($label$First - Title added entry

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_1', '0', 'No added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_1', '1', 'Added entry', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_242_ind_2$ident$,
            BTRIM($label$Second - Nonfiling characters

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'a', 'Title (NR) Title proper, exclusive of the designation of number or name of part and any alternative title.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'b', 'Remainder of title (NR) Includes parallel, alternative, and other title information.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'c', 'Statement of responsibility, etc. (NR) Statement of responsibility and/or any remaining title statement data that are not more appropriately contained in one of the other subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'h', 'Medium (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'n', 'Number of part/section of a work (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'p', 'Name of part/section of a work (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'y', 'Language code of translated title (NR) Code from: MARC Code List for Languages.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 242 file: www.loc.gov/marc/bibliographic/concise/bd242.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_242_ind_1$ident$,
            BTRIM($label$First - Title added entry

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_1', '0', 'No added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_1', '1', 'Added entry', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_242_ind_2$ident$,
            BTRIM($label$Second - Nonfiling characters

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_242_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'a', 'Title (NR) Title proper, exclusive of the designation of number or name of part and any alternative title.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'b', 'Remainder of title (NR) Includes parallel, alternative, and other title information.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'c', 'Statement of responsibility, etc. (NR) Statement of responsibility and/or any remaining title statement data that are not more appropriately contained in one of the other subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'h', 'Medium (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'n', 'Number of part/section of a work (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'p', 'Name of part/section of a work (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', 'y', 'Language code of translated title (NR) Code from: MARC Code List for Languages.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '242', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 254 file: www.loc.gov/marc/bibliographic/concise/bd254.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_254_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_254_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_254_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_254_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '254', 'a', 'Musical presentation statement (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '254', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '254', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 254 file: www.loc.gov/marc/bibliographic/concise/bd254.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_254_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_254_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_254_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_254_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '254', 'a', 'Musical presentation statement (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '254', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '254', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 258 file: www.loc.gov/marc/bibliographic/concise/bd258.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_258_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_258_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_258_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_258_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', 'a', 'Issuing jurisdiction (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', 'b', 'Denomination (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 258 file: www.loc.gov/marc/bibliographic/concise/bd258.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_258_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_258_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_258_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_258_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', 'a', 'Issuing jurisdiction (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', 'b', 'Denomination (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '258', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 263 file: www.loc.gov/marc/bibliographic/concise/bd263.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_263_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_263_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_263_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_263_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '263', 'a', 'Projected publication date (NR) Six-digit date recorded in the pattern yyyymm (4 digits for the year; 2 digits for the month). A hyphen (-) is used for an unknown portion of the date.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '263', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '263', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 263 file: www.loc.gov/marc/bibliographic/concise/bd263.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_263_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_263_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_263_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_263_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '263', 'a', 'Projected publication date (NR) Six-digit date recorded in the pattern yyyymm (4 digits for the year; 2 digits for the month). A hyphen (-) is used for an unknown portion of the date.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '263', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '263', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 306 file: www.loc.gov/marc/bibliographic/concise/bd306.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_306_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_306_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_306_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_306_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '306', 'a', 'Playing time (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '306', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '306', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 306 file: www.loc.gov/marc/bibliographic/concise/bd306.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_306_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_306_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_306_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_306_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '306', 'a', 'Playing time (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '306', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '306', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 307 file: www.loc.gov/marc/bibliographic/concise/bd307.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_307_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_307_ind_1', '#', 'Hours', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_307_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_307_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_307_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', 'a', 'Hours (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', 'b', 'Additional information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 307 file: www.loc.gov/marc/bibliographic/concise/bd307.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_307_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_307_ind_1', '#', 'Hours', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_307_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_307_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_307_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', 'a', 'Hours (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', 'b', 'Additional information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '307', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 342 file: www.loc.gov/marc/bibliographic/concise/bd342.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_342_ind_1$ident$,
            BTRIM($label$First - Geospatial reference dimension

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_1', '0', 'Horizontal coordinate system', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_1', '1', 'Vertical coordinate system', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_342_ind_2$ident$,
            BTRIM($label$Second - Geospatial reference method

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '0', 'Geographic', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '1', 'Map projection', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '2', 'Grid coordinate system', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '3', 'Local planar', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '4', 'Local', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '5', 'Geodetic model', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '6', 'Altitude', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '7', 'Method specified in $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '8', 'Depth', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'a', 'Name (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'b', 'Coordinate units or distance units (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'c', 'Latitude resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'd', 'Longitude resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'e', 'Standard parallel or oblique line latitude (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'f', 'Oblique line longitude (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'g', 'Longitude of central meridian or projection center (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'h', 'Latitude of projection center or projection origin (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'i', 'False easting (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'j', 'False northing (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'k', 'Scale factor (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'l', 'Height of perspective point above surface (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'm', 'Azimuthal angle (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'n', 'Azimuth measure point longitude or straight vertical longitude from pole (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'o', 'Landsat number and path number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'p', 'Zone identifier (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'q', 'Ellipsoid name (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'r', 'Semi-major axis (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 's', 'Denominator of flattening ratio (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 't', 'Vertical resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'u', 'Vertical encoding method (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'v', 'Local planar, local, or other projection or grid description (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'w', 'Local planar or local georeference information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', '2', 'Reference method used (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 342 file: www.loc.gov/marc/bibliographic/concise/bd342.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_342_ind_1$ident$,
            BTRIM($label$First - Geospatial reference dimension

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_1', '0', 'Horizontal coordinate system', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_1', '1', 'Vertical coordinate system', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_342_ind_2$ident$,
            BTRIM($label$Second - Geospatial reference method

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '0', 'Geographic', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '1', 'Map projection', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '2', 'Grid coordinate system', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '3', 'Local planar', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '4', 'Local', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '5', 'Geodetic model', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '6', 'Altitude', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '7', 'Method specified in $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_342_ind_2', '8', 'Depth', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'a', 'Name (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'b', 'Coordinate units or distance units (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'c', 'Latitude resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'd', 'Longitude resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'e', 'Standard parallel or oblique line latitude (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'f', 'Oblique line longitude (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'g', 'Longitude of central meridian or projection center (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'h', 'Latitude of projection center or projection origin (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'i', 'False easting (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'j', 'False northing (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'k', 'Scale factor (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'l', 'Height of perspective point above surface (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'm', 'Azimuthal angle (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'n', 'Azimuth measure point longitude or straight vertical longitude from pole (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'o', 'Landsat number and path number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'p', 'Zone identifier (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'q', 'Ellipsoid name (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'r', 'Semi-major axis (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 's', 'Denominator of flattening ratio (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 't', 'Vertical resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'u', 'Vertical encoding method (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'v', 'Local planar, local, or other projection or grid description (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', 'w', 'Local planar or local georeference information (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', '2', 'Reference method used (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '342', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 343 file: www.loc.gov/marc/bibliographic/concise/bd343.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_343_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_343_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_343_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_343_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'a', 'Planar coordinate encoding method (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'b', 'Planar distance units (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'c', 'Abscissa resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'd', 'Ordinate resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'e', 'Distance resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'f', 'Bearing resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'g', 'Bearing units (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'h', 'Bearing reference direction (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'i', 'Bearing reference meridian (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 343 file: www.loc.gov/marc/bibliographic/concise/bd343.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_343_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_343_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_343_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_343_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'a', 'Planar coordinate encoding method (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'b', 'Planar distance units (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'c', 'Abscissa resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'd', 'Ordinate resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'e', 'Distance resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'f', 'Bearing resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'g', 'Bearing units (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'h', 'Bearing reference direction (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', 'i', 'Bearing reference meridian (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '343', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 351 file: www.loc.gov/marc/bibliographic/concise/bd351.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_351_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_351_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_351_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_351_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', 'a', 'Organization (R) Manner in which the described materials are subdivided into smaller units, such as how record groups are divided into series and series into subseries. For computer files, contains information about the file structure or the name of the computer software or system.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', 'b', 'Arrangement (R) Pattern of arrangement of materials within a unit (e.g., alphabetical, chronological, by country, by office of origin, etc.).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', 'c', 'Hierarchical level (NR) Hierarchical position of the described materials relative to other records from the same source.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', '3', 'Materials specified (NR) Part of the described materials to which the field applies.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 351 file: www.loc.gov/marc/bibliographic/concise/bd351.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_351_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_351_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_351_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_351_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', 'a', 'Organization (R) Manner in which the described materials are subdivided into smaller units, such as how record groups are divided into series and series into subseries. For computer files, contains information about the file structure or the name of the computer software or system.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', 'b', 'Arrangement (R) Pattern of arrangement of materials within a unit (e.g., alphabetical, chronological, by country, by office of origin, etc.).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', 'c', 'Hierarchical level (NR) Hierarchical position of the described materials relative to other records from the same source.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', '3', 'Materials specified (NR) Part of the described materials to which the field applies.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '351', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 352 file: www.loc.gov/marc/bibliographic/concise/bd352.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_352_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_352_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_352_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_352_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'a', 'Direct reference method (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'b', 'Object type (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'c', 'Object count (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'd', 'Row count (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'e', 'Column count (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'f', 'Vertical count (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'g', 'VPF topology level (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'i', 'Indirect reference description (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'q', 'Format of the digital image (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 352 file: www.loc.gov/marc/bibliographic/concise/bd352.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_352_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_352_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_352_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_352_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'a', 'Direct reference method (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'b', 'Object type (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'c', 'Object count (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'd', 'Row count (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'e', 'Column count (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'f', 'Vertical count (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'g', 'VPF topology level (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'i', 'Indirect reference description (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', 'q', 'Format of the digital image (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '352', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 355 file: www.loc.gov/marc/bibliographic/concise/bd355.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_355_ind_1$ident$,
            BTRIM($label$First - Controlled element

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '0', 'Document', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '1', 'Title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '2', 'Abstract', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '3', 'Contents note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '4', 'Author', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '5', 'Record', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '8', 'None of the above', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_355_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'a', 'Security classification (NR) Security classification (e.g., Unclassified, Secret, Confidential) associated with the document, title, abstract, contents note, or author.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'b', 'Handling instructions (R) Handling instructions, e.g., who internally in the organization may handle or see the document, title, abstract, contents note, or author.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'c', 'External dissemination information (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'd', 'Downgrading or declassification event (NR) Data about the security classification, often a phrase pertaining to downgrading or declassification, e.g., OADR (which stands for "Original Agency Determination Required"). Dates relating to the downgrading or declassification are recorded in subfields $g or $h.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'e', 'Classification system (NR) Name of a security classification system, not necessarily come from a controlled list.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'f', 'Country of origin code (NR) Two- or three-character alphabetic MARC code indicating the country of origin of the classification. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'g', 'Downgrading date (NR) Date pertaining to the downgrading of the document, title, abstract, contents note, or author. Downgrading involves changes to security classification, from a higher level to lower level of classification.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'h', 'Declassification date (NR) Date pertaining to the declassification of the document, title, abstract, contents note, or author. Declassification involves the removal of any security classification on an item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'j', 'Authorization (R) Information that identifies by whose authority a change in security classification was made. The subfield contains a MARC code of the authorizing agency. See Appendix I: Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 355 file: www.loc.gov/marc/bibliographic/concise/bd355.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_355_ind_1$ident$,
            BTRIM($label$First - Controlled element

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '0', 'Document', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '1', 'Title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '2', 'Abstract', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '3', 'Contents note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '4', 'Author', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '5', 'Record', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_1', '8', 'None of the above', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_355_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_355_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'a', 'Security classification (NR) Security classification (e.g., Unclassified, Secret, Confidential) associated with the document, title, abstract, contents note, or author.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'b', 'Handling instructions (R) Handling instructions, e.g., who internally in the organization may handle or see the document, title, abstract, contents note, or author.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'c', 'External dissemination information (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'd', 'Downgrading or declassification event (NR) Data about the security classification, often a phrase pertaining to downgrading or declassification, e.g., OADR (which stands for "Original Agency Determination Required"). Dates relating to the downgrading or declassification are recorded in subfields $g or $h.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'e', 'Classification system (NR) Name of a security classification system, not necessarily come from a controlled list.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'f', 'Country of origin code (NR) Two- or three-character alphabetic MARC code indicating the country of origin of the classification. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'g', 'Downgrading date (NR) Date pertaining to the downgrading of the document, title, abstract, contents note, or author. Downgrading involves changes to security classification, from a higher level to lower level of classification.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'h', 'Declassification date (NR) Date pertaining to the declassification of the document, title, abstract, contents note, or author. Declassification involves the removal of any security classification on an item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', 'j', 'Authorization (R) Information that identifies by whose authority a change in security classification was made. The subfield contains a MARC code of the authorizing agency. See Appendix I: Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '355', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 357 file: www.loc.gov/marc/bibliographic/concise/bd357.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_357_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_357_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_357_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_357_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'a', 'Originator control term (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'b', 'Originating agency (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'c', 'Authorized recipients of material (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'g', 'Other restrictions (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 357 file: www.loc.gov/marc/bibliographic/concise/bd357.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_357_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_357_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_357_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_357_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'a', 'Originator control term (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'b', 'Originating agency (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'c', 'Authorized recipients of material (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', 'g', 'Other restrictions (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '357', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 362 file: www.loc.gov/marc/bibliographic/concise/bd362.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_362_ind_1$ident$,
            BTRIM($label$First - Format of date

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_362_ind_1', '0', 'Formatted style', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_362_ind_1', '1', 'Unformatted note', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_362_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_362_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', 'a', 'Dates of publication and/or sequential designation (NR) When both a sequential designation and a chronological designation are given, the chronological one is enclosed in parentheses.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', 'z', 'Source of information (NR) Citation of the source of information contained in subfield $a; used only when the first indicator position contains value 1 (unformatted notes).','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 362 file: www.loc.gov/marc/bibliographic/concise/bd362.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_362_ind_1$ident$,
            BTRIM($label$First - Format of date

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_362_ind_1', '0', 'Formatted style', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_362_ind_1', '1', 'Unformatted note', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_362_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_362_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', 'a', 'Dates of publication and/or sequential designation (NR) When both a sequential designation and a chronological designation are given, the chronological one is enclosed in parentheses.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', 'z', 'Source of information (NR) Citation of the source of information contained in subfield $a; used only when the first indicator position contains value 1 (unformatted notes).','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '362', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 365 file: www.loc.gov/marc/bibliographic/concise/bd365.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_365_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_365_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_365_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_365_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'a', 'Price type code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'b', 'Price amount (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'c', 'Currency code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'd', 'Unit of pricing (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'e', 'Price note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'f', 'Price effective from (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'g', 'Price effective until (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'h', 'Tax rate 1 (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'i', 'Tax rate 2 (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'j', 'ISO country code (NR) Code from: ISO 3166-1, Codes for the Representation of Names of Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'k', 'MARC country code (NR) Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'm', 'Identification of pricing entity (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', '2', 'Source of price type code (NR) Code from: Price Type Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 365 file: www.loc.gov/marc/bibliographic/concise/bd365.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_365_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_365_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_365_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_365_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'a', 'Price type code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'b', 'Price amount (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'c', 'Currency code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'd', 'Unit of pricing (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'e', 'Price note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'f', 'Price effective from (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'g', 'Price effective until (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'h', 'Tax rate 1 (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'i', 'Tax rate 2 (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'j', 'ISO country code (NR) Code from: ISO 3166-1, Codes for the Representation of Names of Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'k', 'MARC country code (NR) Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', 'm', 'Identification of pricing entity (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', '2', 'Source of price type code (NR) Code from: Price Type Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '365', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 366 file: www.loc.gov/marc/bibliographic/concise/bd366.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_366_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_366_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_366_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_366_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'a', 'Publishers'' compressed title identification (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'b', 'Detailed date of publication (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'c', 'Availability status code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'd', 'Expected next availability date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'e', 'Note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'f', 'Publisher''s discount category (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'g', 'Date made out of print (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'j', 'ISO country code (NR) Code from: ISO 3166-1, Codes for the Representation of Names of Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'k', 'MARC country code (NR) Code for the country in which the information in the field is applicable. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'm', 'Identification of agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', '2', 'Source of availability status code (NR) MARC code that identifies the source of the availability status code recorded in subfield $c. Code from: Availability Status Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 366 file: www.loc.gov/marc/bibliographic/concise/bd366.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_366_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_366_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_366_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_366_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'a', 'Publishers'' compressed title identification (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'b', 'Detailed date of publication (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'c', 'Availability status code (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'd', 'Expected next availability date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'e', 'Note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'f', 'Publisher''s discount category (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'g', 'Date made out of print (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'j', 'ISO country code (NR) Code from: ISO 3166-1, Codes for the Representation of Names of Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'k', 'MARC country code (NR) Code for the country in which the information in the field is applicable. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', 'm', 'Identification of agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', '2', 'Source of availability status code (NR) MARC code that identifies the source of the availability status code recorded in subfield $c. Code from: Availability Status Code Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '366', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 504 file: www.loc.gov/marc/bibliographic/concise/bd504.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_504_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_504_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_504_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_504_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', 'a', 'Bibliography, etc. note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', 'b', 'Number of references (NR) Used to indicate the significance of a bibliography.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 504 file: www.loc.gov/marc/bibliographic/concise/bd504.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_504_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_504_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_504_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_504_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', 'a', 'Bibliography, etc. note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', 'b', 'Number of references (NR) Used to indicate the significance of a bibliography.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '504', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 511 file: www.loc.gov/marc/bibliographic/concise/bd511.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_511_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_511_ind_1', '0', 'No display constant generated', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_511_ind_1', '1', 'Cast', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_511_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_511_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '511', 'a', 'Participant or performer note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '511', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '511', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 511 file: www.loc.gov/marc/bibliographic/concise/bd511.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_511_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_511_ind_1', '0', 'No display constant generated', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_511_ind_1', '1', 'Cast', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_511_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_511_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '511', 'a', 'Participant or performer note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '511', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '511', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 513 file: www.loc.gov/marc/bibliographic/concise/bd513.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_513_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_513_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_513_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_513_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', 'a', 'Type of report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', 'b', 'Period covered (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 513 file: www.loc.gov/marc/bibliographic/concise/bd513.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_513_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_513_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_513_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_513_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', 'a', 'Type of report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', 'b', 'Period covered (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '513', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 514 file: www.loc.gov/marc/bibliographic/concise/bd514.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_514_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_514_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_514_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_514_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'a', 'Attribute accuracy report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'b', 'Attribute accuracy value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'c', 'Attribute accuracy explanation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'd', 'Logical consistency report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'e', 'Completeness report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'f', 'Horizontal position accuracy report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'g', 'Horizontal position accuracy value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'h', 'Horizontal position accuracy explanation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'i', 'Vertical positional accuracy report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'j', 'Vertical positional accuracy value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'k', 'Vertical positional accuracy explanation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'm', 'Cloud cover (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'u', 'Uniform Resource Identifier (R) Uniform Resource Identifier (URI), for example a URL or URN, which provides electronic access data in a standard syntax. This data can be used for automated access to an electronic item using one of the Internet protocols.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'z', 'Display note (R) Introduces the data in the field, when needed.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 514 file: www.loc.gov/marc/bibliographic/concise/bd514.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_514_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_514_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_514_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_514_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'a', 'Attribute accuracy report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'b', 'Attribute accuracy value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'c', 'Attribute accuracy explanation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'd', 'Logical consistency report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'e', 'Completeness report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'f', 'Horizontal position accuracy report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'g', 'Horizontal position accuracy value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'h', 'Horizontal position accuracy explanation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'i', 'Vertical positional accuracy report (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'j', 'Vertical positional accuracy value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'k', 'Vertical positional accuracy explanation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'm', 'Cloud cover (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'u', 'Uniform Resource Identifier (R) Uniform Resource Identifier (URI), for example a URL or URN, which provides electronic access data in a standard syntax. This data can be used for automated access to an electronic item using one of the Internet protocols.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', 'z', 'Display note (R) Introduces the data in the field, when needed.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '514', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 516 file: www.loc.gov/marc/bibliographic/concise/bd516.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_516_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_516_ind_1', '#', 'Type of file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_516_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_516_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_516_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '516', 'a', 'Type of computer file or data note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '516', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '516', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 516 file: www.loc.gov/marc/bibliographic/concise/bd516.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_516_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_516_ind_1', '#', 'Type of file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_516_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_516_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_516_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '516', 'a', 'Type of computer file or data note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '516', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '516', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 521 file: www.loc.gov/marc/bibliographic/concise/bd521.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_521_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '#', 'Audience', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '0', 'Reading grade level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '1', 'Interest age level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '2', 'Interest grade level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '3', 'Special audience characteristics', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '4', 'Motivation/interest level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_521_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', 'a', 'Target audience note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', 'b', 'Source (NR) Name or abbreviation of the agency or entity that determined the target audience of the item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 521 file: www.loc.gov/marc/bibliographic/concise/bd521.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_521_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '#', 'Audience', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '0', 'Reading grade level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '1', 'Interest age level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '2', 'Interest grade level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '3', 'Special audience characteristics', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '4', 'Motivation/interest level', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_521_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_521_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', 'a', 'Target audience note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', 'b', 'Source (NR) Name or abbreviation of the agency or entity that determined the target audience of the item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '521', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 522 file: www.loc.gov/marc/bibliographic/concise/bd522.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_522_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_522_ind_1', '#', 'Geographic coverage', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_522_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_522_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_522_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '522', 'a', 'Geographic coverage note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '522', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '522', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 522 file: www.loc.gov/marc/bibliographic/concise/bd522.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_522_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_522_ind_1', '#', 'Geographic coverage', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_522_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_522_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_522_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '522', 'a', 'Geographic coverage note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '522', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '522', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 524 file: www.loc.gov/marc/bibliographic/concise/bd524.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_524_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_524_ind_1', '#', 'Cite as', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_524_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_524_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_524_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', 'a', 'Preferred citation of described materials note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '2', 'Source of schema used (NR) Code from: Citation Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 524 file: www.loc.gov/marc/bibliographic/concise/bd524.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_524_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_524_ind_1', '#', 'Cite as', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_524_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_524_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_524_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', 'a', 'Preferred citation of described materials note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '2', 'Source of schema used (NR) Code from: Citation Scheme Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '524', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 525 file: www.loc.gov/marc/bibliographic/concise/bd525.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_525_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_525_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_525_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_525_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '525', 'a', 'Supplement note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '525', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '525', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 525 file: www.loc.gov/marc/bibliographic/concise/bd525.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_525_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_525_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_525_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_525_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '525', 'a', 'Supplement note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '525', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '525', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 526 file: www.loc.gov/marc/bibliographic/concise/bd526.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_526_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_526_ind_1', '0', 'Reading program', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_526_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_526_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_526_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'a', 'Program name (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'b', 'Interest level (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'c', 'Reading level (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'd', 'Title point value (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'i', 'Display text (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'x', 'Nonpublic note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', '8', 'Field link and sequence number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 526 file: www.loc.gov/marc/bibliographic/concise/bd526.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_526_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_526_ind_1', '0', 'Reading program', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_526_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_526_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_526_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'a', 'Program name (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'b', 'Interest level (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'c', 'Reading level (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'd', 'Title point value (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'i', 'Display text (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'x', 'Nonpublic note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '526', '8', 'Field link and sequence number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 530 file: www.loc.gov/marc/bibliographic/concise/bd530.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_530_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_530_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_530_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_530_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'a', 'Additional physical form available note (NR) For continuing resources, availability source, availability conditions, and order number information are included in subfield $a.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'b', 'Availability source (NR) Organizational unit or vendor from which the additional physical form may be acquired.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'c', 'Availability conditions (NR) Terms under which the additional physical form of the materials is available (e.g., Photocopies at cost).','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'd', 'Order number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'u', 'Uniform Resource Identifier (R) Uniform Resource Identifier (URI), for example a URL or URN, which provides electronic access data in a standard syntax. This data can be used for automated access to an electronic item using one of the Internet protocols.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 530 file: www.loc.gov/marc/bibliographic/concise/bd530.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_530_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_530_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_530_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_530_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'a', 'Additional physical form available note (NR) For continuing resources, availability source, availability conditions, and order number information are included in subfield $a.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'b', 'Availability source (NR) Organizational unit or vendor from which the additional physical form may be acquired.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'c', 'Availability conditions (NR) Terms under which the additional physical form of the materials is available (e.g., Photocopies at cost).','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'd', 'Order number (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', 'u', 'Uniform Resource Identifier (R) Uniform Resource Identifier (URI), for example a URL or URN, which provides electronic access data in a standard syntax. This data can be used for automated access to an electronic item using one of the Internet protocols.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '530', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 535 file: www.loc.gov/marc/bibliographic/concise/bd535.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_535_ind_1$ident$,
            BTRIM($label$First - Custodial role

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_535_ind_1', '1', 'Holder of originals', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_535_ind_1', '2', 'Holder of duplicates', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_535_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_535_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'a', 'Custodian (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'b', 'Postal address (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'c', 'Country (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'd', 'Telecommunications address (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'g', 'Repository location code (NR) Two- or three-character MARC code for the country of the repository holding originals or duplicates of the material. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 535 file: www.loc.gov/marc/bibliographic/concise/bd535.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_535_ind_1$ident$,
            BTRIM($label$First - Custodial role

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_535_ind_1', '1', 'Holder of originals', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_535_ind_1', '2', 'Holder of duplicates', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_535_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_535_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'a', 'Custodian (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'b', 'Postal address (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'c', 'Country (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'd', 'Telecommunications address (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', 'g', 'Repository location code (NR) Two- or three-character MARC code for the country of the repository holding originals or duplicates of the material. Code from: MARC Code List for Countries.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '535', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 536 file: www.loc.gov/marc/bibliographic/concise/bd536.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_536_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_536_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_536_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_536_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'a', 'Text of note (NR) Information concerning the sponsors or funding agencies.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'b', 'Contract number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'c', 'Grant number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'd', 'Undifferentiated number (R) Undifferentiated number associated with the material that identifies a project, task or work unit number.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'e', 'Program element number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'f', 'Project number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'g', 'Task number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'h', 'Work unit number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 536 file: www.loc.gov/marc/bibliographic/concise/bd536.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_536_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_536_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_536_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_536_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'a', 'Text of note (NR) Information concerning the sponsors or funding agencies.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'b', 'Contract number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'c', 'Grant number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'd', 'Undifferentiated number (R) Undifferentiated number associated with the material that identifies a project, task or work unit number.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'e', 'Program element number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'f', 'Project number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'g', 'Task number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', 'h', 'Work unit number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '536', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 538 file: www.loc.gov/marc/bibliographic/concise/bd538.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_538_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_538_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_538_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_538_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', 'a', 'System details note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', 'i', 'Display text (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 538 file: www.loc.gov/marc/bibliographic/concise/bd538.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_538_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_538_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_538_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_538_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', 'a', 'System details note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', 'i', 'Display text (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '5', 'Institution to which field applies (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '538', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 541 file: www.loc.gov/marc/bibliographic/concise/bd541.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_541_ind_1$ident$,
            BTRIM($label$First - Privacy

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_541_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'a', 'Source of acquisition (NR) Name of the person(s) or organization that is the source of the material.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'b', 'Address (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'c', 'Method of acquisition (NR) Terms under which a transfer of physical custody occurs, for example, by gift, bequest, loan, purchase, deposit.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'd', 'Date of acquisition (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'e', 'Accession number (NR) Identification code assigned to materials acquired in a single and separate transfer of custody.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'f', 'Owner (NR) Name of the individual or organization with legal custody over the described materials.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'h', 'Purchase price (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'n', 'Extent (R) Number of items acquired.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'o', 'Type of unit (R) Name of the unit of measurement, e.g., cartons.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 541 file: www.loc.gov/marc/bibliographic/concise/bd541.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_541_ind_1$ident$,
            BTRIM($label$First - Privacy

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_541_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_541_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'a', 'Source of acquisition (NR) Name of the person(s) or organization that is the source of the material.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'b', 'Address (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'c', 'Method of acquisition (NR) Terms under which a transfer of physical custody occurs, for example, by gift, bequest, loan, purchase, deposit.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'd', 'Date of acquisition (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'e', 'Accession number (NR) Identification code assigned to materials acquired in a single and separate transfer of custody.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'f', 'Owner (NR) Name of the individual or organization with legal custody over the described materials.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'h', 'Purchase price (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'n', 'Extent (R) Number of items acquired.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', 'o', 'Type of unit (R) Name of the unit of measurement, e.g., cartons.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '541', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 544 file: www.loc.gov/marc/bibliographic/concise/bd544.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_544_ind_1$ident$,
            BTRIM($label$First - Relationship

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_1', '0', 'Associated materials
            Other materials identified in the note have the same provenance but reside in a
                                    different repository.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_1', '1', 'Related materials
            Other materials identified in the note share the sphere of activity, reside in
                                    the same repository, but have different provenance.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_544_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'a', 'Custodian (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'b', 'Address (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'c', 'Country (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'd', 'Title (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'e', 'Provenance (R) History of custody of the described materials since their creation, including any changes successive custodians made to them.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'n', 'Note (R) Entire text of the note that describes the other materials. Subfield $n may be used instead of the specific subfields for title of materials, custodian, and provenance.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 544 file: www.loc.gov/marc/bibliographic/concise/bd544.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_544_ind_1$ident$,
            BTRIM($label$First - Relationship

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_1', '0', 'Associated materials
            Other materials identified in the note have the same provenance but reside in a
                                    different repository.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_1', '1', 'Related materials
            Other materials identified in the note share the sphere of activity, reside in
                                    the same repository, but have different provenance.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_544_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_544_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'a', 'Custodian (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'b', 'Address (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'c', 'Country (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'd', 'Title (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'e', 'Provenance (R) History of custody of the described materials since their creation, including any changes successive custodians made to them.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', 'n', 'Note (R) Entire text of the note that describes the other materials. Subfield $n may be used instead of the specific subfields for title of materials, custodian, and provenance.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '544', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 545 file: www.loc.gov/marc/bibliographic/concise/bd545.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_545_ind_1$ident$,
            BTRIM($label$First - Type of data

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_1', '0', 'Biographical sketch', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_1', '1', 'Administrative history', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_545_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', 'a', 'Biographical or historical data (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', 'b', 'Expansion (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 545 file: www.loc.gov/marc/bibliographic/concise/bd545.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_545_ind_1$ident$,
            BTRIM($label$First - Type of data

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_1', '0', 'Biographical sketch', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_1', '1', 'Administrative history', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_545_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_545_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', 'a', 'Biographical or historical data (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', 'b', 'Expansion (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '545', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 547 file: www.loc.gov/marc/bibliographic/concise/bd547.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_547_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_547_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_547_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_547_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '547', 'a', 'Former title complexity note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '547', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '547', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 547 file: www.loc.gov/marc/bibliographic/concise/bd547.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_547_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_547_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_547_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_547_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '547', 'a', 'Former title complexity note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '547', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '547', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 552 file: www.loc.gov/marc/bibliographic/concise/bd552.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_552_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_552_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_552_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_552_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'a', 'Entity type label (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'b', 'Entity type definition and source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'c', 'Attribute label (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'd', 'Attribute definition and source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'e', 'Enumerated domain value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'f', 'Enumerated domain value definition and source (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'g', 'Range domain minimum and maximum (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'h', 'Codeset name and source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'i', 'Unrepresentable domain (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'j', 'Attribute units of measurement and resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'k', 'Beginning and ending date of attribute values (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'l', 'Attribute value accuracy (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'm', 'Attribute value accuracy explanation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'n', 'Attribute measurement frequency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'o', 'Entity and attribute overview (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'p', 'Entity and attribute detail citation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'z', 'Display note (R) Note that introduces the data in the field when needed.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 552 file: www.loc.gov/marc/bibliographic/concise/bd552.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_552_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_552_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_552_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_552_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'a', 'Entity type label (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'b', 'Entity type definition and source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'c', 'Attribute label (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'd', 'Attribute definition and source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'e', 'Enumerated domain value (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'f', 'Enumerated domain value definition and source (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'g', 'Range domain minimum and maximum (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'h', 'Codeset name and source (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'i', 'Unrepresentable domain (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'j', 'Attribute units of measurement and resolution (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'k', 'Beginning and ending date of attribute values (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'l', 'Attribute value accuracy (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'm', 'Attribute value accuracy explanation (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'n', 'Attribute measurement frequency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'o', 'Entity and attribute overview (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'p', 'Entity and attribute detail citation (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', 'z', 'Display note (R) Note that introduces the data in the field when needed.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '552', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 556 file: www.loc.gov/marc/bibliographic/concise/bd556.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_556_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_556_ind_1', '#', 'Documentation
            Used to generate the display constant Documentation:.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_556_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_556_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_556_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', 'a', 'Information about documentation note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', 'z', 'International Standard Book Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 556 file: www.loc.gov/marc/bibliographic/concise/bd556.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_556_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_556_ind_1', '#', 'Documentation
            Used to generate the display constant Documentation:.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_556_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_556_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_556_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', 'a', 'Information about documentation note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', 'z', 'International Standard Book Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '556', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 562 file: www.loc.gov/marc/bibliographic/concise/bd562.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_562_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_562_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_562_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_562_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'a', 'Identifying markings (R) Markings on the support or imbedded in the medium that can be used to identify the copy of the described materials (e.g., watermarks, annotations, or captions).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'b', 'Copy identification (R) Information such as names, codes, numbers, or description used to distinguish one copy of the described materials from other copies.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'c', 'Version identification (R) Information such as names, codes, or descriptions used to identify a version that differs in content but is related across time to another version, such as an edition.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'd', 'Presentation format (R) Presentation format in which the recorded materials, regardless of their current medium, were intended to be used, seen, or heard (e.g., a film made for TV or a text intended for oral proclamation).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'e', 'Number of copies (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 562 file: www.loc.gov/marc/bibliographic/concise/bd562.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_562_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_562_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_562_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_562_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'a', 'Identifying markings (R) Markings on the support or imbedded in the medium that can be used to identify the copy of the described materials (e.g., watermarks, annotations, or captions).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'b', 'Copy identification (R) Information such as names, codes, numbers, or description used to distinguish one copy of the described materials from other copies.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'c', 'Version identification (R) Information such as names, codes, or descriptions used to identify a version that differs in content but is related across time to another version, such as an edition.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'd', 'Presentation format (R) Presentation format in which the recorded materials, regardless of their current medium, were intended to be used, seen, or heard (e.g., a film made for TV or a text intended for oral proclamation).','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', 'e', 'Number of copies (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '562', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 563 file: www.loc.gov/marc/bibliographic/concise/bd563.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_563_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_563_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_563_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_563_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', 'a', 'Binding note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 563 file: www.loc.gov/marc/bibliographic/concise/bd563.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_563_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_563_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_563_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_563_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', 'a', 'Binding note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', 'u', 'Uniform Resource Identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '563', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 565 file: www.loc.gov/marc/bibliographic/concise/bd565.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_565_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_1', '#', 'File size', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_1', '0', 'Case file characteristics', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_565_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'a', 'Number of cases/variables (NR) Number of cases or number of variables in a single case within a repetitive case file series.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'b', 'Name of variable (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'c', 'Unit of analysis (R) Subject to which variables in case files or data bases refer; for example, convicts in correctional files, workers in personnel records, or casualities in emergency room intake files.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'd', 'Universe of data (R) Scope of the data collection effort and the specifications of the sample represented in the described materials.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'e', 'Filing scheme or code (R) Information that places the described materials in the context of a scheme of intellectual arrangement.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 565 file: www.loc.gov/marc/bibliographic/concise/bd565.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_565_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_1', '#', 'File size', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_1', '0', 'Case file characteristics', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_565_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_565_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'a', 'Number of cases/variables (NR) Number of cases or number of variables in a single case within a repetitive case file series.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'b', 'Name of variable (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'c', 'Unit of analysis (R) Subject to which variables in case files or data bases refer; for example, convicts in correctional files, workers in personnel records, or casualities in emergency room intake files.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'd', 'Universe of data (R) Scope of the data collection effort and the specifications of the sample represented in the described materials.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', 'e', 'Filing scheme or code (R) Information that places the described materials in the context of a scheme of intellectual arrangement.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '565', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 580 file: www.loc.gov/marc/bibliographic/concise/bd580.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_580_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_580_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_580_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_580_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '580', 'a', 'Linking entry complexity note (NR) Catalog entry for the related title and a statement describing the relationship.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '580', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '580', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 580 file: www.loc.gov/marc/bibliographic/concise/bd580.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_580_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_580_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_580_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_580_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '580', 'a', 'Linking entry complexity note (NR) Catalog entry for the related title and a statement describing the relationship.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '580', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '580', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 581 file: www.loc.gov/marc/bibliographic/concise/bd581.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_581_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_581_ind_1', '#', 'Publications', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_581_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_581_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_581_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', 'a', 'Publications about described materials note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', 'z', 'International Standard Book Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 581 file: www.loc.gov/marc/bibliographic/concise/bd581.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_581_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_581_ind_1', '#', 'Publications', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_581_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_581_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_581_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', 'a', 'Publications about described materials note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', 'z', 'International Standard Book Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '581', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 584 file: www.loc.gov/marc/bibliographic/concise/bd584.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_584_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_584_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_584_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_584_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', 'a', 'Accumulation (R) Rate at which the described materials are accumulating expressed as a ratio of volume to time period.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', 'b', 'Frequency of use (R) Measure of reference activity, usually expressed as a ratio of number of retrievals to time period, or by general terms such as active or inactive.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 584 file: www.loc.gov/marc/bibliographic/concise/bd584.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_584_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_584_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_584_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_584_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', 'a', 'Accumulation (R) Rate at which the described materials are accumulating expressed as a ratio of volume to time period.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', 'b', 'Frequency of use (R) Measure of reference activity, usually expressed as a ratio of number of retrievals to time period, or by general terms such as active or inactive.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '584', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 585 file: www.loc.gov/marc/bibliographic/concise/bd585.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_585_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_585_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_585_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_585_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', 'a', 'Exhibitions note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 585 file: www.loc.gov/marc/bibliographic/concise/bd585.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_585_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_585_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_585_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_585_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', 'a', 'Exhibitions note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '585', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 586 file: www.loc.gov/marc/bibliographic/concise/bd586.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_586_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_586_ind_1', '#', 'Awards', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_586_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_586_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_586_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', 'a', 'Awards note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', '8', 'Field link and sequence number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 586 file: www.loc.gov/marc/bibliographic/concise/bd586.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_586_ind_1$ident$,
            BTRIM($label$First - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_586_ind_1', '#', 'Awards', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_586_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_586_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_586_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', 'a', 'Awards note (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '586', '8', 'Field link and sequence number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 59x file: www.loc.gov/marc/bibliographic/concise/bd59x.html
-- category: biblio tag: 69x file: www.loc.gov/marc/bibliographic/concise/bd69x.html
-- category: biblio tag: 740 file: www.loc.gov/marc/bibliographic/concise/bd740.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_740_ind_1$ident$,
            BTRIM($label$First - Nonfiling characters

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '9', 'Number of nonfiling characters', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_740_ind_2$ident$,
            BTRIM($label$Second - Type of added entry

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_2', '2', 'Analytical entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'a', 'Uncontrolled related/analytical title (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'h', 'Medium (NR) Media qualifier.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'n', 'Number of part/section of a work (R) Number designation for a part/section of a work used in a title.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'p', 'Name of part/section of a work (R) Name designation of a part/section of work in a title.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 740 file: www.loc.gov/marc/bibliographic/concise/bd740.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_740_ind_1$ident$,
            BTRIM($label$First - Nonfiling characters

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_1', '9', 'Number of nonfiling characters', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_740_ind_2$ident$,
            BTRIM($label$Second - Type of added entry

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_740_ind_2', '2', 'Analytical entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'a', 'Uncontrolled related/analytical title (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'h', 'Medium (NR) Media qualifier.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'n', 'Number of part/section of a work (R) Number designation for a part/section of a work used in a title.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', 'p', 'Name of part/section of a work (R) Name designation of a part/section of work in a title.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', '5', 'Institution to which field applies (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '740', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 850 file: www.loc.gov/marc/bibliographic/concise/bd850.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_850_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_850_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_850_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_850_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '850', 'a', 'Holding institution (R) MARC code or the name of the institution holding the item. See Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '850', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 850 file: www.loc.gov/marc/bibliographic/concise/bd850.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_850_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_850_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_850_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_850_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '850', 'a', 'Holding institution (R) MARC code or the name of the institution holding the item. See Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '850', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 880 file: www.loc.gov/marc/bibliographic/concise/bd880.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_880_ind_1$ident$,
            BTRIM($label$First - Appropriate indicator as available in associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_880_ind_2$ident$,
            BTRIM($label$Second - Appropriate indicator as available in associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'a', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'b', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'c', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'd', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'e', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'f', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'g', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'h', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'i', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'j', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'k', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'l', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'm', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'n', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'o', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'p', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'q', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'r', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 's', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 't', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'u', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'v', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'w', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'x', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'y', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'z', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '0', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '1', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '2', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '3', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '4', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '5', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '7', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '8', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '9', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 880 file: www.loc.gov/marc/bibliographic/concise/bd880.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_880_ind_1$ident$,
            BTRIM($label$First - Appropriate indicator as available in associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_880_ind_2$ident$,
            BTRIM($label$Second - Appropriate indicator as available in associated field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'a', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'b', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'c', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'd', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'e', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'f', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'g', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'h', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'i', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'j', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'k', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'l', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'm', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'n', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'o', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'p', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'q', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'r', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 's', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 't', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'u', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'v', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'w', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'x', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'y', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', 'z', '$a-z - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '0', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '1', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '2', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '3', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '4', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '5', '$0-5 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '7', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '8', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '880', '9', '$7-9 - Same as associated field','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 882 file: www.loc.gov/marc/bibliographic/concise/bd882.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_882_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_882_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_882_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_882_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', 'a', 'Replacement title (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', 'i', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', 'w', 'Replacement bibliographic record control number (R) System control number of the replacement bibliographic record preceded by the MARC code, enclosed in parentheses, for the agency to which the control number applies. See Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 882 file: www.loc.gov/marc/bibliographic/concise/bd882.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_882_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_882_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_882_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_882_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', 'a', 'Replacement title (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', 'i', 'Explanatory text (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', 'w', 'Replacement bibliographic record control number (R) System control number of the replacement bibliographic record preceded by the MARC code, enclosed in parentheses, for the agency to which the control number applies. See Organization Code Sources for a listing of sources used in MARC 21 records.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '882', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 886 file: www.loc.gov/marc/bibliographic/concise/bd886.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_886_ind_1$ident$,
            BTRIM($label$First - Type of field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_1', '0', 'Leader', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_1', '1', 'Variable control fields (002-009)', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_1', '2', 'Variable data fields (010-999)', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_886_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'a', 'Tag of the foreign MARC field (NR) Not present when the first indicator value is 0 (Leader). When it is present, subfield $a is the second subfield in the field, immediately before subfield $b.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'b', 'Content of the foreign MARC field (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '2', 'Source of data (NR) MARC code for the foreign MARC format from which the record is converted. Must be first subfield in the field. Code from: Format Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'a', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'b', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'c', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'd', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'e', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'f', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'g', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'h', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'i', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'j', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'k', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'l', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'm', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'n', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'o', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'p', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'q', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'r', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 's', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 't', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'u', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'v', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'w', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'x', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'y', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'z', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '0', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '1', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '2', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '3', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '4', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '5', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '6', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '7', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '8', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '9', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 886 file: www.loc.gov/marc/bibliographic/concise/bd886.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_886_ind_1$ident$,
            BTRIM($label$First - Type of field

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_1', '0', 'Leader', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_1', '1', 'Variable control fields (002-009)', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_1', '2', 'Variable data fields (010-999)', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_886_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_886_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'a', 'Tag of the foreign MARC field (NR) Not present when the first indicator value is 0 (Leader). When it is present, subfield $a is the second subfield in the field, immediately before subfield $b.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'b', 'Content of the foreign MARC field (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '2', 'Source of data (NR) MARC code for the foreign MARC format from which the record is converted. Must be first subfield in the field. Code from: Format Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'a', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'b', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'c', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'd', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'e', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'f', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'g', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'h', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'i', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'j', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'k', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'l', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'm', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'n', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'o', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'p', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'q', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'r', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 's', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 't', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'u', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'v', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'w', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'x', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'y', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', 'z', '$a-z - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '0', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '1', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '2', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '3', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '4', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '5', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '6', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '7', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '8', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '886', '9', '$0-9 - Foreign MARC subfield (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 887 file: www.loc.gov/marc/bibliographic/concise/bd887.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_887_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_887_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_887_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_887_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '887', 'a', 'Content of non-MARC field (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '887', '2', 'Source of data (NR) Source of the data, either a schema or DTD reference. Code from: Format Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 887 file: www.loc.gov/marc/bibliographic/concise/bd887.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_887_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_887_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_887_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_887_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '887', 'a', 'Content of non-MARC field (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '887', '2', 'Source of data (NR) Source of the data, either a schema or DTD reference. Code from: Format Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: int file: www.loc.gov/marc/bibliographic/concise/bdintro.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007v.html
-- category: biblio tag: 017 file: www.loc.gov/marc/bibliographic/concise/bd017.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_017_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_017_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_017_ind_2$ident$,
            BTRIM($label$Second - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_017_ind_2', '#', 'Copyright or legal deposit number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_017_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'a', 'Copyright or legal deposit number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'b', 'Assigning agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'd', 'Date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'i', 'Display text (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'z', 'Canceled/invalid copyright or legal deposit number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', '2', 'Source (NR) Code from: Copyright and Legal Deposit Number Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 017 file: www.loc.gov/marc/bibliographic/concise/bd017.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_017_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_017_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_017_ind_2$ident$,
            BTRIM($label$Second - Display constant controller

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_017_ind_2', '#', 'Copyright or legal deposit number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_017_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'a', 'Copyright or legal deposit number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'b', 'Assigning agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'd', 'Date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'i', 'Display text (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', 'z', 'Canceled/invalid copyright or legal deposit number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', '2', 'Source (NR) Code from: Copyright and Legal Deposit Number Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '017', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 363 file: www.loc.gov/marc/bibliographic/concise/bd363.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_363_ind_1$ident$,
            BTRIM($label$First - Start/End designator

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_1', '0', 'Starting information', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_1', '1', 'Ending information', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_363_ind_2$ident$,
            BTRIM($label$Second - State of issuance

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_2', '#', 'Not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_2', '0', 'Closed
            The sequence of the publication has terminated and is no longer being
                                 issued.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_2', '1', 'Open
            The sequence of the publication continues to be issued.', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'a', 'First level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'b', 'Second level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'c', 'Third level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'd', 'Fourth level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'e', 'Fifth level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'f', 'Sixth level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'g', 'Alternative numbering scheme, first level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'h', 'Alternative numbering scheme, second level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'i', 'First level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'j', 'Second level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'k', 'Third level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'l', 'Fourth level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'm', 'Alternative numbering scheme, chronology (NR) Highest level of an alternative chronology scheme.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'u', 'First level textual designation (NR) Textual information associated with enumeration and chronology.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'v', 'First level of chronology, issuance (NR) For items that use coverage in subfield $i (First level of chronology) when the issuing date is different.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'x', 'Nonpublic note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', '8', 'Field link and sequence number (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 363 file: www.loc.gov/marc/bibliographic/concise/bd363.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_363_ind_1$ident$,
            BTRIM($label$First - Start/End designator

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_1', '0', 'Starting information', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_1', '1', 'Ending information', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_363_ind_2$ident$,
            BTRIM($label$Second - State of issuance

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_2', '#', 'Not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_2', '0', 'Closed
            The sequence of the publication has terminated and is no longer being
                                 issued.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_363_ind_2', '1', 'Open
            The sequence of the publication continues to be issued.', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'a', 'First level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'b', 'Second level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'c', 'Third level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'd', 'Fourth level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'e', 'Fifth level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'f', 'Sixth level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'g', 'Alternative numbering scheme, first level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'h', 'Alternative numbering scheme, second level of enumeration (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'i', 'First level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'j', 'Second level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'k', 'Third level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'l', 'Fourth level of chronology (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'm', 'Alternative numbering scheme, chronology (NR) Highest level of an alternative chronology scheme.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'u', 'First level textual designation (NR) Textual information associated with enumeration and chronology.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'v', 'First level of chronology, issuance (NR) For items that use coverage in subfield $i (First level of chronology) when the issuing date is different.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'x', 'Nonpublic note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', 'z', 'Public note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '363', '8', 'Field link and sequence number (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 542 file: www.loc.gov/marc/bibliographic/concise/bd542.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_542_ind_1$ident$,
            BTRIM($label$First - Privacy

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_542_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'a', 'Personal creator (NR) "Undetermined" may be used if research was done but no personal creator was found.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'b', 'Personal creator death date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'c', 'Corporate creator (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'd', 'Copyright holder (R) "Undetermined" may be used if research was done but no copyright holder was found.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'e', 'Copyright holder contact information (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'f', 'Copyright statement (R) Copyright statement as it is presented on the resource.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'g', 'Copyright date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'h', 'Copyright renewal date (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'i', 'Publication date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'j', 'Creation date (NR) Year of creation for an unpublished resource.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'k', 'Publisher (R) "Undetermined" may be used if research was done but no publisher is found.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'l', 'Copyright status (NR) Determined status of the item. This is only recorded if it is known with certainty. "Undetermined" may be used if research was done but no status is found.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'm', 'Publication status (NR) Whether the item is published or unpublished, using the definition of published in copyright law of the jurisdiction, or that expressed in the Berne Convention''s specifications if other definitions are not available. "Undetermined" may be used if research was done but no status is found.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'n', 'Note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'o', 'Research date (NR) Date that the copyright data was determined based on research.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'p', 'Country of publication or creation (R) Country in which the resource was published or, in the case of unpublished materials, the country in which the resource was created.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'q', 'Supplying agency (NR) Code or name of agency supplying the information.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'r', 'Jurisdiction of copyright assessment (NR) Jurisdiction within which the copyright status assessment is being made.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 's', 'Source of information (NR) Source of the copyright information, whether from the piece or from other sources.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'u', 'Uniform Resource Identifier (R) Uniform Resource Identifier (URI), for example a URL or URN, which provides electronic access data in a standard syntax. The data may be a more detailed statement about information relating to copyright status.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 542 file: www.loc.gov/marc/bibliographic/concise/bd542.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_542_ind_1$ident$,
            BTRIM($label$First - Privacy

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_542_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_542_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'a', 'Personal creator (NR) "Undetermined" may be used if research was done but no personal creator was found.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'b', 'Personal creator death date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'c', 'Corporate creator (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'd', 'Copyright holder (R) "Undetermined" may be used if research was done but no copyright holder was found.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'e', 'Copyright holder contact information (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'f', 'Copyright statement (R) Copyright statement as it is presented on the resource.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'g', 'Copyright date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'h', 'Copyright renewal date (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'i', 'Publication date (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'j', 'Creation date (NR) Year of creation for an unpublished resource.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'k', 'Publisher (R) "Undetermined" may be used if research was done but no publisher is found.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'l', 'Copyright status (NR) Determined status of the item. This is only recorded if it is known with certainty. "Undetermined" may be used if research was done but no status is found.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'm', 'Publication status (NR) Whether the item is published or unpublished, using the definition of published in copyright law of the jurisdiction, or that expressed in the Berne Convention''s specifications if other definitions are not available. "Undetermined" may be used if research was done but no status is found.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'n', 'Note (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'o', 'Research date (NR) Date that the copyright data was determined based on research.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'p', 'Country of publication or creation (R) Country in which the resource was published or, in the case of unpublished materials, the country in which the resource was created.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'q', 'Supplying agency (NR) Code or name of agency supplying the information.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'r', 'Jurisdiction of copyright assessment (NR) Jurisdiction within which the copyright status assessment is being made.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 's', 'Source of information (NR) Source of the copyright information, whether from the piece or from other sources.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', 'u', 'Uniform Resource Identifier (R) Uniform Resource Identifier (URI), for example a URL or URN, which provides electronic access data in a standard syntax. The data may be a more detailed statement about information relating to copyright status.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '542', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007d.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007g.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007h.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007k.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007m.html
-- category: biblio tag: 534 file: www.loc.gov/marc/bibliographic/concise/bd534.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_534_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_534_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_534_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_534_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'a', 'Main entry of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'b', 'Edition statement of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'c', 'Publication, distribution, etc. of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'e', 'Physical description, etc. of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'f', 'Series statement of original (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'k', 'Key title of original (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'l', 'Location of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'm', 'Material specific details (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'n', 'Note about original (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'o', 'Other resource identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'p', 'Introductory phrase (NR) Introductory phrase that introduces the citation of the original version.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 't', 'Title statement of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'x', 'International Standard Serial Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'z', 'International Standard Book Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 534 file: www.loc.gov/marc/bibliographic/concise/bd534.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_534_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_534_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_534_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_534_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'a', 'Main entry of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'b', 'Edition statement of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'c', 'Publication, distribution, etc. of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'e', 'Physical description, etc. of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'f', 'Series statement of original (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'k', 'Key title of original (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'l', 'Location of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'm', 'Material specific details (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'n', 'Note about original (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'o', 'Other resource identifier (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'p', 'Introductory phrase (NR) Introductory phrase that introduces the citation of the original version.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 't', 'Title statement of original (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'x', 'International Standard Serial Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', 'z', 'International Standard Book Number (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', '3', 'Materials specified (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '534', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 040 file: www.loc.gov/marc/authority/concise/ad040.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_040_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_040_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_040_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_040_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'a', 'Original cataloging agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'b', 'Language of cataloging (NR) MARC code for the language of the catalog for which the record is intended. Code from: MARC Code List for Languages.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'c', 'Transcribing agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'd', 'Modifying agency (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'e', 'Description conventions (R) Information specifying the description rules used in formulating the heading and reference structure when field 008/10 (Descriptive cataloging rules) contains code z (Other). Code from: Description Convention Source Codes.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'f', 'Subject heading/thesaurus conventions (NR) MARC code for the subject heading/thesaurus conventions used when field 008/11 (Subject heading system/thesaurus) contains code z (Other). Code from: Subject Heading and Term Source Codes, or from specialized subject term lists indicated in the introduction to Subject Heading and Term Source Codes, such as the Genre/Form Code and Term Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 040 file: www.loc.gov/marc/authority/concise/ad040.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_040_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_040_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_authority_040_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_040_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'a', 'Original cataloging agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'b', 'Language of cataloging (NR) MARC code for the language of the catalog for which the record is intended. Code from: MARC Code List for Languages.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'c', 'Transcribing agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'd', 'Modifying agency (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'e', 'Description conventions (R) Information specifying the description rules used in formulating the heading and reference structure when field 008/10 (Descriptive cataloging rules) contains code z (Other). Code from: Description Convention Source Codes.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', 'f', 'Subject heading/thesaurus conventions (NR) MARC code for the subject heading/thesaurus conventions used when field 008/11 (Subject heading system/thesaurus) contains code z (Other). Code from: Subject Heading and Term Source Codes, or from specialized subject term lists indicated in the introduction to Subject Heading and Term Source Codes, such as the Genre/Form Code and Term Source Codes.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '040', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 006 file: www.loc.gov/marc/bibliographic/concise/bd006.html
-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008x.html
-- category: biblio tag: 040 file: www.loc.gov/marc/bibliographic/concise/bd040.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_040_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_040_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_040_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_040_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'a', 'Original cataloging agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'b', 'Language of cataloging (NR) MARC code for the language of cataloging in the record. Code from: MARC Code List for Languages.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'c', 'Transcribing agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'd', 'Modifying agency (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'e', 'Description conventions (R) Code from: Description Convention Source Codes.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 040 file: www.loc.gov/marc/bibliographic/concise/bd040.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_040_ind_1$ident$,
            BTRIM($label$First - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_040_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES (
            $ident$marc21_biblio_040_ind_2$ident$,
            BTRIM($label$Second - Undefined

$label$),
            NULL
        ) ON CONFLICT (name) DO UPDATE SET
            label = EXCLUDED.label,
            description = EXCLUDED.description;

        
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_040_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'a', 'Original cataloging agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'b', 'Language of cataloging (NR) MARC code for the language of cataloging in the record. Code from: MARC Code List for Languages.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'c', 'Transcribing agency (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'd', 'Modifying agency (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', 'e', 'Description conventions (R) Code from: Description Convention Source Codes.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', '6', 'Linkage (NR) See description of this subfield in Appendix A: Control Subfields.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '040', '8', 'Field link and sequence number (R) See description of this subfield in Appendix A: Control Subfields.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 588 file: www.loc.gov/marc/bibliographic/concise/bd588.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_588_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_588_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_588_ind_1', '0', 'Source of description', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_588_ind_1', '1', 'Latest issue consulted', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_588_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_588_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '588', 'a', 'Source of description note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 884 file: www.loc.gov/marc/authority/concise/ad884.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_884_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_884_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_884_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_884_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '884', 'a', 'Conversion process  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008b.html

        UPDATE config.record_attr_definition
        SET description = 'Illustrations'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Target audience'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 22 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 23 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Nature of contents'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 24 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Government publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 28 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Conference publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 29 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Festschrift'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 30 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Index'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 31 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 32 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Literary form'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 33 AND rec_type IN ('BKS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Biography'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 34 AND rec_type IN ('BKS') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 18, '#', 'No illustrations', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'a', 'Illustrations', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'b', 'Maps', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'c', 'Portraits', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'd', 'Charts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'e', 'Plans', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'f', 'Plates', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'g', 'Music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'h', 'Facsimiles', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'i', 'Coats of arms', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'j', 'Genealogical tables', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'k', 'Forms', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'l', 'Samples', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'm', 'Phonodisc, phonowire, etc.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'o', 'Photographs', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'p', 'Illuminations', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '#', 'Unknown or not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'a', 'Preschool', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'b', 'Primary', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'c', 'Pre-adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'd', 'Adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'e', 'Adult', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'f', 'Specialized', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'g', 'General', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'j', 'Juvenile', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '#', 'None of the following', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'a', 'Microfilm', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'b', 'Microfiche', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'c', 'Microopaque', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'd', 'Large print', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'f', 'Braille', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'r', 'Regular print reproduction', 'Eye-readable print, such as a photocopy.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 's', 'Electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '#', 'No specified nature of contents', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'a', 'Abstracts/summaries', 'Abstracts or summaries of other publications.
                           							Not used when a publication includes an
                           							abstract or summary of its own content.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'b', 'Bibliographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'c', 'Catalogs', 'Also includes lists of collectible objects,
                           							such as stamps and coins, or trade catalogs,
                           							etc. For catalogs of books, sound recordings,
                           							or motion pictures, code b (Bibliographies),
                           							code k (Discographies), or code q
                           							(Filmographies), are given with code c.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'd', 'Dictionaries', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'e', 'Encyclopedias', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'f', 'Handbooks', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'g', 'Legal articles', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'i', 'Indexes', 'Index to bibliographical material
                           							other than itself.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'j', 'Patent document', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'k', 'Discographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'l', 'Legislation', 'Full or partial texts of enactments of
                           							legislative bodies, published either in
                           							statute or in code form, or texts of rules and
                           							regulations issued by executive or
                           							administrative agencies.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'm', 'Theses', 'Thesis, dissertation, or work identified as
                           							having been created to satisfy the
                           							requirements for an academic certification or
                           							degree.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'n', 'Surveys of literature in a subject area', 'Composed entirely of authored surveys that
                           							summarize what has been published about a
                           							subject.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'o', 'Reviews', 'Devoted entirely to critical reviews of
                           							published or performed works (e.g., books,
                           							films, sound recordings, theater).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'p', 'Programmed texts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'q', 'Filmographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'r', 'Directories', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 's', 'Statistics', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 't', 'Technical reports', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'u', 'Standards/specifications', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'v', 'Legal cases and case notes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'w', 'Law reports and digests', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'y', 'Yearbooks', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'z', 'Treaties', 'Treaty or accord negotiated between two or
                           							more parties to settle a disagreement,
                           							establish a relationship, grant rights,
                           						etc.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '2', 'Offprints', 'Publication that originally was published as
                           							an article in a monograph or a serial and that
                           							is also issued separately and independently.
                           							Includes preprints and postprints.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '5', 'Calendars', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '6', 'Comics/graphic novels', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '#', 'Not a government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'a', 'Autonomous or semi-autonomous component', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'c', 'Multilocal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'f', 'Federal/national', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'i', 'International intergovernmental', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'l', 'Local', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'm', 'Multistate', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'o', 'Government publication-level undetermined', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 's', 'State, provincial, territorial, dependent,
                        						etc.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'u', 'Unknown if item is government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '0', 'Not a conference publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '1', 'Conference publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, '0', 'Not a festschrift', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, '1', 'Festschrift', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 31, '0', 'No index', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 31, '1', 'Index present', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 31, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '0', 'Not fiction (not further specified)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '1', 'Fiction (not further specified)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'd', 'Dramas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'e', 'Essays', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'f', 'Novels', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'h', 'Humor, satires, etc.', 'Humorous work, satire, or of similar literary
                           							form.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'i', 'Letters', 'Single letter or collection of
                           							correspondence.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'j', 'Short stories', 'Short story or collection of short
                           						stories.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'm', 'Mixed forms', 'Represents a variety of literary forms (e.g.,
                           							poetry and short stories).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'p', 'Poetry', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 's', 'Speeches', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '#', 'No biographical material', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'a', 'Autobiography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'b', 'Individual biography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'c', 'Collective biography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'd', 'Contains biographical information', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008c.html

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Target audience'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 22 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 23 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 24 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of computer file'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 26 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 27 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Government publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 28 AND rec_type IN ('COM') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 29 AND rec_type IN ('COM') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 22, '#', 'Unknown or not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'a', 'Preschool', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'b', 'Primary', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'c', 'Pre-adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'd', 'Adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'e', 'Adult', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'f', 'Specialized', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'g', 'General', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'j', 'Juvenile', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '#', 'Unknown or not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'a', 'Numeric data', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'b', 'Computer program', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'c', 'Representational', 'Pictorial or graphic information that can be manipulated in conjunction with
                           other types of files to produce graphic patterns that can be used to interpret
                           and give meaning to the information.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'd', 'Document', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'e', 'Bibliographic data', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'f', 'Font', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'g', 'Game', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'h', 'Sound', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'i', 'Interactive multimedia', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'j', 'Online system or service', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'm', 'Combination', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 26, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '#', 'Not a government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'a', 'Autonomous or semi-autonomous component', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'c', 'Multilocal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'f', 'Federal/national', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'i', 'International intergovernmental', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'l', 'Local', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'm', 'Multistate', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'o', 'Government publication-level undetermined', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 's', 'State, provincial, territorial, dependent, etc.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'u', 'Unknown if item is government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008p.html

        UPDATE config.record_attr_definition
        SET description = 'Relief'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Projection'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 22 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 24 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of cartographic material'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 25 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 26 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Government publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 28 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 29 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 30 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Index'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 31 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 32 AND rec_type IN ('MAP') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Special format characteristics'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 33 AND rec_type IN ('MAP') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 18, '#', 'No relief shown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'a', 'Contours', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'b', 'Shading', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'c', 'Gradient and bathymetric tints', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'd', 'Hachures', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'e', 'Bathymetry/soundings', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'f', 'Form lines', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'g', 'Spot heights', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'i', 'Pictorially', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'j', 'Land forms', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'k', 'Bathymetry/isolines', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'm', 'Rock drawings', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '||||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '##', 'Projection not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'aa', 'Aitoff', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ab', 'Gnomic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ac', 'Lambert''s azimuthal equal area', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ad', 'Orthographic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ae', 'Azimuthal equidistant', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'af', 'Stereographic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ag', 'General vertical near-sided', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'am', 'Modified stereographic for Alaska', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'an', 'Chamberlin trimetric', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ap', 'Polar stereographic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'au', 'Azimuthal, specific type unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'az', 'Azimuthal, other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ba', 'Gall', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bb', 'Goode''s homolographic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bc', 'Lambert''s cylindrical equal area', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bd', 'Mercator', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'be', 'Miller', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bf', 'Mollweide', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bg', 'Sinusoidal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bh', 'Transverse Mercator', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bi', 'Gauss-Kruger', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bj', 'Equirectangular', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bk', 'Krovak', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bl', 'Cassini-Soldner', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bo', 'Oblique Mercator', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'br', 'Robinson', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bs', 'Space oblique Mercator', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bu', 'Cylindrical, specific type unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'bz', 'Cylindrical, other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ca', 'Albers equal area', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'cb', 'Bonne', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'cc', 'Lambert''s conformal conic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'ce', 'Equidistant conic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'cp', 'Polyconic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'cu', 'Conic, specific type unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'cz', 'Conic, other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'da', 'Armadillo', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'db', 'Butterfly', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'dc', 'Eckert', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'dd', 'Goode''s homolosine', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'de', 'Miller''s bipolar oblique conformal conic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'df', 'Van Der Grinten', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'dg', 'Dimaxion', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'dh', 'Cordiform', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'dl', 'Lambert conformal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'zz', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'a', 'Single map', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'b', 'Map series', 'Number of related but physically separate and bibliographically distinct cartographic
                           							units intended by the producer(s) or issuing body(s) to form a single group.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'c', 'Map serial', 'Issued in successive parts bearing numerical or chronological designations and
                           							intended to be continued indefinitely.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'd', 'Globe', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'e', 'Atlas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'f', 'Separate supplement to another work', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'g', 'Bound as part of another work', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '#', 'Not a government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'a', 'Autonomous or semi-autonomous component', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'c', 'Multilocal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'f', 'Federal/national', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'i', 'International intergovernmental', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'l', 'Local', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'm', 'Multistate', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'o', 'Government publication-level undetermined', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 's', 'State, provincial, territorial, dependent, etc.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'u', 'Unknown if item is government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '#', 'None of the following', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'a', 'Microfilm', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'b', 'Microfiche', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'c', 'Microopaque', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'd', 'Large print', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'f', 'Braille', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'r', 'Regular print reproduction', 'Eye-readable print, such as a photocopy.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 's', 'Electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 31, '0', 'No index', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 31, '1', 'Index present', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 31, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '#', 'No specified special format characteristics', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'e', 'Manuscript', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'j', 'Picture card, post card', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'k', 'Calendar', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'l', 'Puzzle', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'n', 'Game', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'o', 'Wall map', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'p', 'Playing cards', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'r', 'Loose-leaf', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '||', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008v.html

        UPDATE config.record_attr_definition
        SET description = 'Running time for motion pictures and videorecordings'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 21 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Target audience'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 22 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 23 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Government publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 28 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 29 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 30 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of visual material'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 33 AND rec_type IN ('VIS') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Technique'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 34 AND rec_type IN ('VIS') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 18, '000', 'Running time exceeds three characters', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '001-999', 'Running time', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'nnn', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '---', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '|||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '#', 'Unknown or not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'a', 'Preschool', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'b', 'Primary', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'c', 'Pre-adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'd', 'Adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'e', 'Adult', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'f', 'Specialized', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'g', 'General', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'j', 'Juvenile', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '#', 'Not a government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'a', 'Autonomous or semi-autonomous component', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'c', 'Multilocal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'f', 'Federal/national', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'i', 'International intergovernmental', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'l', 'Local', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'm', 'Multistate', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'o', 'Government publication-level undetermined', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 's', 'State, provincial, territorial, dependent, etc.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'u', 'Unknown if item is government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '#', 'None of the following', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'a', 'Microfilm', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'b', 'Microfiche', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'c', 'Microopaque', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'd', 'Large print', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'f', 'Braille', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 'r', 'Regular print reproduction', 'Eye-readable print, such as a photocopy.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, 's', 'Electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'a', 'Art original', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'b', 'Kit', 'Mixture of components from two or more categories, that is, sound recording,
                           maps, filmstrips, etc., no one of which is the predominant constituent of the
                           item.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'c', 'Art reproduction', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'd', 'Diorama', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'f', 'Filmstrip', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'g', 'Game', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'i', 'Picture', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'k', 'Graphic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'l', 'Technical drawing', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'm', 'Motion picture', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'n', 'Chart', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'o', 'Flash card', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'p', 'Microscope slide', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'q', 'Model', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'r', 'Realia', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 's', 'Slide', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 't', 'Transparency', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'v', 'Videorecording', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'w', 'Toy', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'a', 'Animation', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'c', 'Animation and live action', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'l', 'Live action', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'n', 'Not applicable', 'Item is not a motion picture or a videorecording.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 088 file: www.loc.gov/marc/bibliographic/concise/bd088.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_088_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_088_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_088_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_088_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '088', 'a', 'Report number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 884 file: www.loc.gov/marc/bibliographic/concise/bd884.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_884_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_884_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_884_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_884_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '884', 'a', 'Conversion process  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007c.html

        UPDATE config.record_attr_definition
        SET description = 'Category of material'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 0 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Specific material designation'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 1 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 2 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Color'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 3 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Dimensions'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 4 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Sound'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 5 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Image bit depth'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 6 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'File formats'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 9 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Quality assurance target(s)'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 10 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Antecedent/Source'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 11 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Level of compression'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 12 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Reformatting Quality'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 13 AND rec_type NOT IN ('AUT') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('007', 0, 'c', 'Electronic resource', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'a', 'Tape cartridge', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'b', 'Chip cartridge', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'c', 'Computer optical disc cartridge', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'd', 'Computer disc, type unspecified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'e', 'Computer disc cartridge, type unspecified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'f', 'Tape cassette', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'h', 'Tape reel', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'j', 'Magnetic disk', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'k', 'Computer card', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'm', 'Magneto-optical disc', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'o', 'Optical disc', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'r', 'Remote', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 's', 'Standalone device', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'u', 'Unspecified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'a', 'One color', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'b', 'Black-and-white', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'c', 'Multicolored', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'g', 'Gray scale', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'm', 'Mixed', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'a', '3 1/2 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'e', '12 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'g', '4 3/4 in. or 12 cm.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'i', '1 1/8 x 2 3/8 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'j', '3 7/8 x 2 1/2 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'o', '5 1/4 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'v', '8 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, '#', 'No sound (silent)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'a', 'Sound', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, '001-999', 'Exact bit depth', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'mmm', 'Multiple', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'nnn', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, '---', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, '|||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'a', 'One file format', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'm', 'Multiple file formats', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'a', 'Absent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'p', 'Present', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'a', 'File reproduced from original', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'b', 'File reproduced from microform', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'c', 'File reproduced from an electronic resource', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'd', 'File reproduced from an intermediate (not microform)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'm', 'Mixed', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'a', 'Uncompressed', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'b', 'Lossless', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'd', 'Lossy', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'm', 'Mixed', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'a', 'Access', 'Electronic resource is of a quality that will support current, electronic access to
                           							the original item (reference use), but is not sufficient to serve as a preservation
                           							copy.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'p', 'Preservation', 'Electronic resource was created via reformatting to help preserve the original
                           						item.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'r', 'Replacement', 'Electronic resource is of very high quality and, when printed out, viewed on screen
                           							or played via a listening device could serve as a replacement should the original
                           be
                           							lost, damaged, or destroyed.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007a.html

        UPDATE config.record_attr_definition
        SET description = 'Category of material'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 0 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Specific material designation'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 1 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 2 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Color'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 3 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Physical medium'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 4 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of reproduction'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 5 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Production/reproduction details'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 6 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Positive/negative aspect'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 7 AND rec_type NOT IN ('AUT') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('007', 0, 'a', 'Map', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'd', 'Atlas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'g', 'Diagram', 'Map characterized by simplified, or schematic, representation.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'j', 'Map', 'Two-dimensional map.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'k', 'Profile', 'Scale representation of the intersection of a vertical surface (which may or may not
                           							be a plane) with the surface of the ground or with that of a conceptual
                           							three-dimensional model of phenomena having continuous distribution (e.g.,
                           						rainfall).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'q', 'Model', 'Three-dimensional representation of a real object.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'r', 'Remote-sensing image', 'Image produced by a recording device that is not in physical or intimate contact with
                           							the object under study.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 's', 'Section', 'Scaled representation of a vertical surface (commonly a plane) displaying both the
                           							the intersection profile or some conceptual model, and the underlying structures,
                           							e.g., geological section.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'u', 'Unspecified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'y', 'View', 'Perspective representation of the landscape shown as if it were projected onto an
                           							oblique plane.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'a', 'One color', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'c', 'Multicolored', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'a', 'Paper', 'Any kind of cellulose-based paper.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'b', 'Wood', 'Material which is based on wood particles or fibers may or may not be considered
                           							wood. Consider particle board wood.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'c', 'Stone', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'd', 'Metal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'e', 'Synthetic', 'Man-made substances other than textiles, plastic, and vinyl.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'f', 'Skin', 'Excludes leather, parchment, and vellum.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'g', 'Textiles', 'Used for all fabrics, whether made from natural or synthetic fibers.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'i', 'Plastic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'j', 'Glass', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'l', 'Vinyl', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'n', 'Vellum', 'Fine-grained unsplit lambskin, kidskin, or calfskin prepared especially for writing
                           							or drawing on.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'p', 'Plaster', 'Includes mixtures of ground solids and plaster.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'q', 'Flexible base photographic, positive', 'Material is a flexible base photographic medium designed to render a positive
                           						image.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'r', 'Flexible base photographic, negative', 'Material is a flexible base photographic medium designed to render a negative
                           						image.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 's', 'Non-flexible base photographic, positive', 'Material is a non-flexible base photographic medium designed to render a positive
                           							image.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 't', 'Non-flexible base photographic, negative', 'Material is a non-flexible base photographic medium designed to render a negative
                           							image.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'v', 'Leather', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'w', 'Parchment', 'Skin of a sheep or goat prepared for writing on.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'x', 'Not applicable', 'Physical medium is not applicable to remote digital 
                           							cartographic resources because it pertains to characteristics
                           							specific to physical aspects of carriers.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'y', 'Other photographic medium', 'Photographic medium other than those covered by one of the more specific codes q,
                           r,
                           							s, and t.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'f', 'Facsimile', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'a', 'Photocopy, blueline print', 'Has a blueline image on a white background and is reproduced by the whiteprint
                           							process.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'b', 'Photocopy', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'c', 'Photographic pre-production', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'd', 'Film', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'a', 'Positive', 'Polarity is positive, i.e., lines and characters are dark on light background.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'b', 'Negative', 'Polarity is negative, i.e., lines and characters are light on dark background.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'm', 'Mixed polarity', 'Mixture of positive and negative images.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, '|', 'No attempt to code', '', 'biblio');
-- category: authority tag: 050 file: www.loc.gov/marc/authority/concise/ad050.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_050_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_050_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_050_ind_2', BTRIM($label$

Second - Source of call number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_050_ind_2', '0', 'Assigned by LC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_050_ind_2', '4', 'Assigned by agency other than LC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '050', 'a', 'Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 052 file: www.loc.gov/marc/authority/concise/ad052.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_052_ind_1', BTRIM($label$

First - Code source

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_052_ind_1', '#', 'Library of Congress Classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_052_ind_1', '1', 'U.S. Dept. of Defense Classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_052_ind_1', '7', 'Source specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_052_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_052_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '052', 'a', 'Geographic classification area code  (NR)
Four- to six-character numeric or alphanumeric code for the main geographic area
                     associated with the heading.
Code is derived from the LC class G schedule by dropping the letter G.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 053 file: www.loc.gov/marc/authority/concise/ad053.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_053_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_053_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_053_ind_2', BTRIM($label$

Second - Source of classification number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_053_ind_2', '0', 'Assigned by LC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_053_ind_2', '4', 'Assigned by agency other than LC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '053', 'a', 'Classification number element-single number or beginning number of span  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 060 file: www.loc.gov/marc/authority/concise/ad060.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_060_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_060_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_060_ind_2', BTRIM($label$

Second - Source of call number
                   
                  Whether the source of the call number is the National Library of Medicine or
                        another organization.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_060_ind_2', '0', 'Assigned by NLM', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_060_ind_2', '4', 'Assigned by agency other than NLM', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '060', 'a', 'Classification number  (NR)
Source of the classification number is National Library of Medicine
                        Classification that is maintained by the NLM. NLM also determines which
                     Library of Congress Classification schedules are used to augment the
                     NLM scheme.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 070 file: www.loc.gov/marc/authority/concise/ad070.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_070_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_070_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_070_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_070_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '070', 'a', 'Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 075 file: www.loc.gov/marc/authority/concise/ad075.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_075_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_075_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_075_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_075_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '075', 'a', 'Type of entity term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 080 file: www.loc.gov/marc/authority/concise/ad080.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_080_ind_1', BTRIM($label$

First - Type of edition

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_080_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_080_ind_1', '0', 'Full', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_080_ind_1', '1', 'Abridged', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_080_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_080_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '080', 'a', 'Universal Decimal Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 087 file: www.loc.gov/marc/authority/concise/ad087.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_087_ind_1', BTRIM($label$

First - Number source

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_087_ind_1', '#', 'Source specified in subfield $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_087_ind_1', '0', 'Superintendent of Documents Classification System', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_087_ind_1', '1', 'Government of Canada Publications: Outline of Classification', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_087_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_087_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '087', 'a', 'Classification number element-Single number of beginning number of span  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 673 file: www.loc.gov/marc/authority/concise/ad673.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_673_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_673_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_673_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '673', 'a', 'Title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 885 file: www.loc.gov/marc/authority/concise/ad885.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_885_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_885_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_885_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_885_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '885', 'a', 'Matching information  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 033 file: www.loc.gov/marc/bibliographic/concise/bd033.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_033_ind_1', BTRIM($label$

First - Type of date in subfield $a

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_1', '#', 'No date information', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_1', '0', 'Single date', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_1', '1', 'Multiple single dates', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_1', '2', 'Range of dates', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_033_ind_2', BTRIM($label$

Second - Type of event

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_2', '0', 'Capture
                  Pertains to the recording of sound, the filming of visual images, the making or
                           producing of an item, or other form of creation of an item.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_2', '1', 'Broadcast
                  Pertains to the broadcasting (i.e., transmission) or re-broadcasting of sound
                           or visual images.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_033_ind_2', '2', 'Finding
                  Pertains to the finding of a naturally occurring object.', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '033', 'a', 'Formatted date/time  (R)
Seventeen characters, recorded in the pattern yyyymmddhhmm+-hmm, that
                     indicate the actual or approximate date (yyyymmdd)/time (hhmm)
                     of capture, finding, or broadcast and Time Differential Factor (+-hhmm)
                     information. A hyphen (-) is used for unknown digits in the year/month/day
                     segment. Within each segment, the data is right justified and any unused position
                     contains a zero.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 050 file: www.loc.gov/marc/bibliographic/concise/bd050.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_050_ind_1', BTRIM($label$

First - Existence in LC collection

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_050_ind_1', '#', 'No information provided
                  Used for all call numbers assigned by agencies other than the Library of
                           Congress.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_050_ind_1', '0', 'Item is in LC
                  Other agencies should use this value when transcribing from LC cataloging copy
                           on which the call number is neither enclosed within brackets nor preceded by a
                           Maltese cross.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_050_ind_1', '1', 'Item is not in LC
                  Used by other agencies when transcribing from LC copy on which the call number
                           appears in brackets or is preceded by a Maltese cross. Brackets that
                           customarily surround call numbers for items not in LC are not carried in the
                           MARC record; they may be generated for display.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_050_ind_2', BTRIM($label$

Second - Source of call number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_050_ind_2', '0', 'Assigned by LC
                  Used when an institution is transcribing from LC cataloging copy.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_050_ind_2', '4', 'Assigned by agency other than LC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '050', 'a', 'Classification number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 052 file: www.loc.gov/marc/bibliographic/concise/bd052.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_052_ind_1', BTRIM($label$

First - Code source

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_052_ind_1', '#', 'Library of Congress Classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_052_ind_1', '1', 'U.S. Dept. of Defense Classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_052_ind_1', '7', 'Source specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_052_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_052_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '052', 'a', 'Geographic classification area code  (NR)
Numeric or alphanumeric code that represents the main geographic area covered by an
                     item.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 055 file: www.loc.gov/marc/bibliographic/concise/bd055.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_055_ind_1', BTRIM($label$

First - Existence in LAC collection

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_1', '#', 'Information not provided
                  Used in any record input by an institution other than LAC.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_1', '0', 'Work held by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_1', '1', 'Work not held by LAC', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_055_ind_2', BTRIM($label$

Second - Type, completeness, source of class/call number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '0', 'LC-based call number assigned by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '1', 'Complete LC class number assigned by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '2', 'Incomplete LC class number assigned by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '3', 'LC-based call number assigned by the contributing library', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '4', 'Complete LC class number assigned by the contributing library', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '5', 'Incomplete LC class number assigned by the contributing library', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '6', 'Other call number assigned by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '7', 'Other class number assigned by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '8', 'Other call number assigned by the contributing library', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_055_ind_2', '9', 'Other class number assigned by the contributing library', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '055', 'a', 'Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 060 file: www.loc.gov/marc/bibliographic/concise/bd060.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_060_ind_1', BTRIM($label$

First - Existence in NLM collection

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_060_ind_1', '#', 'No information provided
                  Used for call numbers assigned by an organization other than NLM.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_060_ind_1', '0', 'Item is in NLM', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_060_ind_1', '1', 'Item is not in NLM', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_060_ind_2', BTRIM($label$

Second - Source of call number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_060_ind_2', '0', 'Assigned by NLM', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_060_ind_2', '4', 'Assigned by agency other than NLM', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '060', 'a', 'Classification number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 070 file: www.loc.gov/marc/bibliographic/concise/bd070.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_070_ind_1', BTRIM($label$

First - Existence in NAL collection

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_070_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_070_ind_1', '0', 'Item is in NAL', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_070_ind_1', '1', 'Item is not in NAL', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_070_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_070_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '070', 'a', 'Classification number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 080 file: www.loc.gov/marc/bibliographic/concise/bd080.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_080_ind_1', BTRIM($label$

First - Type of edition

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_080_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_080_ind_1', '0', 'Full', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_080_ind_1', '1', 'Abridged', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_080_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_080_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '080', 'a', 'Universal Decimal Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 085 file: www.loc.gov/marc/bibliographic/concise/bd085.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_085_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_085_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_085_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_085_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '085', 'a', 'Number where instructions are found-single
                  					number or beginning number of span  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 086 file: www.loc.gov/marc/bibliographic/concise/bd086.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_086_ind_1', BTRIM($label$

First - Number source

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_086_ind_1', '#', 'Source specified in subfield $2
                  Classification number other than the U.S. or Canadian scheme.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_086_ind_1', '0', 'Superintendent of Documents Classification System
                  Assigned by the U.S Government Printing Office. Supt. of Docs. no.:
                           may be generated for display.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_086_ind_1', '1', 'Government of Canada Publications: Outline of Classification', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_086_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_086_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '086', 'a', 'Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 243 file: www.loc.gov/marc/bibliographic/concise/bd243.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_243_ind_1', BTRIM($label$

First - Uniform title printed or displayed

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_1', '0', 'Not printed or displayed', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_1', '1', 'Printed or displayed', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_243_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_243_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '243', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 257 file: www.loc.gov/marc/bibliographic/concise/bd257.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_257_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_257_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_257_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_257_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '257', 'a', 'Country of producing entity  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 337 file: www.loc.gov/marc/bibliographic/concise/bd337.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_337_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_337_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_337_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_337_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '337', 'a', 'Media type term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 338 file: www.loc.gov/marc/bibliographic/concise/bd338.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_338_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_338_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_338_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_338_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '338', 'a', 'Carrier type term  (R)
Term for the category of carrier used to convey the content of the resource.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 346 file: www.loc.gov/marc/bibliographic/concise/bd346.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_346_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_346_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_346_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_346_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '346', 'a', 'Video format  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 347 file: www.loc.gov/marc/bibliographic/concise/bd347.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_347_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_347_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_347_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_347_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '347', 'a', 'File type  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 567 file: www.loc.gov/marc/bibliographic/concise/bd567.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_567_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_567_ind_1', '#', 'Methodology', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_567_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_567_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_567_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '567', 'a', 'Methodology note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 647 file: www.loc.gov/marc/bibliographic/concise/bd647.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_647_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_647_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_647_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '647', 'a', 'Named event  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 654 file: www.loc.gov/marc/bibliographic/concise/bd654.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_654_ind_1', BTRIM($label$

First - Level of subject

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_654_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_654_ind_1', '0', 'No level specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_654_ind_1', '1', 'Primary', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_654_ind_1', '2', 'Secondary', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_654_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_654_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '654', 'a', 'Focus term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 656 file: www.loc.gov/marc/bibliographic/concise/bd656.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_656_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_656_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_656_ind_2', BTRIM($label$

Second - Source of term

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_656_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '656', 'a', 'Occupation  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 657 file: www.loc.gov/marc/bibliographic/concise/bd657.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_657_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_657_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_657_ind_2', BTRIM($label$

Second - Source of term

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_657_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '657', 'a', 'Function  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 662 file: www.loc.gov/marc/bibliographic/concise/bd662.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_662_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_662_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_662_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_662_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '662', 'a', 'Country or larger entity  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 752 file: www.loc.gov/marc/bibliographic/concise/bd752.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_752_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_752_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_752_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_752_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '752', 'a', 'Country or larger entity  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 753 file: www.loc.gov/marc/bibliographic/concise/bd753.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_753_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_753_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_753_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_753_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '753', 'a', 'Make and model of machine  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 754 file: www.loc.gov/marc/bibliographic/concise/bd754.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_754_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_754_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_754_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_754_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '754', 'a', 'Taxonomic name  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 885 file: www.loc.gov/marc/bibliographic/concise/bd885.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_885_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_885_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_885_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_885_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '885', 'a', 'Matching information  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 043 file: www.loc.gov/marc/bibliographic/concise/bd043.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_043_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_043_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_043_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_043_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '043', 'a', 'Geographic area code  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 345 file: www.loc.gov/marc/bibliographic/concise/bd345.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_345_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_345_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_345_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_345_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '345', 'a', 'Presentation format  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 881 file: www.loc.gov/marc/bibliographic/concise/bd881.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_881_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_881_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_881_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_881_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '881', 'a', 'Manifestation statement, high-level/general  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 856 file: www.loc.gov/marc/authority/concise/ad856.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_856_ind_1', BTRIM($label$

First - Access method

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '0', 'Email', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '1', 'FTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '2', 'Remote login (Telnet)', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '3', 'Dial-up', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '4', 'HTTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_1', '7', 'Method specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_856_ind_2', BTRIM($label$

Second - Relationship

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '0', 'Resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '1', 'Version of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '2', 'Related resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '3', 'Component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '4', 'Version of component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_856_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '856', 'a', 'Host name  (R)
Fully qualified domain (host name) of the electronic location. It contains a
                     network address which is repeated if there is more than one address for the same
                     host.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 856 file: www.loc.gov/marc/bibliographic/concise/bd856.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_856_ind_1', BTRIM($label$

First - Access method

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '0', 'Email', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '1', 'FTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '2', 'Remote login (Telnet)', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '3', 'Dial-up', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '4', 'HTTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_1', '7', 'Method specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_856_ind_2', BTRIM($label$

Second - Relationship

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '0', 'Resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '1', 'Version of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '2', 'Related resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '3', 'Component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '4', 'Version of component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_856_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '856', 'a', 'Host name  (R)
Fully qualified domain (host name) of the electronic location. It contains a
                     network address which is repeated if there is more than one address for the same
                     host.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 022 file: www.loc.gov/marc/authority/concise/ad022.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_022_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_022_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_022_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_022_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '022', 'a', 'International Standard Serial Number  (NR)
Valid ISSN for the continuing resource. ISSN  may be generated for
                     display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 023 file: www.loc.gov/marc/authority/concise/ad023.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_023_ind_1', BTRIM($label$

First - Type of Cluster ISSN

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_023_ind_1', '0', 'ISSN-L', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_023_ind_1', '1', 'ISSN-H', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_023_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_023_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '023', 'a', 'Cluster ISSN  (NR)
As designated by the ISSN International Centre, Cluster ISSNs group together resources
                     
                     with specific relationships to each other such as medium versions (ISSN-L), and clusters
                     
                     such as earlier and later titles (ISSN-H). The appropriate prefix for the ISSN type
                     
                     denoted by the first indicator value may be generated for display, for value 0: ISSN-L; 
                     for value 1: ISSN-H.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 371 file: www.loc.gov/marc/authority/concise/ad371.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_371_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_371_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_371_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_371_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '371', 'a', 'Address  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 372 file: www.loc.gov/marc/authority/concise/ad372.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_372_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_372_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_372_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_372_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '372', 'a', 'Field of activity  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 374 file: www.loc.gov/marc/authority/concise/ad374.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_374_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_374_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_374_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_374_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '374', 'a', 'Occupation  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 376 file: www.loc.gov/marc/authority/concise/ad376.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_376_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_376_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_376_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_376_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '376', 'a', 'Type of family  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 022 file: www.loc.gov/marc/bibliographic/concise/bd022.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_022_ind_1', BTRIM($label$

First - Level of international interest

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_022_ind_1', '#', 'No level specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_022_ind_1', '0', 'Continuing resource of international interest', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_022_ind_1', '1', 'Continuing resource not of international interest', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_022_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_022_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '022', 'a', 'International Standard Serial Number  (NR)
Valid ISSN for the continuing resource. ISSN may be generated for
                     display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 023 file: www.loc.gov/marc/bibliographic/concise/bd023.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_023_ind_1', BTRIM($label$

First - Type of Cluster ISSN

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_023_ind_1', '0', 'ISSN-L', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_023_ind_1', '1', 'ISSN-H', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_023_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_023_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '023', 'a', 'Cluster ISSN  (NR)
As designated by the ISSN International Centre, Cluster ISSNs group together resources
                     
                     with specific relationships to each other such as medium versions (ISSN-L), and clusters
                     
                     such as earlier and later titles (ISSN-H). The appropriate prefix for the ISSN type
                     
                     denoted by the first indicator value may be generated for display, for value 0: ISSN-L; 
                     for value 1: ISSN-H.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 532 file: www.loc.gov/marc/bibliographic/concise/bd532.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_532_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_532_ind_1', '0', 'Accessibility technical details', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_532_ind_1', '1', 'Accessibility features', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_532_ind_1', '2', 'Accessibility deficiencies', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_532_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_532_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_532_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '532', 'a', 'Summary of accessibility  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 024 file: www.loc.gov/marc/authority/concise/ad024.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_024_ind_1', BTRIM($label$

First - Type of standard number or code

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_024_ind_1', '7', 'Source specified in subfield $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_024_ind_1', '8', 'Unspecified type of standard number or code', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_024_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_024_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '024', 'a', 'Standard number or code  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 034 file: www.loc.gov/marc/authority/concise/ad034.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_034_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_034_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_034_ind_2', BTRIM($label$

Second - Type of ring

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_034_ind_2', '#', 'Not applicable', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_034_ind_2', '0', 'Outer ring', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_034_ind_2', '1', 'Exclusion ring', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '034', 'd', 'Coordinates - westernmost longitude  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 043 file: www.loc.gov/marc/authority/concise/ad043.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_043_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_043_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_043_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_043_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '043', 'a', 'Geographic area code  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 065 file: www.loc.gov/marc/authority/concise/ad065.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_065_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_065_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_065_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_065_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '065', 'a', 'Classification number element-single number or beginning of span  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 100 file: www.loc.gov/marc/authority/concise/ad100.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_100_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_100_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_100_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_100_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_100_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_100_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '100', 'a', 'Personal name  (NR)
Surname and/or forename; letters, initials, abbreviations, phrases, or numbers
                     used in place of a name; or a family name.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 110 file: www.loc.gov/marc/authority/concise/ad110.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_110_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_110_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_110_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_110_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_110_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_110_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '110', 'a', 'Corporate name or jurisdiction name as entry element  (NR)
Name of a corporate body, or the first entity when subordinate units are present;
                     a jurisdiction name under which a corporate body, city section, or a title of a
                     work is entered; or a jurisdictional name that is also an ecclesiastical
                     entity.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 111 file: www.loc.gov/marc/authority/concise/ad111.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_111_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_111_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_111_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_111_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_111_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_111_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '111', 'a', 'Meeting name or jurisdiction name as entry element  (NR)
Name of a meeting or a jurisdiction name under which a meeting name is
                     entered.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 130 file: www.loc.gov/marc/authority/concise/ad130.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_130_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_130_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_130_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '130', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 147 file: www.loc.gov/marc/authority/concise/ad147.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_147_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_147_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_147_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_147_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '147', 'a', 'Named event  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 148 file: www.loc.gov/marc/authority/concise/ad148.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_148_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_148_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_148_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_148_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '148', 'a', 'Chronological term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 150 file: www.loc.gov/marc/authority/concise/ad150.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_150_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_150_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_150_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_150_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '150', 'a', 'Topical term or geographic name entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 151 file: www.loc.gov/marc/authority/concise/ad151.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_151_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_151_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_151_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_151_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '151', 'a', 'Geographic name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 155 file: www.loc.gov/marc/authority/concise/ad155.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_155_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_155_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_155_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_155_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '155', 'a', 'Genre/form term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 162 file: www.loc.gov/marc/authority/concise/ad162.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_162_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_162_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_162_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_162_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '162', 'a', 'Medium of performance term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 180 file: www.loc.gov/marc/authority/concise/ad180.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_180_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_180_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_180_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_180_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '180', 'v', 'Form subdivision  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 181 file: www.loc.gov/marc/authority/concise/ad181.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_181_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_181_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_181_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_181_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '181', 'v', 'Form subdivision  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 182 file: www.loc.gov/marc/authority/concise/ad182.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_182_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_182_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_182_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_182_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '182', 'v', 'Form subdivision  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 185 file: www.loc.gov/marc/authority/concise/ad185.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_185_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_185_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_185_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_185_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '185', 'v', 'Form subdivision  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 260 file: www.loc.gov/marc/authority/concise/ad260.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_260_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_260_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_260_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_260_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '260', 'a', 'Heading referred to  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 335 file: www.loc.gov/marc/authority/concise/ad335.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_335_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_335_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_335_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_335_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '335', 'a', 'Extension plan term  (NR)
Extension plan of the work being described.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 336 file: www.loc.gov/marc/authority/concise/ad336.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_336_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_336_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_336_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_336_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '336', 'a', 'Content type term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 348 file: www.loc.gov/marc/authority/concise/ad348.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_348_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_348_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_348_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_348_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '348', 'a', 'Format of notated music term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 360 file: www.loc.gov/marc/authority/concise/ad360.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_360_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_360_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_360_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_360_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '360', 'a', 'Heading referred to  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 370 file: www.loc.gov/marc/authority/concise/ad370.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_370_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_370_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_370_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_370_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '370', 'a', 'Place of birth  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 373 file: www.loc.gov/marc/authority/concise/ad373.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_373_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_373_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_373_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_373_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '373', 'a', 'Associated group  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 375 file: www.loc.gov/marc/authority/concise/ad375.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_375_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_375_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_375_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_375_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '375', 'a', 'Gender  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 377 file: www.loc.gov/marc/authority/concise/ad377.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_377_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_377_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_377_ind_2', BTRIM($label$

Second - Source of code

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_377_ind_2', '#', 'MARC language code
                  Code from: MARC Code List
                                 								for Languages.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_377_ind_2', '7', 'Source specified in $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '377', 'a', 'Language code  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 378 file: www.loc.gov/marc/authority/concise/ad378.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_378_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_378_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_378_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_378_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '378', 'q', 'Fuller form of personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 380 file: www.loc.gov/marc/authority/concise/ad380.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_380_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_380_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_380_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_380_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '380', 'a', 'Form of work  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 381 file: www.loc.gov/marc/authority/concise/ad381.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_381_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_381_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_381_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_381_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '381', 'a', 'Other distinguishing characteristic  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 382 file: www.loc.gov/marc/authority/concise/ad382.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_382_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_382_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_382_ind_1', '0', 'Medium of performance', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_382_ind_1', '1', 'Partial medium of performance', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_382_ind_1', '2', 'Medium of performance of musical content of representative expression', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_382_ind_1', '3', 'Partial medium of performance of musical content of representative expression', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_382_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_382_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '382', 'a', 'Medium of performance  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 383 file: www.loc.gov/marc/authority/concise/ad383.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_383_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_383_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_383_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_383_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '383', 'a', 'Serial number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 384 file: www.loc.gov/marc/authority/concise/ad384.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_384_ind_1', BTRIM($label$

First - Key type

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_384_ind_1', '#', 'Relationship to original unknown', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_384_ind_1', '0', 'Original key', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_384_ind_1', '1', 'Transposed key', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_384_ind_1', '2', 'Key of representative expression', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_384_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_384_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '384', 'a', 'Key  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 385 file: www.loc.gov/marc/authority/concise/ad385.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_385_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_385_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_385_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_385_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '385', 'a', 'Audience term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 386 file: www.loc.gov/marc/authority/concise/ad386.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_386_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_386_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_386_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_386_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '386', 'a', 'Creator/contributor term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 387 file: www.loc.gov/marc/authority/concise/ad387.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_387_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_387_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_387_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_387_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '387', 'a', 'Aspect ratio of representative expression  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 388 file: www.loc.gov/marc/authority/concise/ad388.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_388_ind_1', BTRIM($label$

First - Type of time period

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_388_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_388_ind_1', '1', 'Creation of work', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_388_ind_1', '2', 'Creation of aggregate work', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_388_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_388_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '388', 'a', 'Time period of creation term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 400 file: www.loc.gov/marc/authority/concise/ad400.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_400_ind_1', BTRIM($label$

First - Type of personal name element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_400_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_400_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_400_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_400_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_400_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '400', 'a', 'Personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 410 file: www.loc.gov/marc/authority/concise/ad410.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_410_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_410_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_410_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_410_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_410_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_410_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '410', 'a', 'Corporate name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 411 file: www.loc.gov/marc/authority/concise/ad411.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_411_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_411_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_411_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_411_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_411_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_411_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '411', 'a', 'Meeting name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 430 file: www.loc.gov/marc/authority/concise/ad430.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_430_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_430_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_430_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '430', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 447 file: www.loc.gov/marc/authority/concise/ad447.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_447_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_447_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_447_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_447_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '447', 'a', 'Named event  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 448 file: www.loc.gov/marc/authority/concise/ad448.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_448_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_448_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_448_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_448_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '448', 'a', 'Chronological term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 450 file: www.loc.gov/marc/authority/concise/ad450.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_450_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_450_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_450_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_450_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '450', 'a', 'Topical term or geographic name entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 451 file: www.loc.gov/marc/authority/concise/ad451.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_451_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_451_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_451_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_451_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '451', 'a', 'Geographic name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 455 file: www.loc.gov/marc/authority/concise/ad455.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_455_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_455_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_455_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_455_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '455', 'a', 'Genre/form term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 462 file: www.loc.gov/marc/authority/concise/ad462.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_462_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_462_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_462_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_462_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '462', 'a', 'Medium of performance term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 480 file: www.loc.gov/marc/authority/concise/ad480.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_480_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_480_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_480_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_480_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '480', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 481 file: www.loc.gov/marc/authority/concise/ad481.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_481_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_481_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_481_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_481_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '481', 'i', 'Relationship information  (R)
See  Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 482 file: www.loc.gov/marc/authority/concise/ad482.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_482_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_482_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_482_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_482_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '482', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 485 file: www.loc.gov/marc/authority/concise/ad485.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_485_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_485_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_485_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_485_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '485', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 500 file: www.loc.gov/marc/authority/concise/ad500.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_500_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_500_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_500_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_500_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_500_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_500_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '500', 'a', 'Personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 510 file: www.loc.gov/marc/authority/concise/ad510.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_510_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_510_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_510_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_510_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_510_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_510_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '510', 'a', 'Corporate name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 511 file: www.loc.gov/marc/authority/concise/ad511.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_511_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_511_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_511_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_511_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_511_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_511_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '511', 'a', 'Meeting name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 530 file: www.loc.gov/marc/authority/concise/ad530.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_530_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_530_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_530_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '530', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 547 file: www.loc.gov/marc/authority/concise/ad547.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_547_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_547_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_547_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_547_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '547', 'a', 'Named event  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 548 file: www.loc.gov/marc/authority/concise/ad548.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_548_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_548_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_548_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_548_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '548', 'a', 'Chronological term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 550 file: www.loc.gov/marc/authority/concise/ad550.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_550_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_550_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_550_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_550_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '550', 'a', 'Topical term or geographic name entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 551 file: www.loc.gov/marc/authority/concise/ad551.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_551_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_551_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_551_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_551_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '551', 'a', 'Geographic name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 555 file: www.loc.gov/marc/authority/concise/ad555.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_555_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_555_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_555_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_555_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '555', 'a', 'Genre/form term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 562 file: www.loc.gov/marc/authority/concise/ad562.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_562_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_562_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_562_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_562_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '562', 'a', 'Medium of performance term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 580 file: www.loc.gov/marc/authority/concise/ad580.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_580_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_580_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_580_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_580_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '580', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 581 file: www.loc.gov/marc/authority/concise/ad581.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_581_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_581_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_581_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_581_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '581', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 582 file: www.loc.gov/marc/authority/concise/ad582.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_582_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_582_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_582_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_582_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '582', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 585 file: www.loc.gov/marc/authority/concise/ad585.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_585_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_585_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_585_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_585_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '585', 'i', 'Relationship information  (R)
See Tracings and References','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 670 file: www.loc.gov/marc/authority/concise/ad670.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_670_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_670_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_670_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_670_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '670', 'a', 'Source citation  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 672 file: www.loc.gov/marc/authority/concise/ad672.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_672_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_672_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_672_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '672', 'a', 'Title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 675 file: www.loc.gov/marc/authority/concise/ad675.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_675_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_675_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_675_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_675_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '675', 'a', 'Source citation  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 677 file: www.loc.gov/marc/authority/concise/ad677.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_677_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_677_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_677_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_677_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '677', 'a', 'Definition  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 678 file: www.loc.gov/marc/authority/concise/ad678.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_678_ind_1', BTRIM($label$

First - Type of data

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_678_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_678_ind_1', '0', 'Biographical sketch', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_678_ind_1', '1', 'Administrative history', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_678_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_678_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '678', 'a', 'Biographical or historical data  (R)
Brief statement providing biographical information about an individual or family.
                     It may
                     also contain historical and administrative information relating to an
                     organization.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 680 file: www.loc.gov/marc/authority/concise/ad680.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_680_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_680_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_680_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_680_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '680', 'a', 'Heading or subdivision term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 700 file: www.loc.gov/marc/authority/concise/ad700.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_700_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_700_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '0', '
                  Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '2', '
                  Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '5', '
                  Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '6', '
                  Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_700_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '700', 'a', 'Personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 710 file: www.loc.gov/marc/authority/concise/ad710.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_710_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_710_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '0', '
                  Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '2', '
                  Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '5', '
                  Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '6', '
                  Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_710_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '710', 'a', 'Corporate name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 711 file: www.loc.gov/marc/authority/concise/ad711.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_711_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_711_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '0', '
                  Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '2', '
                  Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '5', '
                  Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '6', '
                  Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_711_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '711', 'a', 'Meeting name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 730 file: www.loc.gov/marc/authority/concise/ad730.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_730_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_730_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '0', '
                  Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '2', '
                  Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '5', '
                  Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '6', '
                  Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_730_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '730', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 747 file: www.loc.gov/marc/authority/concise/ad747.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_747_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_747_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_747_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '747', 'a', 'Named event  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 748 file: www.loc.gov/marc/authority/concise/ad748.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_748_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_748_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_748_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '748', 'a', 'Chronological term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 750 file: www.loc.gov/marc/authority/concise/ad750.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_750_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_750_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_750_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '750', 'a', 'Topical term or geographic name entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 751 file: www.loc.gov/marc/authority/concise/ad751.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_751_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_751_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_751_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '751', 'a', 'Geographic name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 755 file: www.loc.gov/marc/authority/concise/ad755.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_755_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_755_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_755_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '755', 'a', 'Genre/form term as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 762 file: www.loc.gov/marc/authority/concise/ad762.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_762_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_762_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_762_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '762', 'a', 'Medium of performance term as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 780 file: www.loc.gov/marc/authority/concise/ad780.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_780_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_780_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_780_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '780', 'i', 'Relationship information  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 781 file: www.loc.gov/marc/authority/concise/ad781.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_781_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_781_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_781_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '781', 'i', 'Relationship information  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 782 file: www.loc.gov/marc/authority/concise/ad782.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_782_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_782_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_782_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '782', 'i', 'Relationship information  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 785 file: www.loc.gov/marc/authority/concise/ad785.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_785_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_785_ind_2', BTRIM($label$

Second - Thesaurus
                   
                  Thesaurus or authority file from which the heading came.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_785_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '785', 'i', 'Relationship information  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 788 file: www.loc.gov/marc/authority/concise/ad788.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_788_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_788_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_788_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '788', 'a', 'Heading referred to  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 082 file: www.loc.gov/marc/bibliographic/concise/bd082.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_082_ind_1', BTRIM($label$

First - Type of edition

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_082_ind_1', '0', 'Full edition', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_082_ind_1', '1', 'Abridged edition', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_082_ind_1', '7', 'Other edition specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_082_ind_2', BTRIM($label$

Second - Source of classification number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_082_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_082_ind_2', '0', 'Assigned by LC
                  May be used by organizations transcribing
                           							from LC copy.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_082_ind_2', '4', 'Assigned by agency other than LC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '082', 'a', 'Classification number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 083 file: www.loc.gov/marc/bibliographic/concise/bd083.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_083_ind_1', BTRIM($label$

First - Type of edition

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_083_ind_1', '0', 'Full edition', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_083_ind_1', '1', 'Abridged edition', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_083_ind_1', '7', 'Other edition specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_083_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_083_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '083', 'a', 'Classification number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 084 file: www.loc.gov/marc/bibliographic/concise/bd084.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_084_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_084_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_084_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_084_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '084', 'a', 'Classification number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 100 file: www.loc.gov/marc/bibliographic/concise/bd100.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_100_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_100_ind_1', '0', 'Forename
                  Forename or a name consisting of words, initials, letters, etc., that are
                           formatted in direct order.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_100_ind_1', '1', 'Surname
                  Single or multiple surname formatted in inverted order or a single name without
                           forenames that is known to be a surname.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_100_ind_1', '3', 'Family name
                  Name represents a family, clan, dynasty, house, or other such group and may be
                           formatted in direct or inverted order.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_100_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_100_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '100', 'a', 'Personal name  (NR)
Surname and/or forename; letters, initials, abbreviations, phrases, or numbers
                     used in place of a name; or a family name.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 110 file: www.loc.gov/marc/bibliographic/concise/bd110.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_110_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_110_ind_1', '0', 'Inverted name
                  Corporate name begins with a personal name in inverted order.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_110_ind_1', '1', 'Jurisdiction name
                  Name of a jurisdiction that is also an ecclesiastical entity or is a
                           jurisdiction name under which a corporate name or a title of a work is
                           entered.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_110_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_110_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_110_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '110', 'a', 'Corporate name or jurisdiction name as entry element  (NR)
Name of a corporate body or the first entity when subordinate units are present; a
                     jurisdiction name under which a corporate body, city section, or a title of a work
                     is entered; or a jurisdiction name that is also an ecclesiastical entity.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 111 file: www.loc.gov/marc/bibliographic/concise/bd111.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_111_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_111_ind_1', '0', 'Inverted name
                  Meeting name begins with a personal name in inverted order.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_111_ind_1', '1', 'Jurisdiction name
                  Jurisdiction name under which a meeting name is entered.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_111_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_111_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_111_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '111', 'a', 'Meeting name or jurisdiction name as entry element  (NR)
Name of a meeting, or the first entity when subordinate units are present; or a
                     jurisdiction name under which a meeting name is entered.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 130 file: www.loc.gov/marc/bibliographic/concise/bd130.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_130_ind_1', BTRIM($label$

First - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_1', '9', 'Number of nonfiling characters', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_130_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_130_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '130', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 210 file: www.loc.gov/marc/bibliographic/concise/bd210.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_210_ind_1', BTRIM($label$

First - Title added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_210_ind_1', '0', 'No added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_210_ind_1', '1', 'Added entry', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_210_ind_2', BTRIM($label$

Second - Type

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_210_ind_2', '#', 'Abbreviated key title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_210_ind_2', '0', 'Other abbreviated title', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '210', 'a', 'Abbreviated title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 240 file: www.loc.gov/marc/bibliographic/concise/bd240.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_240_ind_1', BTRIM($label$

First - Uniform title printed or displayed

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_1', '0', 'Not printed or displayed', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_1', '1', 'Printed or displayed', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_240_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_240_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '240', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 245 file: www.loc.gov/marc/bibliographic/concise/bd245.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_245_ind_1', BTRIM($label$

First - Title added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_1', '0', 'No added entry
                  No title added entry is made, either because no title added entry is desired or
                           because the title added entry is not traced the same as the title in field
                           245.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_1', '1', 'Added entry
                  Desired title added entry is the same as the title in field 245.', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_245_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_245_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '245', 'a', 'Title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 246 file: www.loc.gov/marc/bibliographic/concise/bd246.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_246_ind_1', BTRIM($label$

First - Note/added entry controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_1', '0', 'Note, no added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_1', '1', 'Note, added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_1', '2', 'No note, no added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_1', '3', 'No note, added entry', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_246_ind_2', BTRIM($label$

Second - Type of title

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '#', 'No type specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '0', 'Portion of title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '1', 'Parallel title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '2', 'Distinctive title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '3', 'Other title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '4', 'Cover title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '5', 'Added title page title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '6', 'Caption title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '7', 'Running title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_246_ind_2', '8', 'Spine title', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '246', 'a', 'Title proper/short title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 247 file: www.loc.gov/marc/bibliographic/concise/bd247.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_247_ind_1', BTRIM($label$

First - Title added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_247_ind_1', '0', 'No added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_247_ind_1', '1', 'Added entry', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_247_ind_2', BTRIM($label$

Second - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_247_ind_2', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_247_ind_2', '1', 'Do not display note', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '247', 'a', 'Title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 250 file: www.loc.gov/marc/bibliographic/concise/bd250.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_250_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_250_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_250_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_250_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '250', 'a', 'Edition statement  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 255 file: www.loc.gov/marc/bibliographic/concise/bd255.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_255_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_255_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_255_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_255_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '255', 'a', 'Statement of scale  (NR)
Entire scale statement including any equivalency statements, vertical scales or
                     vertical exaggeration statements for relief models and other three-dimensional
                     items.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 256 file: www.loc.gov/marc/bibliographic/concise/bd256.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_256_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_256_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_256_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_256_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '256', 'a', 'Computer file characteristics  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 264 file: www.loc.gov/marc/bibliographic/concise/bd264.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_264_ind_1', BTRIM($label$

First - Sequence of statements

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_1', '#', 'Not applicable/No information provided/Earliest', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_1', '2', 'Intervening', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_1', '3', 'Current/Latest', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_264_ind_2', BTRIM($label$

Second - Function of entity

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_2', '0', 'Production', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_2', '1', 'Publication', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_2', '2', 'Distribution', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_2', '3', 'Manufacture', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_264_ind_2', '4', 'Copyright notice date', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '264', 'a', 'Place of production, publication, distribution, manufacture  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 300 file: www.loc.gov/marc/bibliographic/concise/bd300.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_300_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_300_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_300_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_300_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '300', 'a', 'Extent  (R)
Number of physical pages, volumes, cassettes, total playing time, etc., of each
                     type of unit.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 335 file: www.loc.gov/marc/bibliographic/concise/bd335.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_335_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_335_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_335_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_335_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '335', 'a', 'Extension plan term  (NR)
Extension plan of the work being described.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 336 file: www.loc.gov/marc/bibliographic/concise/bd336.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_336_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_336_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_336_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_336_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '336', 'a', 'Content type term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 340 file: www.loc.gov/marc/bibliographic/concise/bd340.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_340_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_340_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_340_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_340_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '340', 'a', 'Material base and configuration  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 348 file: www.loc.gov/marc/bibliographic/concise/bd348.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_348_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_348_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_348_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_348_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '348', 'a', 'Format of notated music term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 370 file: www.loc.gov/marc/bibliographic/concise/bd370.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_370_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_370_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_370_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_370_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '370', 'c', 'Associated country  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 377 file: www.loc.gov/marc/bibliographic/concise/bd377.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_377_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_377_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_377_ind_2', BTRIM($label$

Second - Source of code

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_377_ind_2', '#', 'MARC language code
                  Code from: MARC Code List
                                 								for Languages.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_377_ind_2', '7', 'Source specified in $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '377', 'a', 'Language code  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 380 file: www.loc.gov/marc/bibliographic/concise/bd380.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_380_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_380_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_380_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_380_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '380', 'a', 'Form of work  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 381 file: www.loc.gov/marc/bibliographic/concise/bd381.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_381_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_381_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_381_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_381_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '381', 'a', 'Other distinguishing characteristic  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 382 file: www.loc.gov/marc/bibliographic/concise/bd382.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_382_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_1', '0', 'Medium of performance', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_1', '1', 'Partial medium of performance', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_1', '2', 'Medium of performance of musical content of representative expression', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_1', '3', 'Partial medium of performance of musical content of representative expression', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_382_ind_2', BTRIM($label$

Second - Access control

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_2', '0', 'Not intended for access', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_382_ind_2', '1', 'Intended for access', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '382', 'a', 'Medium of performance  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 383 file: www.loc.gov/marc/bibliographic/concise/bd383.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_383_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_383_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_383_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_383_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '383', 'a', 'Serial number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 384 file: www.loc.gov/marc/bibliographic/concise/bd384.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_384_ind_1', BTRIM($label$

First - Key type

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_384_ind_1', '#', 'Relationship to original unknown', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_384_ind_1', '0', 'Original key', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_384_ind_1', '1', 'Transposed key', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_384_ind_1', '2', 'Key of representative expression', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_384_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_384_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '384', 'a', 'Key  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 385 file: www.loc.gov/marc/bibliographic/concise/bd385.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_385_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_385_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_385_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_385_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '385', 'a', 'Audience term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 386 file: www.loc.gov/marc/bibliographic/concise/bd386.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_386_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_386_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_386_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_386_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '386', 'a', 'Creator/contributor term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 387 file: www.loc.gov/marc/bibliographic/concise/bd387.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_387_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_387_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_387_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_387_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '387', 'a', 'Aspect ratio of representative expression  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 388 file: www.loc.gov/marc/bibliographic/concise/bd388.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_388_ind_1', BTRIM($label$

First - Type of time period

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_388_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_388_ind_1', '1', 'Creation of work', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_388_ind_1', '2', 'Creation of aggregate work', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_388_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_388_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '388', 'a', 'Time period of creation term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 490 file: www.loc.gov/marc/bibliographic/concise/bd490.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_490_ind_1', BTRIM($label$

First - Series tracing policy

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_490_ind_1', '0', 'Series not traced', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_490_ind_1', '1', 'Series traced', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_490_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_490_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '490', 'a', 'Series statement  (R)
Series title that may also contain a statement
                     						of responsibility or other title information.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 500 file: www.loc.gov/marc/bibliographic/concise/bd500.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_500_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_500_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_500_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_500_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '500', 'a', 'General note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 501 file: www.loc.gov/marc/bibliographic/concise/bd501.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_501_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_501_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_501_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_501_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '501', 'a', 'With note  (NR)
Entire text of the note, including the introductory phrase (e.g., With:,
                     On reel with:, Issued with, etc.).','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 502 file: www.loc.gov/marc/bibliographic/concise/bd502.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_502_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_502_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_502_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_502_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '502', 'a', 'Dissertation note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 505 file: www.loc.gov/marc/bibliographic/concise/bd505.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_505_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_505_ind_1', '0', 'Contents', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_505_ind_1', '1', 'Incomplete contents', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_505_ind_1', '2', 'Partial contents', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_505_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_505_ind_2', BTRIM($label$

Second - Level of content designation

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_505_ind_2', '#', 'Basic', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_505_ind_2', '0', 'Enhanced', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '505', 'a', 'Formatted contents note  (NR)
Format of the note is determined by the relevant cataloging rules.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 507 file: www.loc.gov/marc/bibliographic/concise/bd507.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_507_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_507_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_507_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_507_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '507', 'a', 'Representative fraction of scale note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 508 file: www.loc.gov/marc/bibliographic/concise/bd508.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_508_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_508_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_508_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_508_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '508', 'a', 'Creation/production credits note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 510 file: www.loc.gov/marc/bibliographic/concise/bd510.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_510_ind_1', BTRIM($label$

First - Coverage/location in source

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_510_ind_1', '0', 'Coverage unknown', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_510_ind_1', '1', 'Coverage complete', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_510_ind_1', '2', 'Coverage is selective', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_510_ind_1', '3', 'Location in source not given', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_510_ind_1', '4', 'Location in source given', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_510_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_510_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '510', 'a', 'Name of source  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 515 file: www.loc.gov/marc/bibliographic/concise/bd515.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_515_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_515_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_515_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_515_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '515', 'a', 'Numbering peculiarities note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 518 file: www.loc.gov/marc/bibliographic/concise/bd518.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_518_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_518_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_518_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_518_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '518', 'a', 'Date/time and place of an event note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 520 file: www.loc.gov/marc/bibliographic/concise/bd520.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_520_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '#', 'Summary', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '0', 'Subject', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '1', 'Review', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '2', 'Scope and content', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '3', 'Abstract', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '4', 'Content advice', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_520_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_520_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '520', 'a', 'Summary, etc.  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 533 file: www.loc.gov/marc/bibliographic/concise/bd533.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_533_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_533_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_533_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_533_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '533', 'a', 'Type of reproduction  (NR)
Introductory phrase that identifies the type of reproduction being described.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 546 file: www.loc.gov/marc/bibliographic/concise/bd546.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_546_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_546_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_546_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_546_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '546', 'a', 'Language note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 550 file: www.loc.gov/marc/bibliographic/concise/bd550.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_550_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_550_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_550_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_550_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '550', 'a', 'Issuing body note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 555 file: www.loc.gov/marc/bibliographic/concise/bd555.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_555_ind_1', BTRIM($label$

First - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_555_ind_1', '#', 'Indexes
                  Used to generate the display constant Indexes:.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_555_ind_1', '0', 'Finding aids
                  Used to generate the display constant Finding aids:.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_555_ind_1', '8', 'No display constant generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_555_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_555_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '555', 'a', 'Cumulative index/finding aids note  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 583 file: www.loc.gov/marc/bibliographic/concise/bd583.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_583_ind_1', BTRIM($label$

First - Privacy

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_583_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_583_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_583_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_583_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_583_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '583', 'a', 'Action  (NR)
Standardized terminology descriptive of the action.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 600 file: www.loc.gov/marc/bibliographic/concise/bd600.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_600_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_600_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_600_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '600', 'a', 'Personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 610 file: www.loc.gov/marc/bibliographic/concise/bd610.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_610_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_610_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_610_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '610', 'a', 'Corporate name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 611 file: www.loc.gov/marc/bibliographic/concise/bd611.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_611_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_611_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_611_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '611', 'a', 'Meeting name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 630 file: www.loc.gov/marc/bibliographic/concise/bd630.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_630_ind_1', BTRIM($label$

First - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_1', '9', 'Number of nonfiling characters', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_630_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_630_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '630', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 648 file: www.loc.gov/marc/bibliographic/concise/bd648.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_648_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_648_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_648_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '648', 'a', 'Chronological term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 650 file: www.loc.gov/marc/bibliographic/concise/bd650.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_650_ind_1', BTRIM($label$

First - Level of subject

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_1', '0', 'No level specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_1', '1', 'Primary', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_1', '2', 'Secondary', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_650_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_650_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '650', 'a', 'Topical term or geographic name entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 651 file: www.loc.gov/marc/bibliographic/concise/bd651.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_651_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_651_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_651_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '651', 'a', 'Geographic name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 655 file: www.loc.gov/marc/bibliographic/concise/bd655.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_655_ind_1', BTRIM($label$

First - Type of heading

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_1', '#', 'Basic', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_1', '0', 'Faceted', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_655_ind_2', BTRIM($label$

Second - Thesaurus

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '0', 'Library of Congress Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '1', 'Library of Congress Children''s and Young Adults'' Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '2', 'Medical Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '3', 'National Agricultural Library subject authority file', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '4', 'Source not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '5', 'Canadian Subject Headings', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '6', 'Répertoire de vedettes-matière', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_655_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '655', 'a', 'Genre/form data or focus term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 700 file: www.loc.gov/marc/bibliographic/concise/bd700.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_700_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_700_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_700_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_700_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_700_ind_2', BTRIM($label$

Second - Type of added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_700_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_700_ind_2', '2', 'Analytical entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '700', 'a', 'Personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 710 file: www.loc.gov/marc/bibliographic/concise/bd710.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_710_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_710_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_710_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_710_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_710_ind_2', BTRIM($label$

Second - Type of added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_710_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_710_ind_2', '2', 'Analytical entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '710', 'a', 'Corporate name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 711 file: www.loc.gov/marc/bibliographic/concise/bd711.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_711_ind_1', BTRIM($label$

First - Type of meeting name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_711_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_711_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_711_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_711_ind_2', BTRIM($label$

Second - Type of added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_711_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_711_ind_2', '2', 'Analytical entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '711', 'a', 'Meeting name or jurisdiction name as entry element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 751 file: www.loc.gov/marc/bibliographic/concise/bd751.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_751_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_751_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_751_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_751_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '751', 'a', 'Geographic name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 760 file: www.loc.gov/marc/bibliographic/concise/bd760.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_760_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_760_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_760_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_760_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_760_ind_2', '#', 'Main series', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_760_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '760', 'a', 'Main entry heading  (NR)
Main entry heading from the 100 (Main Entry Personal Name), 110 (Main Entry Corporate
                     						Name) or 111 (Main Entry Meeting Name) field of the related record.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 762 file: www.loc.gov/marc/bibliographic/concise/bd762.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_762_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_762_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_762_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_762_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_762_ind_2', '#', 'Has subseries', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_762_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '762', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 765 file: www.loc.gov/marc/bibliographic/concise/bd765.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_765_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_765_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_765_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_765_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_765_ind_2', '#', 'Translation of', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_765_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '765', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 767 file: www.loc.gov/marc/bibliographic/concise/bd767.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_767_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_767_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_767_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_767_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_767_ind_2', '#', 'Translated as', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_767_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '767', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 770 file: www.loc.gov/marc/bibliographic/concise/bd770.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_770_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_770_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_770_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_770_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_770_ind_2', '#', 'Has supplement', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_770_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '770', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 772 file: www.loc.gov/marc/bibliographic/concise/bd772.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_772_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_772_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_772_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_772_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_772_ind_2', '#', 'Supplement to', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_772_ind_2', '0', 'Parent', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_772_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '772', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 773 file: www.loc.gov/marc/bibliographic/concise/bd773.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_773_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_773_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_773_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_773_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_773_ind_2', '#', 'In', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_773_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '773', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 774 file: www.loc.gov/marc/bibliographic/concise/bd774.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_774_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_774_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_774_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_774_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_774_ind_2', '#', 'Constituent unit', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_774_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '774', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 775 file: www.loc.gov/marc/bibliographic/concise/bd775.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_775_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_775_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_775_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_775_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_775_ind_2', '#', 'Other edition available', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_775_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '775', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 776 file: www.loc.gov/marc/bibliographic/concise/bd776.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_776_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_776_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_776_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_776_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_776_ind_2', '#', 'Available in another form', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_776_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '776', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 777 file: www.loc.gov/marc/bibliographic/concise/bd777.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_777_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_777_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_777_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_777_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_777_ind_2', '#', 'Issued with', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_777_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '777', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 780 file: www.loc.gov/marc/bibliographic/concise/bd780.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_780_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_780_ind_2', BTRIM($label$

Second - Type of relationship

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '0', 'Continues', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '1', 'Continues in part', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '2', 'Supersedes', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '3', 'Supersedes in part', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '4', 'Formed by the union of ... and ...', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '5', 'Absorbed', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '6', 'Absorbed in part', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_780_ind_2', '7', 'Separated from', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '780', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 785 file: www.loc.gov/marc/bibliographic/concise/bd785.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_785_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_785_ind_2', BTRIM($label$

Second - Type of relationship

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '0', 'Continued by', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '1', 'Continued in part by', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '2', 'Superseded by', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '3', 'Superseded in part by', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '4', 'Absorbed by', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '5', 'Absorbed in part by', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '6', 'Split into ... and ...', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '7', 'Merged with ... to form ...', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_785_ind_2', '8', 'Changed back to', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '785', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 786 file: www.loc.gov/marc/bibliographic/concise/bd786.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_786_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_786_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_786_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_786_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_786_ind_2', '#', 'Data source', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_786_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '786', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 787 file: www.loc.gov/marc/bibliographic/concise/bd787.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_787_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_787_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_787_ind_1', '1', 'Do not display note
                  Textual note is contained in field 580 (Linking Entry Complexity Note).', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_787_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_787_ind_2', '#', 'Related item', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_787_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '787', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 788 file: www.loc.gov/marc/bibliographic/concise/bd788.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_788_ind_1', BTRIM($label$

First - Note controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_788_ind_1', '0', 'Display note', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_788_ind_1', '1', 'Do not display note', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_788_ind_2', BTRIM($label$

Second - Display constant controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_788_ind_2', '#', 'Parallel description in another language of cataloging', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_788_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '788', 'a', 'Main entry heading  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 800 file: www.loc.gov/marc/bibliographic/concise/bd800.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_800_ind_1', BTRIM($label$

First - Type of personal name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_800_ind_1', '0', 'Forename', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_800_ind_1', '1', 'Surname', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_800_ind_1', '3', 'Family name', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_800_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_800_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '800', 'a', 'Personal name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 810 file: www.loc.gov/marc/bibliographic/concise/bd810.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_810_ind_1', BTRIM($label$

First - Type of corporate name entry element

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_810_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_810_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_810_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_810_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_810_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '810', 'a', 'Corporate name or jurisdiction name as entry
                  					element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 811 file: www.loc.gov/marc/bibliographic/concise/bd811.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_811_ind_1', BTRIM($label$

First - Type of meeting name entry element
                   
                  See the description of the first indicator
                           						under field
                              					111.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_811_ind_1', '0', 'Inverted name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_811_ind_1', '1', 'Jurisdiction name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_811_ind_1', '2', 'Name in direct order', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_811_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_811_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '811', 'a', 'Meeting name or jurisdiction name as entry
                  					element  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 830 file: www.loc.gov/marc/bibliographic/concise/bd830.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_830_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_830_ind_2', BTRIM($label$

Second - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '0', 'No nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_830_ind_2', '9', 'Number of nonfiling characters', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '830', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 046 file: www.loc.gov/marc/authority/concise/ad046.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_046_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_046_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_046_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_046_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '046', 'f', 'Birth date  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 082 file: www.loc.gov/marc/authority/concise/ad082.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_082_ind_1', BTRIM($label$

First - Type of edition

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_082_ind_1', '0', 'Full', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_082_ind_1', '1', 'Abridged', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_082_ind_1', '7', 'Other edition specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_082_ind_2', BTRIM($label$

Second - Source of call number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_082_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_082_ind_2', '0', 'Assigned by LC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_082_ind_2', '4', 'Assigned by agency other than LC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '082', 'a', 'Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 083 file: www.loc.gov/marc/authority/concise/ad083.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_083_ind_1', BTRIM($label$

First - Type of edition

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_083_ind_1', '0', 'Full', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_083_ind_1', '1', 'Abridged', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_083_ind_1', '7', 'Other edition specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_083_ind_2', BTRIM($label$

Second - Source of classification number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_083_ind_2', '0', 'Assigned by LC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_083_ind_2', '4', 'Assigned by agency other than LC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '083', 'a', 'Classification number element-single number or
                  					beginning number of span  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008s.html

        UPDATE config.record_attr_definition
        SET description = 'Frequency'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Regularity'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 19 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 20 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of continuing resource'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 21 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of original item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 22 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 23 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Nature of entire work'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 24 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Nature of contents'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 25 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Government publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 28 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Conference publication'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 29 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 30 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Original alphabet or script of title'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 33 AND rec_type IN ('SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Entry convention'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 34 AND rec_type IN ('SER') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 18, '#', 'No determinable frequency', 'Used when the frequency is known to be
                           							intentionally irregular.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'a', 'Annual', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'b', 'Bimonthly', 'Includes publications whose frequency is 6,
                           							7, or 8 numbers a year.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'c', 'Semiweekly', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'd', 'Daily', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'e', 'Biweekly', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'f', 'Semiannual', 'Includes publications whose frequency is 2
                           							numbers a year.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'g', 'Biennial', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'h', 'Triennial', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'i', 'Three times a week', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'j', 'Three times a month', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'k', 'Continuously updated', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'm', 'Monthly', 'Includes publications whose frequency is 9,
                           							10, 11, or 12 numbers a year.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'q', 'Quarterly', 'Includes publications whose frequency is 4
                           							numbers a year.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 's', 'Semimonthly', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 't', 'Three times a year', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'w', 'Weekly', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 19, 'n', 'Normalized irregular', 'Predictable irregularity pattern.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 19, 'r', 'Regular', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 19, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 19, 'x', 'Completely irregular', 'Used 1) when the frequency is known to be
                           							intentionally irregular (008/18 is coded as
                           							#); or 2) when the frequency in field 310 is
                           							expressed as numbers per year.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 19, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, '#', 'None of the following', 'Also used for yearbooks and annual
                           						reports.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'd', 'Updating database', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'g', 'Magazine', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'h', 'Blog', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'j', 'Journal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'l', 'Updating loose-leaf', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'm', 'Monographic series', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'n', 'Newspaper', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'p', 'Periodical', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'r', 'Repository', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 's', 'Newsletter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 't', 'Directory', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'w', 'Updating Web site', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '#', 'None of the following', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'a', 'Microfilm', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'b', 'Microfiche', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'c', 'Microopaque', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'd', 'Large print', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'e', 'Newspaper format', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'f', 'Braille', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 's', 'Electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '#', 'None of the following', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'a', 'Microfilm', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'b', 'Microfiche', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'c', 'Microopaque', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'd', 'Large print', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'f', 'Braille', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'r', 'Regular print reproduction', 'Eye-readable print, such as a photocopy.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 's', 'Electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '#', 'Not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'a', 'Abstracts/summaries', 'Abstracts or summaries of other
                           							publications.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'b', 'Bibliographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'c', 'Catalogs', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'd', 'Dictionaries', 'Also includes glossaries or gazetteers.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'e', 'Encyclopedias', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'f', 'Handbooks', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'g', 'Legal articles', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'h', 'Biography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'i', 'Indexes', 'Index to bibliographical material other than
                           							itself (e.g., an indexing journal).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'k', 'Discographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'l', 'Legislation', 'Full or partial texts of enactments of
                           							legislative bodies or texts of rules and
                           							regulations issued by executive or
                           							administrative agencies.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'm', 'Theses', 'Thesis, dissertation, or work identified as
                           							having been created to satisfy the
                           							requirements for an academic certification or
                           							degree.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'n', 'Surveys of literature in a subject area', 'Authored surveys that summarize what has been
                           							published about a subject
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'o', 'Reviews', 'Critical reviews of published or performed
                           							works (e.g., books, films, sound recordings,
                           							theater, etc.).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'p', 'Programmed texts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'q', 'Filmographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'r', 'Directories', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 's', 'Statistics', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 't', 'Technical reports', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'u', 'Standards/specifications', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'v', 'Legal cases and case notes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'w', 'Law reports and digests', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'y', 'Yearbooks', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'z', 'Treaties', 'Treaties or accords negotiated between two or
                           							more parties to settle a disagreement,
                           							establish a relationship, grant rights,
                           						etc.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '5', 'Calendars', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '6', 'Comics/graphic novels', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, '#', 'Not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'a', 'Abstracts/summaries', 'Abstracts or summaries of
                           							other publications.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'b', 'Bibliographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'c', 'Catalogs', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'd', 'Dictionaries', 'Also used for a glossary or a gazetteer.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'e', 'Encyclopedias', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'f', 'Handbooks', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'g', 'Legal articles', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'h', 'Biography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'i', 'Indexes', 'Index to bibliographical material other than
                           							itself (e.g., an indexing journal).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'k', 'Discographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'l', 'Legislation', 'Includes of full or partial texts of
                           							enactments of legislative bodies, published
                           							either in statute or in code form, or texts of
                           							rules and regulations issued by executive or
                           							administrative agencies.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'm', 'Theses', 'Thesis, dissertation, or work identified as
                           							having been created to satisfy the
                           							requirements for an academic certification or
                           							degree.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'n', 'Surveys of literature in a subject area', 'Includes authored surveys that summarize what
                           							has been published about a subject
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'o', 'Reviews', 'Includes critical reviews of published or
                           							performed works (e.g., books, films, sound
                           							recordings, theater, etc.).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'p', 'Programmed texts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'q', 'Filmographies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'r', 'Directories', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 's', 'Statistics', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 't', 'Technical reports', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'u', 'Standards/specifications', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'v', 'Legal cases and case notes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'w', 'Law reports and digests', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'y', 'Yearbooks', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, 'z', 'Treaties', 'Includes treaties or accords negotiated
                           							between two or more parties to settle a
                           							disagreement, establish a relationship, grant
                           							rights, etc.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, '5', 'Calendars', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, '6', 'Comics/graphic novels', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 25, '|||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '#', 'Not a government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'a', 'Autonomous or semi-autonomous component', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'c', 'Multilocal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'f', 'Federal/national', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'i', 'International intergovernmental', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'l', 'Local', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'm', 'Multistate', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'o', 'Government publication-level undetermined', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 's', 'State, provincial, territorial, dependent,
                        						etc.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'u', 'Unknown if item is government publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 28, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '0', 'Not a conference publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '1', 'Conference publication', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 29, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '#', 'No alphabet or script given/No key title', 'May relate to the title proper in field 245
                           							when no key title is present.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'a', 'Basic Roman', 'Includes no diacritics or special
                           						characters.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'b', 'Extended Roman', 'Includes diacritics and special
                           						characters.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'c', 'Cyrillic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'd', 'Japanese', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'e', 'Chinese', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'f', 'Arabic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'g', 'Greek', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'h', 'Hebrew', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'i', 'Thai', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'j', 'Devanagari', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'k', 'Korean', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'l', 'Tamil', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'z', 'Other', 'Also used when the title incorporates words
                           							from more than one alphabet or script.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '0', 'Successive entry', 'New bibliographic record is created each time
                           							1) a title changes, or 2) a corporate body
                           							used as main entry or uniform title qualifier,
                           							changes. The earlier or later title or
                           							author/title is recorded in a linking field
                           							(field 780/785) on each record.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '1', 'Latest entry', 'Cataloged under its latest (most recent)
                           							title or issuing body (pre-AACR cataloging
                           							rules). All former titles and/or issuing
                           							bodies are given in notes (fields 247, 547,
                           							and 550).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '2', 'Integrated entry', 'Cataloged under its latest (most recent)
                           							title and/or responsible person or corporate
                           							body. Used for integrating resources and
                           							electronic serials that do not retain their
                           							earlier titles.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 34, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 046 file: www.loc.gov/marc/bibliographic/concise/bd046.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_046_ind_1', BTRIM($label$

First - Type of entity

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_046_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_046_ind_1', '1', 'Work', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_046_ind_1', '2', 'Expression', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_046_ind_1', '3', 'Manifestation', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_046_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_046_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '046', 'a', 'Type of date code  (NR)
Codes
iInclusive dates of collectionkBulk of collectionmMultiple datesnUnknown datepDistribution/release/issue and production/recording session
                  datesqQuestionable daterReissue and original datessSingle known/probable datetPublication and copyright datesxIncorrect dates','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 334 file: www.loc.gov/marc/bibliographic/concise/bd334.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_334_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_334_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_334_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_334_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '334', 'a', 'Mode of issuance term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 353 file: www.loc.gov/marc/bibliographic/concise/bd353.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_353_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_353_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_353_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_353_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '353', 'a', 'Supplementary content term  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 852 file: www.loc.gov/marc/bibliographic/concise/bd852.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_852_ind_1', BTRIM($label$

First - Shelving scheme

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '0', 'Library of Congress classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '1', 'Dewey Decimal classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '2', 'National Library of Medicine classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '3', 'Superintendent of Documents classification', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '4', 'Shelving control number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '5', 'Title', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '6', 'Shelved separately', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '7', 'Source specified in subfield $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_1', '8', 'Other scheme', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_852_ind_2', BTRIM($label$

Second - Shelving order

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_2', '0', 'Not enumeration', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_2', '1', 'Primary enumeration', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_852_ind_2', '2', 'Alternative enumeration', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '852', 'a', 'Location  (NR)
Institution or person holding the item or from which access is given. Contains a
                     MARC code of the holding institution or the name of the institution or person.
See: MARC Code List for Organizations.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 361 file: www.loc.gov/marc/authority/concise/ad361.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_361_ind_1', BTRIM($label$

First - Privacy

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_361_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_361_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_361_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_361_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_361_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '361', 'a', 'Name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 368 file: www.loc.gov/marc/authority/concise/ad368.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_368_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_368_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_368_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_368_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '368', 'a', 'Type of corporate body  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 857 file: www.loc.gov/marc/authority/concise/ad857.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_857_ind_1', BTRIM($label$

First - Access method

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_1', '1', 'FTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_1', '4', 'HTTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_1', '7', 'Method specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_857_ind_2', BTRIM($label$

Second - Relationship

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '0', 'Resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '1', 'Version of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '2', 'Related resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '3', 'Component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '4', 'Version of component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_857_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '857', 'b', 'Name of archiving agency  (NR)
Agency responsible for the Web archive or digital archive repository.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008a.html

        UPDATE config.record_attr_definition
        SET description = 'Date entered on file'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 0 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of date/Publication status'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 6 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Date 1'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 7 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Date 2'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 11 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Place of publication, production, or execution'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 15 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Language'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 35 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Modified record'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 38 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Cataloging source'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 39 AND rec_type IN ('COM', 'SCO', 'REC', 'MIX', 'MAP', 'VIS', 'BKS', 'SER') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 6, 'b', 'No dates given; B.C. date involved', 'Each character position in fields 008/07-10 and 008/11-14 contains a blank.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'c', 'Continuing resource currently published', '008/07-10 contain the beginning date of publication; 008/11-14 contain the
                           characters 9999.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'd', 'Continuing resource ceased publication', '008/07-10 contain the beginning date of publication; 008/11-14 contain the date
                           the item ceased to be published.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'e', 'Detailed date', '008/07-10 contain the year and 008/11-14 contain the month and day formatted
                           mmdd.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'i', 'Inclusive dates of collection', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'k', 'Range of years of bulk of collection', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'm', 'Multiple dates', '008/07-10 usually contain the initial (or beginning) date and 008/11-14 the
                           terminal (or ending) date.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'n', 'Dates unknown', 'Dates appropriate for 008/07-10 and 008/11-14 are unknown, (e.g., when no dates
                           are given in field 260).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'p', 'Date of distribution/release/issue and production/recording session when
                        different', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'q', 'Questionable date', 'Earliest possible date is given in 008/07-10; latest possible date in
                           008/11-14.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'r', 'Reprint/reissue date and original date', '008/07-10 contain the date of reproduction or reissue; 008/11-14 contain the
                           date of the original, if known. 008/11-14 contain code u ("uuuu"), if
                           unknown.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 's', 'Single known date/probable date', '008/07-10 contain the date; 008/11-14 contain blanks (####).', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 't', 'Publication date and copyright date', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, 'u', 'Continuing resource status unknown', '008/07-10 contain a beginning date of publication; 008/11-14 contain the
                           characters uuuu since no ending date is known.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 6, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 7, '1-9', 'Date digit', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 7, '#', 'Date element is not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 7, 'u', 'Date element is totally or partially unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 7, '||||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 11, '1-9', 'Date digit', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 11, '#', 'Date element is not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 11, 'u', 'Date element is totally or partially unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 11, '||||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, '#', 'Not modified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, 'd', 'Dashed-on information omitted', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, 'o', 'Completely romanized/printed cards romanized', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, 'r', 'Completely romanized/printed cards in script', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, 's', 'Shortened', 'Some of the data was omitted because the data exceeded the maximum length
                           allowed by the system used to create or process it.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, 'x', 'Missing characters', 'Record contained characters that could not be converted to machine-readable
                           form (e.g., incidental nonroman characters on predominantly roman alphabet
                           records, mathematical symbols, etc.).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 38, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 39, '#', 'National bibliographic agency', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 39, 'c', 'Cooperative cataloging program', 'Creator of the cataloging data is a participant (other than a national
                           bibliographic agency) in a cooperative cataloging program.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 39, 'd', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 39, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 39, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 041 file: www.loc.gov/marc/bibliographic/concise/bd041.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_041_ind_1', BTRIM($label$

First - Translation indication

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_041_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_041_ind_1', '0', 'Item not a translation/does not include a
                  						translation', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_041_ind_1', '1', 'Item is or includes a translation', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_041_ind_2', BTRIM($label$

Second - Source of code

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_041_ind_2', '#', 'MARC language code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_041_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '041', 'a', 'Language code of text/sound track or separate
                  					title  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 361 file: www.loc.gov/marc/bibliographic/concise/bd361.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_361_ind_1', BTRIM($label$

First - Privacy

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_361_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_361_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_361_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_361_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_361_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '361', 'a', 'Name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 561 file: www.loc.gov/marc/bibliographic/concise/bd561.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_561_ind_1', BTRIM($label$

First - Privacy

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_561_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_561_ind_1', '0', 'Private', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_561_ind_1', '1', 'Not private', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_561_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_561_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '561', 'a', 'History  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 653 file: www.loc.gov/marc/bibliographic/concise/bd653.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_653_ind_1', BTRIM($label$

First - Level of index term

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_1', '0', 'No level specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_1', '1', 'Primary', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_1', '2', 'Secondary', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_653_ind_2', BTRIM($label$

Second - Type of term or name

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '0', 'Topical term', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '1', 'Personal name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '2', 'Corporate name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '3', 'Meeting name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '4', 'Chronological term', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '5', 'Geographic name', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_653_ind_2', '6', 'Genre/form term', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '653', 'a', 'Uncontrolled term  (R)
Index term is from an uncontrolled subject heading system or thesaurus.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 658 file: www.loc.gov/marc/bibliographic/concise/bd658.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_658_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_658_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_658_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_658_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '658', 'a', 'Main curriculum objective  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 720 file: www.loc.gov/marc/bibliographic/concise/bd720.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_720_ind_1', BTRIM($label$

First - Type of name

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_720_ind_1', '#', 'Not specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_720_ind_1', '1', 'Personal', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_720_ind_1', '2', 'Other', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_720_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_720_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '720', 'a', 'Name  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 857 file: www.loc.gov/marc/bibliographic/concise/bd857.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_857_ind_1', BTRIM($label$

First - Access method

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_1', '1', 'FTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_1', '4', 'HTTP', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_1', '7', 'Method specified in subfield $2', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_857_ind_2', BTRIM($label$

Second - Relationship

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '0', 'Resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '1', 'Version of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '2', 'Related resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '3', 'Component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '4', 'Version of component part(s) of resource', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_857_ind_2', '8', 'No display constant generated', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '857', 'b', 'Name of archiving agency  (NR)
Agency responsible for the Web archive or digital archive repository.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 270 file: www.loc.gov/marc/bibliographic/concise/bd270.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_270_ind_1', BTRIM($label$

First - Level

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_270_ind_1', '#', 'No level specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_270_ind_1', '1', 'Primary', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_270_ind_1', '2', 'Secondary', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_270_ind_2', BTRIM($label$

Second - Type of address

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_270_ind_2', '#', 'No type specified', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_270_ind_2', '0', 'Mailing', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_270_ind_2', '7', 'Type specified in subfield $i', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '270', 'a', 'Address  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 506 file: www.loc.gov/marc/bibliographic/concise/bd506.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_506_ind_1', BTRIM($label$

First - Restriction

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_506_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_506_ind_1', '0', 'No restrictions', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_506_ind_1', '1', 'Restrictions apply', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_506_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_506_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '506', 'a', 'Terms governing access  (NR)
Legal, physical, or procedural restrictions imposed on individuals wishing to
                     see the described materials.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 540 file: www.loc.gov/marc/bibliographic/concise/bd540.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_540_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_540_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_540_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_540_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '540', 'a', 'Terms governing use and reproduction  (NR)
Usually mean the text of a legal or official statement of restrictions.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 730 file: www.loc.gov/marc/bibliographic/concise/bd730.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_730_ind_1', BTRIM($label$

First - Nonfiling characters

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '0', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '1', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '2', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '3', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '4', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '5', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '6', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '7', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '8', 'Number of nonfiling characters', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_1', '9', 'Number of nonfiling characters', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_730_ind_2', BTRIM($label$

Second - Type of added entry

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_730_ind_2', '2', 'Analytical entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '730', 'a', 'Uniform title  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 758 file: www.loc.gov/marc/bibliographic/concise/bd758.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_758_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_758_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_758_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_758_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '758', 'a', 'Label  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 883 file: www.loc.gov/marc/authority/concise/ad883.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_883_ind_1', BTRIM($label$

First - Method of assignment

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_883_ind_1', '#', 'No information provided/not applicable', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_883_ind_1', '0', 'Fully machine-generated', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_883_ind_1', '1', 'Partially machine-generated', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_883_ind_1', '2', 'Not machine-generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_883_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_883_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '883', 'a', 'Creation process  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 310 file: www.loc.gov/marc/bibliographic/concise/bd310.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_310_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_310_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_310_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_310_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '310', 'a', 'Current publication frequency  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 321 file: www.loc.gov/marc/bibliographic/concise/bd321.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_321_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_321_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_321_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_321_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '321', 'a', 'Former publication frequency  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 883 file: www.loc.gov/marc/bibliographic/concise/bd883.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_883_ind_1', BTRIM($label$

First - Method of assignment

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_883_ind_1', '#', 'No information provided/not applicable', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_883_ind_1', '0', 'Fully machine-generated', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_883_ind_1', '1', 'Partially machine-generated', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_883_ind_1', '2', 'Not machine-generated', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_883_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_883_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '883', 'a', 'Creation process  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 008 file: www.loc.gov/marc/bibliographic/concise/bd008m.html

        UPDATE config.record_attr_definition
        SET description = 'Form of composition'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 18 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Format of music'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 20 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Music parts'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 21 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Target audience'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 22 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Form of item'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 23 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Accompanying matter'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 24 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Literary text for sound recordings'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 30 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 32 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Transposition and arrangement'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 33 AND rec_type IN ('SCO') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '008' AND start_pos = 34 AND rec_type IN ('SCO') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('008', 18, 'an', 'Anthems', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'bd', 'Ballads', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'bg', 'Bluegrass music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'bl', 'Blues', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'bt', 'Ballets', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ca', 'Chaconnes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cb', 'Chants, Other religions', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cc', 'Chant, Christian', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cg', 'Concerti grossi', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ch', 'Chorales', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cl', 'Chorale preludes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cn', 'Canons and rounds', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'co', 'Concertos', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cp', 'Chansons, polyphonic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cr', 'Carols', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cs', 'Chance compositions', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ct', 'Cantatas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cy', 'Country music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'cz', 'Canzonas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'df', 'Dance forms', 'Includes music for individual dances except for mazurkas, minuets, pavans,
                           							polonaises, and waltzes, which have separate codes.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'dv', 'Divertimentos, serenades, cassations, divertissements, and notturni', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'fg', 'Fugues', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'fl', 'Flamenco', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'fm', 'Folk music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ft', 'Fantasias', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'gm', 'Gospel music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'hy', 'Hymns', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'jz', 'Jazz', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mc', 'Musical revues and comedies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'md', 'Madrigals', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mi', 'Minuets', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mo', 'Motets', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mp', 'Motion picture music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mr', 'Marches', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ms', 'Masses', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mu', 'Multiple forms', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'mz', 'Mazurkas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'nc', 'Nocturnes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'nn', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'op', 'Operas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'or', 'Oratorios', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ov', 'Overtures', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'pg', 'Program music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'pm', 'Passion music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'po', 'Polonaises', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'pp', 'Popular music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'pr', 'Preludes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ps', 'Passacaglias', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'pt', 'Part-songs', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'pv', 'Pavans', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'rc', 'Rock music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'rd', 'Rondos', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'rg', 'Ragtime music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ri', 'Ricercars', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'rp', 'Rhapsodies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'rq', 'Requiems', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'sd', 'Square dance music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'sg', 'Songs', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'sn', 'Sonatas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'sp', 'Symphonic poems', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'st', 'Studies and exercises', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'su', 'Suites', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'sy', 'Symphonies', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'tc', 'Toccatas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'tl', 'Teatro lirico', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'ts', 'Trio-sonatas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'uu', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'vi', 'Villancicos', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'vr', 'Variations', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'wz', 'Waltzes', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'za', 'Zarzuelas', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, 'zz', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 18, '||', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'a', 'Full score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'b', 'Miniature or study score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'c', 'Accompaniment reduced for keyboard', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'd', 'Voice score with accompaniment omitted', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'e', 'Condensed score or piano-conductor score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'g', 'Close score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'h', 'Chorus score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'i', 'Condensed score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'j', 'Performer-conductor part', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'k', 'Vocal score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'l', 'Score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'm', 'Multiple score formats', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'p', 'Piano score', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 20, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, '#', 'No parts in hand or not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'd', 'Instrumental and vocal parts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'e', 'Instrumental parts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'f', 'Vocal parts', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 21, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '#', 'Unknown or unspecified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'a', 'Preschool', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'b', 'Primary', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'c', 'Pre-adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'd', 'Adolescent', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'e', 'Adult', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'f', 'Specialized', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'g', 'General', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, 'j', 'Juvenile', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 22, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '#', 'None of the following', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'a', 'Microfilm', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'b', 'Microfiche', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'c', 'Microopaque', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'd', 'Large print', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'f', 'Braille', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'o', 'Online', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'q', 'Direct electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 'r', 'Regular print reproduction', 'Eye-readable print, such as a photocopy.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, 's', 'Electronic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 23, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '#', 'No accompanying matter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'a', 'Discography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'b', 'Bibliography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'c', 'Thematic index', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'd', 'Libretto or text', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'e', 'Biography of composer or author', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'f', 'Biography of performer or history of ensemble', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'g', 'Technical and/or historical information on instruments', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'h', 'Technical information on music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'i', 'Historical information', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'k', 'Ethnological information', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'r', 'Instructional materials', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 's', 'Music', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 24, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, '#', 'Item is a music sound recording', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'a', 'Autobiography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'b', 'Biography', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'c', 'Conference proceedings', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'd', 'Drama', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'e', 'Essays', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'f', 'Fiction', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'g', 'Reporting', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'h', 'History', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'i', 'Instruction', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'j', 'Language instruction', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'k', 'Comedy', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'l', 'Lectures, speeches', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'm', 'Memoirs', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'o', 'Folktales', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'p', 'Poetry', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'r', 'Rehearsals', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 's', 'Sounds', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 't', 'Interviews', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 30, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '#', 'Not arrangement or transposition or not specified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'a', 'Transposition', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'b', 'Arrangement', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'c', 'Both transposed and arranged', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('008', 33, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 028 file: www.loc.gov/marc/bibliographic/concise/bd028.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_028_ind_1', BTRIM($label$

First - Type of number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '0', 'Issue number
                  Number used to identify the issue designation, or serial identification,
                           assigned by a publisher to a specific sound recording, side of a sound
                           recording, or performance on a sound recording or to a group of sound
                           recordings issued as a set.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '1', 'Matrix number
                  Master from which the specific recording was pressed.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '2', 'Plate number
                  Assigned by a publisher to a specific music publication.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '3', 'Other music publisher number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '4', 'Video recording publisher number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '5', 'Other publisher number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_1', '6', 'Distributor number', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_028_ind_2', BTRIM($label$

Second - Note/added entry controller

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_2', '0', 'No note, no added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_2', '1', 'Note, added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_2', '2', 'Note, no added entry', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_028_ind_2', '3', 'No note, added entry', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '028', 'a', 'Publisher or distributor number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 037 file: www.loc.gov/marc/bibliographic/concise/bd037.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_037_ind_1', BTRIM($label$

First - Source of acquisition sequence

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_037_ind_1', '#', 'Not applicable/No information provided/Earliest', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_037_ind_1', '2', 'Intervening', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_037_ind_1', '3', 'Current/Latest', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_037_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_037_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '037', 'a', 'Stock number  (NR)
Numbers such as distributor, publisher, or vendor numbers for resources
                        other than music, music-related, or audiovisual materials are also recorded in
                        this subfield.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: lea file: www.loc.gov/marc/bibliographic/concise/bdleader.html

        UPDATE config.record_attr_definition
        SET description = 'Record length'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 0 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Record status'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 5 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of record'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 6 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Bibliographic level'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 7 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Type of control'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 8 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Character coding scheme'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 9 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Indicator count'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 10 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Subfield code count'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 11 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Base address of data'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 12 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Encoding level'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 17 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Descriptive cataloging form'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 18 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Multipart resource record level'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 19 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Length of the length-of-field portion'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 20 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Length of the starting-character-position portion'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 21 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Length of the implementation-defined portion'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 22 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = 'ldr' AND start_pos = 23 AND rec_type NOT IN ('AUT') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('ldr', 5, 'a', 'Increase in encoding level', 'Encoding level (Leader/17) of the record has been changed to a higher encoding
                           level.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 5, 'c', 'Corrected or revised', 'Addition/change other than in the Encoding level code has been made to the
                           record.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 5, 'd', 'Deleted', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 5, 'n', 'New', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 5, 'p', 'Increase in encoding level from prepublication', 'Prepublication record has had a change in cataloging level resulting from the
                           availability of the published item.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'a', 'Language material', 'Includes microforms and electronic resources that are basically textual in
                           nature, whether they are reproductions from print or originally produced.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'c', 'Notated music', 'Used for printed, microform, or electronic notated music.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'd', 'Manuscript notated music', 'Used for manuscript notated music or a microform of manuscript music.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'e', 'Cartographic material', 'Includes maps, atlases, globes, digital maps, and other cartographic items.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'f', 'Manuscript cartographic material', 'Used for manuscript cartographic material or a microform of manuscript
                           cartographic material.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'g', 'Projected medium', 'Used for motion pictures, videorecordings (including digital video),
                           filmstrips, slide, transparencies or material specifically designed for
                           projection.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'i', 'Nonmusical sound recording', 'Used for a recording of nonmusical sounds (e.g., speech).', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'j', 'Musical sound recording', 'Used for a musical sound recording (e.g., phonodiscs, compact discs, or
                           cassette tapes.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'k', 'Two-dimensional nonprojectable graphic', 'Used for two-dimensional nonprojectable graphics such as, activity cards,
                           charts, collages, computer graphics, digital pictures, drawings, duplication
                           masters, flash cards, paintings, photo CDs, photomechanical reproductions,
                           photonegatives, photoprints, pictures, postcards, posters, prints, spirit
                           masters, study prints, technical drawings, transparency masters, and
                           reproductions of any of these.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'm', 'Computer file', 'Used for the following classes of electronic resources: computer software
                           (including programs, games, fonts), numeric data, computer-oriented multimedia,
                           online systems or services. For these classes of materials, if there is a
                           significant aspect that causes it to fall into another Leader/06 category, the
                           code for that significant aspect is used instead of code m (e.g., vector data
                           that is cartographic is not coded as numeric but as cartographic). Other
                           classes of electronic resources are coded for their most significant aspect
                           (e.g. language material, graphic, cartographic material, sound, music, moving
                           image). In case of doubt or if the most significant aspect cannot be
                           determined, consider the item a computer file.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'o', 'Kit', 'Used for a mixture of various components issued as a unit and intended
                           primarily for instructional purposes where no one item is the predominant
                           component of the kit.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'p', 'Mixed materials', 'Used when there are significant materials in two or more forms that are usually
                           related by virtue of their having been accumulated by or about a person or
                           body. Includes archival fonds and manuscript collections of mixed forms of
                           materials, such as text, photographs, and sound recordings.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 'r', 'Three-dimensional artifact or naturally occurring object', 'Includes man-made objects such as models, dioramas, games, puzzles,
                           simulations, sculptures and other three-dimensional art works, exhibits,
                           machines, clothing, toys, and stitchery. Also includes naturally occurring
                           objects such as, microscope specimens (or representations of them) and other
                           specimens mounted for viewing.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 6, 't', 'Manuscript language material', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 'a', 'Monographic component part', 'Monographic bibliographic unit that is physically attached to or contained in
                           another unit such that the retrieval of the component part is dependent on the
                           identification and location of the host item or container. Contains fields that
                           describe the component part and data that identify the host, field 773 (Host
                           Item Entry).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 'b', 'Serial component part', 'Serial bibliographic unit that is physically attached to or contained in
                           another unit such that the retrieval of the component part is dependent on the
                           identification and location of the host item or container. Contains fields that
                           describe the component part and data that identify the host, field 773 (Host
                           Item Entry).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 'c', 'Collection', 'Made-up multipart group of items that were not originally published,
                           distributed, or produced together. The record describes units defined by common
                           provenance or administrative convenience for which the record is intended as
                           the most comprehensive in the system.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 'd', 'Subunit', 'Part of collection, especially an archival unit described collectively
                           elsewhere in the system. Contains fields that describe the subunit and data
                           that identify the host item.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 'i', 'Integrating resource', 'Bibliographic resource that is added to or changed by means of updates that do
                           not remain discrete and are integrated into the whole. Examples include
                           updating loose-leafs and updating Web sites.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 'm', 'Monograph/Item', 'Item either complete in one part (e.g., a single monograph, a single map, a
                           single manuscript, etc.) or intended to be completed, in a finite number of
                           separate parts (e.g., a multivolume monograph, a sound recording with multiple
                           tracks, etc.).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 7, 's', 'Serial', 'Bibliographic item issued in successive parts bearing numerical or
                           chronological designations and intended to be continued indefinitely. Includes
                           periodicals; newspapers; annuals (reports, yearbooks, etc.); the journals,
                           memoirs, proceedings, transactions, etc., of societies; and numbered
                           monographic series, etc.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 8, 'a', 'Archival', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 9, '#', 'MARC-8', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 9, 'a', 'UCS/Unicode', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '#', 'Full level', 'Most complete MARC record created from information derived from an inspection
                           of the physical item.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '1', 'Full level, material not examined', 'Next most complete MARC record after the full level created from information
                           derived from an extant description of the item (e.g., a printed catalog card or
                           a description in an institutional guide) without reinspection of the physical
                           item. Used primarily in the retrospective conversion of records when all of the
                           information on the extant description is transcribed. Certain control field
                           coding and other data (e.g., field 043 (Geographic Area Code)) are based only
                           on explicit information in the description.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '2', 'Less-than-full level, material not examined', 'Less-than-full level record (i.e., a record that falls between minimal level
                           and full) created from an extant description of the material (e.g., a printed
                           catalog card) without reinspection of the physical item. Used primarily in the
                           retrospective conversion of records when all of the descriptive access points
                           but only a specified subset of other data elements are transcribed.
                           Authoritative headings may not be current.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '3', 'Abbreviated level', 'Brief record that does not meet minimal level cataloging specifications.
                           Headings in the records may reflect established forms to the extent that such
                           forms were available at the time the record was created.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '4', 'Core level', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '5', 'Partial (preliminary) level', 'Preliminary cataloging level record that is not considered final by the
                           creating agency (e.g., the headings may not reflect established forms; the
                           record may not meet national-level cataloging specifications).
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '7', 'Minimal level', 'Record that meets the U.S. National Level Bibliographic Record minimal level
                           cataloging specifications and is considered final by the creating agency.
                           Headings have been checked against an authority file and reflect established
                           forms to the extent that such forms were available at the time the minimal
                           level record was created. The U.S. requirements for minimal-level records can
                           be found in National Level and Minimal
                                 Level Record Requirements', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, '8', 'Prepublication level', 'Prepublication level record. Includes records created in cataloging in
                           publication programs.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, 'u', 'Unknown', 'Used by an agency receiving or sending data with a local code in Leader/17
                           cannot adequately determine the appropriate encoding level of the record. Code
                           u thus replaces the local code. Not used in newly input or updated records.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 17, 'z', 'Not applicable', 'Concept of encoding level does not apply to the record.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 18, '#', 'Non-ISBD', 'Descriptive portion of the record does not follow International Standard
                              Bibliographic Description (ISBD) cataloging and punctuation
                           provisions.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 18, 'a', 'AACR 2', 'Descriptive portion of the record is formulated according to the description and 
                           	punctuation provisions as incorporated into the Anglo-American Cataloging Rules, 
                           2nd Edition (AACR 2) and its manuals.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 18, 'c', 'ISBD punctuation omitted', 'Descriptive portion of the record contains the punctuation provisions of ISBD, 
                           				       except ISBD punctuation is not present at the end of a subfield.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 18, 'i', 'ISBD punctuation included', 'Descriptive portion of the record contains the punctuation provisions of ISBD.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 18, 'n', 'Non-ISBD punctuation omitted', 'Descriptive portion of the record does not follow International Standard Bibliographic 
                              Description (ISBD) cataloging and punctuation provisions, and punctuation is not 
                           present at the end of a subfield.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 18, 'u', 'Unknown', 'Institution receiving or sending data in Leader/18 cannot adequately determine
                           the appropriate descriptive cataloging form used in the record. May be used in
                           records converted from another metadata format.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 19, '#', 'Not specified or not applicable', 'The distinction between record levels is not specified or not applicable for
                           the type of resource. 
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 19, 'a', 'Set', 'Record is for a set consisting of multiple items.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 19, 'b', 'Part with independent title', 'The record is for a resource which is part of a set and has a title that allows it
                           to be independent of the set record. 
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('ldr', 19, 'c', 'Part with dependent title', 'The record is for a resource which is part of a set but has a title that makes it
                           dependent on the set record to understand its context.
                        ', 'biblio');
-- category: authority tag: 055 file: www.loc.gov/marc/authority/concise/ad055.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_055_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_055_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_055_ind_2', BTRIM($label$

Second - Source of call number

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_055_ind_2', '0', 'Assigned by LAC', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_055_ind_2', '4', 'Assigned by agency other than LAC', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '055', 'a', 'Classification number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 251 file: www.loc.gov/marc/bibliographic/concise/bd251.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_251_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_251_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_251_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_251_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '251', 'a', 'Version  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 341 file: www.loc.gov/marc/bibliographic/concise/bd341.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_341_ind_1', BTRIM($label$

First - Application

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_341_ind_1', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_341_ind_1', '0', 'Adaptive features to access primary content', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_341_ind_1', '1', 'Adaptive features to access secondary content', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_341_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_341_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '341', 'a', 'Content access mode  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 688 file: www.loc.gov/marc/bibliographic/concise/bd688.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_688_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_688_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_688_ind_2', BTRIM($label$

Second - Source of name, title, or term

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_688_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_688_ind_2', '7', 'Source specified in subfield $2', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '688', 'a', 'Name, title, or term  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007.html
-- category: biblio tag: 007 file: www.loc.gov/marc/bibliographic/concise/bd007s.html

        UPDATE config.record_attr_definition
        SET description = 'Category of material'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 0 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Specific material designation'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 1 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Undefined'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 2 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Speed'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 3 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Configuration of playback channels'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 4 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Groove width/groove pitch'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 5 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Dimensions'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 6 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Tape width'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 7 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Tape Configuration'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 8 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Kind of disc, cylinder or tape'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 9 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Kind of material'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 10 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Kind of cutting'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 11 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Special playback characteristics'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 12 AND rec_type NOT IN ('AUT') LIMIT 1);
        

        UPDATE config.record_attr_definition
        SET description = 'Original capture and storage technique'
        WHERE fixed_field = (SELECT fixed_field FROM config.marc21_ff_pos_map WHERE tag = '007' AND start_pos = 13 AND rec_type NOT IN ('AUT') LIMIT 1);
        
SELECT evergreen.insert_update_coded_value_map('007', 0, 's', 'Sound recording', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'b', 'Belt', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'd', 'Sound disc', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'e', 'Cylinder', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'g', 'Sound cartridge', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'i', 'Sound-track film', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'q', 'Roll', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'r', 'Remote', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 's', 'Sound cassette', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 't', 'Sound-tape reel', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'u', 'Unspecified', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'w', 'Wire recording', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 1, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'a', '16 rpm (discs)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'b', '33 1/3 rpm (discs)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'c', '45 rpm (discs)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'd', '78 rpm (discs)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'e', '8 rpm (discs)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'f', '1.4 m. per second (discs)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'h', '120 rpm (cylinders)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'i', '160 rpm (cylinders)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'k', '15/16 ips (tapes)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'l', '1 7/8 ips (tapes)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'm', '3 3/4 ips (tapes)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'o', '7 1/2 ips (tapes)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'p', '15 ips (tapes)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'r', '30 ips (tape)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 3, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'm', 'Monaural', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'q', 'Quadraphonic, multichannel, or surround', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 's', 'Stereophonic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 4, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'm', 'Microgroove/fine', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 's', 'Coarse/standard', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 5, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'a', '3 in. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'b', '5 in. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'c', '7 in. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'd', '10 in. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'e', '12 in. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'f', '16 in. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'g', '4 3/4 in. or 12 cm. diameter', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'j', '3 7/8 x 2 1/2 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'o', '5 1/4 x 3 7/8 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 's', '2 3/4 x 4 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 6, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'l', '1/8 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'm', '1/4 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'o', '1/2 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'p', '1 in.', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 7, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'a', 'Full (1) track', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'b', 'Half (2) track', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'c', 'Quarter (4) track', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'd', 'Eight track', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'e', 'Twelve track', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'f', 'Sixteen track', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 8, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'a', 'Master tape', 'Final tape production master that is used to make a disc master or a tape
                           duplication master.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'b', 'Tape duplication master', 'Sound tape produced from the master tape.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'd', 'Disc master (negative)', 'Negative disc master that is used for the preparation of the mother from which
                           more serviceable and longer lasting metal stampers can be made.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'i', 'Instantaneous (recorded on the spot)', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'm', 'Mass-produced', 'Includes discs or tapes issued as limited pressing or limited
                              issue for private distribution.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'r', 'Mother (positive)', 'Exact copy of the original disc recording pressed from the disc master. From
                           the metal mother a negative metal stamper is made to press
                           discs for distribution.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 's', 'Stamper (negative)', 'Negative metal part, produced from the mother in an electroplating
                           procedure, from which 500 to 750 discs may be pressed.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 't', 'Test pressing', 'Either one finished disc or one of a very limited pressing is made, designed to
                           be examined aurally before a decision is made to proceed with a pressing.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'u', 'Unknown', 'Type of disc, cylinder, or tape is not known.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 9, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'a', 'Lacquer coating', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'b', 'Cellulose nitrate', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'c', 'Acetate tape with ferrous oxide', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'g', 'Glass with lacquer', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'i', 'Aluminum with lacquer', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'l', 'Metal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'm', 'Plastic with metal', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'p', 'Plastic', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'r', 'Paper with lacquer or ferrous oxide', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 's', 'Shellac', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'w', 'Wax', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 10, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'h', 'Hill-and-dale cutting', 'Vertical cutting, with no lateral information intended for reproduction.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'l', 'Lateral or combined cutting', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'n', 'Not applicable', 'Compact audio discs are coded n as they are pitted rather than cut.', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 11, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'a', 'NAB standard', 'National Association of Broadcasters (NAB) standard was used for the
                           transcription of the recording and NAB playback equalization is required.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'b', 'CCIR standard', 'Comité consultatif de la radiodiffusion (CCIR) standard was used for the
                           transcription of the recording and CCIR playback equalization is required.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'c', 'Dolby-B encoded', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'd', 'dbx encoded', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'e', 'Digital recording', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'f', 'Dolby-A encoded', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'g', 'Dolby-C encoded', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'h', 'CX encoded', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'n', 'Not applicable', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'u', 'Unknown', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 12, '|', 'No attempt to code', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'a', 'Acoustical capture, analog direct storage', 'Recorded sound originally captured using an acoustical horn and 
                           diaphragm and stored directly on a surface such as a disc or 
                           cylinder. Most acoustical recordings date from the era beginning 
                           in 1877, when the first practical commercial recording machines 
                           were developed, until the mid-to-late 1920s, a transitional period 
                           marked by the release of the earliest electrical recordings in 1925.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'b', 'Electrical capture, analog direct storage', 'Recorded sound originally captured using microphones and other electrical 
                           equipment and stored directly on the surface of a disc. All recordings 
                           that were made with microphones and other electrical equipment used direct 
                           storage beginning with the earliest electrical recordings in 1925 through 
                           the late 1940s. More recent commercial recordings marked "direct to disc" 
                           or some equivalent phrase also used this technique. Also known as 
                           electromechanical recording.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'd', 'Electrical capture, digital storage', 'Recorded sound originally captured electrically and stored using digital 
                           techniques, which became available in the 1980s. Such recordings may be 
                           identified as "digitally recorded" or by use of a similar phrase on the 
                           label or package. However, designations such as "digital remastering" or 
                           "digital mixing" are post-capture and storage processes and are not meant 
                           to suggest that the original capture or storage techniques were digital.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'e', 'Electrical capture, analog electrical storage', 'Sound recordings which were captured using electrical techniques and 
                           stored as modulations and pulses on a magnetic surface. Most recordings 
                           made from the late 1940s until the transitional period from the early 
                           1980s through the early 1990s are analog electrical recordings.
                        ', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'u', 'Unknown capture and storage', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, 'z', 'Other', '', 'biblio');
SELECT evergreen.insert_update_coded_value_map('007', 13, '|', 'No attempt to code', '', 'biblio');
-- category: biblio tag: 034 file: www.loc.gov/marc/bibliographic/concise/bd034.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_034_ind_1', BTRIM($label$

First - Type of scale
                   
                  Specifies the type of scale information given.

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_034_ind_1', '0', 'Scale indeterminable/No scale recorded
                  Used when no representative fraction is given in field 255 
                           or no field 255 is present in the record.', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_034_ind_1', '1', 'Single scale', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_034_ind_1', '3', 'Range of scales', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_034_ind_2', BTRIM($label$

Second - Type of ring

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_034_ind_2', '#', 'Not applicable', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_034_ind_2', '0', 'Outer ring', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_034_ind_2', '1', 'Exclusion ring', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '034', 'a', 'Category of scale  (NR)
One-character alphabetic code indicating the type of scale of the item.
Used even when a specific scale is not recorded (first indicator position contains
                     value 0). For non-cartographic materials (i.e. images, graphic materials, 
                     textual materials, etc.) subfield $a is not used. The codes used in 
                  subfield $a are:

a - Linear scale
b - Angular scale
z - Other type of scale','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 344 file: www.loc.gov/marc/bibliographic/concise/bd344.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_344_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_344_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_344_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_344_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '344', 'a', 'Type of recording  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 260 file: www.loc.gov/marc/bibliographic/concise/bd260.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_260_ind_1', BTRIM($label$

First - Sequence of publishing statements

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_260_ind_1', '#', 'Not applicable/No information provided/Earliest available publisher', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_260_ind_1', '2', 'Intervening publisher', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_260_ind_1', '3', 'Current/latest publisher', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_260_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_260_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '260', 'a', 'Place of publication, distribution, etc.  (R)
May contain the abbreviation [S.l.] when the place is unknown.','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: authority tag: 020 file: www.loc.gov/marc/authority/concise/ad020.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_020_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_020_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_authority_020_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_authority_020_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('authority', 1, '020', 'a', 'International Standard Book Number  (NR)
Valid ISBN. ISBN and the
                     embedded hyphens may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 015 file: www.loc.gov/marc/bibliographic/concise/bd015.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_015_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_015_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_015_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_015_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '015', 'a', 'National bibliography number  (R)','t','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 020 file: www.loc.gov/marc/bibliographic/concise/bd020.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_020_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_020_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_020_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_020_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '020', 'a', 'International Standard Book Number  (NR)
Valid ISBN. ISBN and the
                     embedded hyphens may be generated for display.','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 024 file: www.loc.gov/marc/bibliographic/concise/bd024.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_024_ind_1', BTRIM($label$

First - Type of standard number or code

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '0', 'International Standard Recording Code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '1', 'Universal Product Code', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '2', 'International Standard Music Number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '3', 'International Article Number', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '4', 'Serial Item and Contribution Identifier', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '7', 'Source specified in subfield $2', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_1', '8', 'Unspecified type of standard number or code', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_024_ind_2', BTRIM($label$

Second - Difference indicator

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_2', '#', 'No information provided', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_2', '0', 'No difference', '');
SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_024_ind_2', '1', 'Difference', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '024', 'a', 'Standard number or code  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;


-- category: biblio tag: 027 file: www.loc.gov/marc/bibliographic/concise/bd027.html
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_027_ind_1', BTRIM($label$

First - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_027_ind_1', '#', 'Undefined', '');
INSERT INTO config.record_attr_definition (name, label, description) VALUES ('marc21_biblio_027_ind_2', BTRIM($label$

Second - Undefined

$label$), BTRIM($desc$



$desc$)) ON CONFLICT (name) DO UPDATE SET label = EXCLUDED.label, description = EXCLUDED.description;


SELECT evergreen.simple_insert_update_coded_value_map('marc21_biblio_027_ind_2', '#', 'Undefined', '');
INSERT INTO config.marc_subfield (marc_record_type, marc_format, tag, code, description, repeatable, hidden, mandatory)
              VALUES ('biblio', 1, '027', 'a', 'Standard technical report number  (NR)','f','f','f')
              ON CONFLICT (marc_record_type, marc_format, tag, code) WHERE owner IS NULL
              DO UPDATE SET description = EXCLUDED.description, repeatable = EXCLUDED.repeatable;



    DO $$
    DECLARE
        rec_cat config.marc_record_type;
        rec_tag TEXT;
    BEGIN
        
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '014';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '016';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '020';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '022';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '023';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '024';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '031';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '034';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '035';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '040';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '042';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '043';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '045';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '046';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '050';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '052';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '053';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '055';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '060';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '065';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '066';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '070';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '072';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '073';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '075';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '080';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '082';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '083';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '086';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '087';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '09x';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '100';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '110';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '111';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '130';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '147';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '148';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '150';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '151';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '155';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '162';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '180';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '181';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '182';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '185';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '260';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '335';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '336';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '348';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '360';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '361';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '368';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '370';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '371';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '372';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '373';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '374';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '375';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '376';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '377';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '378';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '380';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '381';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '382';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '383';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '384';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '385';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '386';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '387';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '388';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '400';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '410';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '411';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '430';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '447';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '448';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '450';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '451';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '455';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '462';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '480';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '481';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '482';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '485';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '500';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '510';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '511';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '530';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '547';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '548';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '550';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '551';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '555';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '562';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '580';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '581';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '582';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '585';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '640';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '641';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '642';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '643';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '644';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '645';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '646';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '663';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '664';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '665';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '666';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '667';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '670';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '672';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '673';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '675';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '677';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '678';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '680';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '681';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '682';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '688';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '700';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '710';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '711';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '730';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '747';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '748';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '750';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '751';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '755';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '762';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '780';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '781';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '782';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '785';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '788';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '856';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '857';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '880';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '883';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '884';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'authority'::config.marc_record_type;
            rec_tag := '885';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '013';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '015';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '016';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '017';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '018';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '020';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '022';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '023';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '024';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '025';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '026';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '027';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '028';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '030';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '031';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '032';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '033';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '034';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '035';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '036';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '037';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '038';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '040';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '041';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '042';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '043';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '044';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '045';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '046';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '047';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '048';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '050';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '051';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '052';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '055';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '060';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '061';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '066';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '070';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '071';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '072';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '074';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '080';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '082';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '083';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '084';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '085';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '086';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '088';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '09x';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '100';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '110';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '111';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '130';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '210';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '222';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '240';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '242';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '243';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '245';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '246';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '247';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '250';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '251';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '254';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '255';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '256';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '257';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '258';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '260';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '263';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '264';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '270';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '300';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '306';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '307';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '310';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '321';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '334';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '335';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '336';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '337';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '338';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '340';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '341';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '342';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '343';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '344';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '345';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '346';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '347';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '348';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '351';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '352';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '353';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '355';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '357';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '361';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '362';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '363';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '365';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '366';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '370';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '377';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '380';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '381';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '382';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '383';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '384';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '385';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '386';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '387';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '388';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '490';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '500';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '501';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '502';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '504';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '505';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '506';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '507';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '508';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '510';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '511';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '513';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '514';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '515';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '516';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '518';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '520';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '521';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '522';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '524';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '525';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '526';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '530';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '532';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '533';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '534';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '535';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '536';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '538';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '540';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '541';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '542';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '544';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '545';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '546';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '547';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '550';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '552';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '555';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '556';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '561';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '562';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '563';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '565';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '567';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '580';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '581';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '583';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '584';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '585';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '586';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '588';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '59x';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '600';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '610';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '611';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '630';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '647';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '648';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '650';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '651';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '653';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '654';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '655';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '656';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '657';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '658';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '662';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '688';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '69x';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '700';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '710';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '711';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '720';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '730';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '740';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '751';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '752';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '753';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '754';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '758';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '760';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '762';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '765';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '767';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '770';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '772';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '773';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '774';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '775';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '776';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '777';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '780';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '785';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '786';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '787';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '788';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '800';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '810';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '811';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '830';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '850';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '852';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '856';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '857';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '880';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '881';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '882';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '883';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '884';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '885';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '886';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    
            rec_cat := 'biblio'::config.marc_record_type;
            rec_tag := '887';
            IF NOT EXISTS (
                SELECT 1
                FROM config.marc_field
                WHERE marc_record_type = rec_cat AND tag = rec_tag
            ) THEN
                RAISE INFO 'Missing combination: record_category=%, tag=%', rec_cat, rec_tag;
            END IF;
            
    END $$;


SELECT evergreen.upgrade_deps_block_check('1417', :eg_version);

CREATE OR REPLACE FUNCTION action.process_ingest_queue_entry (qeid BIGINT) RETURNS BOOL AS $func$
DECLARE
    ingest_success  BOOL := NULL;
    qe              action.ingest_queue_entry%ROWTYPE;
    aid             authority.record_entry.id%TYPE;
BEGIN

    SELECT * INTO qe FROM action.ingest_queue_entry WHERE id = qeid;
    IF qe.ingest_time IS NOT NULL OR qe.override_by IS NOT NULL THEN
        RETURN TRUE; -- Already done
    END IF;

    IF qe.action = 'delete' THEN
        IF qe.record_type = 'biblio' THEN
            SELECT metabib.indexing_delete(r.*, qe.state_data) INTO ingest_success FROM biblio.record_entry r WHERE r.id = qe.record;
        ELSIF qe.record_type = 'authority' THEN
            SELECT authority.indexing_delete(r.*, qe.state_data) INTO ingest_success FROM authority.record_entry r WHERE r.id = qe.record;
        END IF;
    ELSE
        IF qe.record_type = 'biblio' THEN
            IF qe.action = 'propagate' THEN
                SELECT authority.apply_propagate_changes(qe.state_data::BIGINT, qe.record) INTO aid;
                SELECT aid = qe.state_data::BIGINT INTO ingest_success;
            ELSE
                SELECT metabib.indexing_update(r.*, qe.action = 'insert', qe.state_data) INTO ingest_success FROM biblio.record_entry r WHERE r.id = qe.record;
            END IF;
        ELSIF qe.record_type = 'authority' THEN
            SELECT authority.indexing_update(r.*, qe.action = 'insert', qe.state_data) INTO ingest_success FROM authority.record_entry r WHERE r.id = qe.record;
        END IF;
    END IF;

    IF NOT ingest_success THEN
        UPDATE action.ingest_queue_entry SET fail_time = NOW() WHERE id = qe.id;
        PERFORM * FROM config.internal_flag WHERE name = 'ingest.queued.abort_on_error' AND enabled;
        IF FOUND THEN
            RAISE EXCEPTION 'Ingest action of % on %.record_entry % for queue entry % failed', qe.action, qe.record_type, qe.record, qe.id;
        ELSE
            RAISE WARNING 'Ingest action of % on %.record_entry % for queue entry % failed', qe.action, qe.record_type, qe.record, qe.id;
        END IF;
    ELSE
        IF qe.record_type = 'biblio' THEN
            PERFORM reporter.simple_rec_update(qe.record, qe.action = 'delete');
        END IF;
        UPDATE action.ingest_queue_entry SET ingest_time = NOW() WHERE id = qe.id;
    END IF;

    RETURN ingest_success;
END;
$func$ LANGUAGE PLPGSQL;



SELECT evergreen.upgrade_deps_block_check('1418', :eg_version);

INSERT INTO config.global_flag (name, enabled, value, label) 
    VALUES (
        'search.max_suggestion_search_terms',
        TRUE,
        3,
        oils_i18n_gettext(
            'search.max_suggestion_search_terms',
            'Limit suggestion generation to searches with this many terms or less',
            'cgf',
            'label'
        )
    );


/* UNDO
DELETE FROM config.global_flag WHERE name = 'search.max_suggestion_search_terms';
*/

COMMIT;

-- Update auditor tables to catch changes to source tables.
--   Can be removed/skipped if there were no schema changes.
SELECT auditor.update_auditors();
