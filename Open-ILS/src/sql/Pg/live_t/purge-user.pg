BEGIN;

INSERT INTO acq.invoice (id, receiver, provider, shipper, recv_method, inv_ident, closed_by)
    VALUES (2222, 1, 1, 1, 'EDI', 'ABC123', 10);

INSERT INTO action.curbside (id, patron, org, notes)
    VALUES (2222, 10, 1, 'Private info');

INSERT INTO actor.usr_message (usr, message, sending_lib)
    VALUES (10, 'Private message', 1);

INSERT INTO action.hold_request(usr, requestor, pickup_lib, request_lib, selection_ou, hold_type, target)
    VALUES (11, 11, 1, 1, 1, 'T', 22);
INSERT INTO action.hold_request_reset_reason_entry(reset_reason, hold, requestor)
    VALUES (2, CURRVAL('action.hold_request_id_seq'::regclass), 10);

SELECT plan(4);

SELECT * FROM actor.usr_purge_data(10, 20);

SELECT is(
    (SELECT closed_by FROM acq.invoice WHERE id = 2222)::INTEGER,
    20::INTEGER,
    'Acq invoice is now owned by dest_usr'
);

SELECT is(
    (SELECT notes FROM action.curbside WHERE id = 2222),
    NULL,
    'Curbside notes are redacted'
);

SELECT is_empty(
    ('SELECT id FROM actor.usr_message WHERE usr=10 AND NOT deleted'),
    'User messages are marked as deleted'
);

SELECT is(
    (SELECT requestor FROM action.hold_request_reset_reason_entry WHERE id = CURRVAL('action.hold_request_reset_reason_entry_id_seq'::regclass)::INTEGER),
    20::INTEGER,
    'Requestor of hold reset entry is now dest_usr'
);

SELECT * FROM finish();
ROLLBACK;
