[% 

##############################################################################
# This file contains skin-level configuration settings.
# Many of these settings will probably migrate into actor.org_unit_settings.
##############################################################################

##############################################################################
# Holds blocking
##############################################################################
# Prevent the "Place hold" link from being displayed if a copy is available.
# This is not perfect, given the umpteen different types of holds that are
# possible, but addresses the major use case for libraries that don't want
# to fetch copies from the shelves.
ctx.holds_block.enabled = 'false';

##############################################################################
# RefWorks configuration
##############################################################################
# RefWorks is a Web-based citation manager
ctx.refworks.enabled = 'false';

# Base URL for RefWorks
ctx.refworks.url = 'http://www.refworks.com';

# Some sites have a hosted RefWorks instance at a different URL;
# in addition, you might want to proxy access to RefWorks - for example:
# ctx.refworks.url = 'http://librweb.laurentian.ca/login?url=http://refworks.scholarsportal.info';

##############################################################################
# OpenURL resolution
##############################################################################
# Evergreen provides the ability to point at an OpenURL resolver to find
# electronic resources for a given ISSN or ISBN. Currently, only the SFX
# resolver is supported.
#
# You must enable the open-ils.resolver instance in opensrf.xml to use
# this feature.
##############################################################################

openurl.enabled = 'false';
openurl.baseurl = 'http://sfx.example.com/instance';

##############################################################################
# Google Analytics support
##############################################################################
# You can enable Google Analytics support in Evergreen by entering a
# valid Google Analytics code and changing 'false' to 'true'
##############################################################################
google_analytics.enabled = 'false';
google_analytics.code = 'UA-9999999-99';

##############################################################################
# Enable "Forgot your password?" prompt at login
##############################################################################
reset_password = 'true';

##############################################################################
# Misc. UI Settings
##############################################################################

##############################################################################
# Size of the jacket image to display on the record detail summary.
# Sizes vary depending on added content provider.
# Options are "small", "medium", and "large"
record.summary.jacket_size = 'medium';


##############################################################################
# Define the order in which facets are displayed.  Only facets listed here 
# will be displayed.  To show all facets sorted by name, comment out this 
# setting.  
# facet.display = [] # show no facets
facet.display = [
    {facet_class => 'author',  facet_order => ['personal', 'corporate']},
    {facet_class => 'subject', facet_order => ['topic']},
    {facet_class => 'series',  facet_order => ['seriestitle']},
    {facet_class => 'subject', facet_order => ['name', 'geographic']}
];
facet.default_display_count = 5;

##############################################################################
# Define the advanced search limiters and labels.
# adv_label is the (translated) label for the limiter
# adv_attr is an array of possible limiters, the first one that has any
#   values will be used
# adv_filter is the same as adv_attr, but for search filter groups
# adv_break will end the current row. If specified with a label/attr it
#   will do so *after* that limiter.
# adv_special will drop in a special entry:
#   lib_selector will put the search library box (with limit to available)
#   pub_year will put the publication year box
#   sort_selector will put the sort results selector

search.adv_config = [
    {adv_label => l("Item Type"), adv_attr => ["mattype", "item_type"]},
    {adv_label => l("Item Form"), adv_attr => "item_form"},
    {adv_label => l("Language"),  adv_attr => "item_lang"},
    {adv_label => l("Audience"),  adv_attr => ["audience_group", "audience"], adv_break => 1},
    {adv_label => l("Video Format"), adv_attr => "vr_format"},
    {adv_label => l("Bib Level"), adv_attr => "bib_level"},
    {adv_label => l("Literary Form"), adv_attr => "lit_form", adv_break => 1},
    {adv_label => l("Search Library"), adv_special => "lib_selector"},
    {adv_label => l("Publication Year"), adv_special => "pub_year"},
    {adv_label => l("Sort Results"), adv_special => "sort_selector"},
];

##############################################################################
# For each search box the default "query type" value can be specified here
# This is the actual backend value, not the label
# Also note that including more than the row count entries won't add rows
# The first entry should be used as a default for "basic" search as well

search.default_qtypes = ['keyword','title','author'];

##############################################################################
# Basic Search Box definition
# This allows selection of what, exactly, basic search uses for a selection
# box. Previously it was hardcoded to use an attr box of mattype or item_type.
#
# type can be "attr" or "filter"
# group is the attr or filter entries you want to check for
# none_label is the label for the default nothing selected entry.

search.basic_config = {
    type => 'attr',
    group => ['mattype','item_type'],
    none_label => l("All Formats"),
};
##############################################################################
# This will allow the display and use of a Search Template dropdown that 
# staff may use to select often used searches. Upon selection of a Template, the 
# Advanced Search page's Global Rows and Search Filters will populate according
# to the Template. Templates are configurable at 
# Admin->WorkStation Administraion->Search Templates 

search.allow_templates = 'true';

%]
